{"version":3,"sources":["webpack://ressurectit.github.io/./app/services/api/source/source.service.ts","webpack://ressurectit.github.io/./app/modules/asSource/pipes/asSource/asSource.pipe.ts","webpack://ressurectit.github.io/./app/misc/rxjsOperators/handle404.ts","webpack://ressurectit.github.io/./app/modules/sourceCode/components/sourceCode/sourceCode.component.html","webpack://ressurectit.github.io/./app/modules/sourceCode/components/sourceCode/sourceCode.component.ts","webpack://ressurectit.github.io/./app/samples/grid/configuration/configuration.component.ts","webpack://ressurectit.github.io/./app/samples/grid/configuration/configuration.component.html","webpack://ressurectit.github.io/./app/samples/grid/configuration/configurationSample.component.ts","webpack://ressurectit.github.io/./app/samples/grid/configuration/configurationSample.component.html"],"names":["SourceService","getSource","_path","C","Observable","AsSourcePipe","constructor","_sourceSvc","transform","path","type","source","this","pipe","catchError","error","status","of","throwError","toPromise","SourceCodeComponent","showSources","ConfigurationComponent","ConfigurationSampleComponent","gridOptions","plugins","noDataRenderer","options","texts","noData","paging","itemsPerPageValues","provide","useValue","dataLoader","data","P","initialItemsPerPage"],"mappings":"qrBASaA,EAAa,cAAS,KASxBC,UAAwBC,GAE3B,OAAO,O,qEAXFF,KAAa,GAAbA,I,uBAAAA,EAAa,QAAbA,EAAa,gBAFD,SAWrB,IAHC,IAAAG,MACA,OAAS,YACT,QAAI,W,EACa,E,GAAA,QAAK,Q,yGAAwBC,EAAA,I,8BATtCJ,EAAa,IADzB,OAAQ,wFACIA,G,2DCGN,MAAMK,EAGTC,YAAoBC,GAAA,KAAAA,aAWPC,UAAUC,EAAWC,EAAe,c,qCAE7C,IAAIC,QAAeC,KAAKL,WAAWN,UAAUQ,GACxCI,MCrBDF,GAEGA,EAAOE,MAAK,EAAAC,EAAA,IAAWC,GAEP,KAAhBA,EAAMC,QAEE,EAAAC,MAAG,OAGP,EAAAC,EAAA,GAAWH,QDajBI,YAEL,MAAgB,UAAGT,MACzBC,UAAU,aAAeF,a,iUArBdJ,GAAY,Y,mCAAZA,EAAY,W,qLEZzB,gBACI,QACJ,Q,KAFwC,0BCcjC,MAAMe,EARb,cAeW,KAAAC,aAAuB,G,iCAPrBD,I,kBAAAA,EAAmB,+C,MAAA,0K,ODdhC,qBAIA,cAAgF,+DAC5E,iBACJ,Q,MANM,0BAIe,wC,+MCOL,CAAC,MAAkB,qB,2NCA5B,MAAME,G,iCAAAA,I,kBAAAA,EAAsB,2OCXnC,aAAI,uBAAa,OAEjB,sBACI,wBACI,oBACI,gB,mCACJ,OAEA,oBACI,gB,qCACJ,OAEA,qBACI,iB,qCACJ,OACJ,OACJ,OAEA,iC,MAbiB,+GAIA,0HAIA,kF,wUCgCV,MAAMC,EAUTjB,cAEIM,KAAKY,YACL,CACIC,QACA,CACIC,eACA,CACIC,QACA,CACIC,MACA,CACIC,OAAQ,+BAIpBC,OACA,CACIH,QACA,CAEII,mBAAoB,CAAC,EAAG,GAAI,S,iCA/BvCR,I,kBAAAA,EAA4B,mDAlCrC,CAGI,CACIS,QAAS,KACTC,SACA,CACIR,QACA,CACIS,WACA,CAEIxB,KAAM,KACNiB,QACA,CACIQ,KAAM,QAQ1B,CACIH,QAAS,EAAAI,EACTH,SACA,CACIF,mBAAoB,CAAC,GAAI,GAAI,IAC7BM,oBAAqB,QAGhC,sVC1CL,aAAI,6FAAmF,OAEvF,kBACI,+BACI,+BACA,+BACA,+BACA,+BACA,+BACJ,OACJ,OAEA,eAEA,cAAI,+DAAoD,OAExD,qBACI,gCACI,gCACA,gCACA,gCACA,gCACA,gCACJ,OACJ,Q,MARS,2C","file":"4911.client.es2015.chunk.918785307701058d23f0.js","sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {BaseUrl, Produces, ResponseType, GET, Path, Cache, RESTClient} from \"@anglr/rest\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n/**\r\n * Service used to obtain source files\r\n */\r\n@Injectable({providedIn: 'root'})\r\n@BaseUrl('https://raw.githubusercontent.com/ressurectit/ressurectit.github.io.src/master/app/')\r\nexport class SourceService extends RESTClient\r\n{\r\n    /**\r\n     * Gets content file from path\r\n     * @param _path Path to content file\r\n     */\r\n    @Cache()\r\n    @Produces(ResponseType.Text)\r\n    @GET('{path}')\r\n    public getSource(@Path('path') _path: string): Observable<string>\r\n    {\r\n        return null;\r\n    }\r\n}","import {Pipe, PipeTransform} from \"@angular/core\";\r\n\r\nimport {SourceService} from \"../../../../services/api/source\";\r\nimport {handle404} from \"../../../../misc/rxjsOperators\";\r\n\r\n/**\r\n * Obtains source for provided string\r\n */\r\n@Pipe(\r\n{\r\n    name: \"asSource\"\r\n})\r\nexport class AsSourcePipe implements PipeTransform\r\n{\r\n    //######################### constructor #########################\r\n    constructor(private _sourceSvc: SourceService)\r\n    {\r\n    }\r\n\r\n    //######################### public methods #########################\r\n\r\n    /**\r\n     * Returns observable for obtaining source\r\n     * @param path Value to be used as source path\r\n     * @param type Type of source\r\n     */\r\n    public async transform(path: any, type: string = 'typescript'): Promise<string>\r\n    {\r\n        let source = await this._sourceSvc.getSource(path)\r\n            .pipe(handle404())\r\n            .toPromise();\r\n\r\n        return '``` ' + `${type}\r\n${source ?? 'not found ' + path}\r\n` + '```';\r\n    }\r\n}","import {Observable, MonoTypeOperatorFunction, of, throwError} from \"rxjs\";\r\nimport {catchError} from \"rxjs/operators\";\r\n\r\n/**\r\n * Handles 404 http code as response\r\n */\r\nexport function handle404<TResponse>(): MonoTypeOperatorFunction<TResponse|null>\r\n{\r\n    return (source: Observable<TResponse|null>) =>\r\n    {\r\n        return source.pipe(catchError(error =>\r\n        {\r\n            if(error.status == 404)\r\n            {\r\n                return of(null);\r\n            }\r\n\r\n            return throwError(error);\r\n        }));\r\n    };\r\n}","<div *ngIf=\"showSources\" class=\"flex-1\" @slideInOut>\r\n    <ng-content></ng-content>\r\n</div>\r\n\r\n<a class=\"show-icon\" [class.absolute]=\"showSources\" title=\"Show / hide sources\" (click)=\"showSources = !showSources\">\r\n    <span class=\"fas fa-code\"></span>\r\n</a>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {slideInOutTrigger} from '@anglr/animations';\r\n\r\n/**\r\n * Component that is used for displaying source codes\r\n */\r\n@Component(\r\n{\r\n    selector: 'source-code',\r\n    templateUrl: 'sourceCode.component.html',\r\n    styleUrls: ['sourceCode.component.scss'],\r\n    animations: [slideInOutTrigger],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SourceCodeComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Indication whether show/hide sources\r\n     */\r\n    public showSources: boolean = false;\r\n}","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Configuration sample for grid component\r\n */\r\n@Component(\r\n{\r\n    selector: 'configuration-view',\r\n    templateUrl: 'configuration.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ConfigurationComponent\r\n{\r\n}","<h3>Configuration</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"configurationSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/grid/configuration/configurationSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"configurationSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/grid/configuration/configurationSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"grid.global.conf.ts\">\r\n            <div [renderMarkdown]=\"'boot/grid.global.conf.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<configuration-sample></configuration-sample>","import {Component, ChangeDetectionStrategy, ValueProvider} from \"@angular/core\";\r\nimport {GridOptions, SimpleOrdering, BasicPagingOptions, SyncDataLoaderComponent, SyncDataLoaderOptions, GRID_OPTIONS, PAGING_OPTIONS, NoDataRendererOptions} from \"@anglr/grid\";\r\n\r\n/**\r\n * Configuration sample for grid component\r\n */\r\n@Component(\r\n{\r\n    selector: 'configuration-sample',\r\n    templateUrl: 'configurationSample.component.html',\r\n    providers:\r\n    [\r\n        //one way is to provide all grid options\r\n        <ValueProvider>\r\n        {\r\n            provide: GRID_OPTIONS,\r\n            useValue: <GridOptions>\r\n            {\r\n                plugins:\r\n                {\r\n                    dataLoader:\r\n                    {\r\n                        //use sync data loader as grid data loader plugin for all 3 grids\r\n                        type: SyncDataLoaderComponent,\r\n                        options: <SyncDataLoaderOptions<any, SimpleOrdering>>\r\n                        {\r\n                            data: []\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        //other way is to provide only specific options for one plugin\r\n        <ValueProvider>\r\n        {\r\n            provide: PAGING_OPTIONS,\r\n            useValue: <BasicPagingOptions>\r\n            {\r\n                itemsPerPageValues: [15, 30, 60],\r\n                initialItemsPerPage: 15\r\n            }\r\n        }\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ConfigurationSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Grid options that are used for grid initialization\r\n     */\r\n    public gridOptions: GridOptions;\r\n\r\n    //######################### constructor #########################\r\n    constructor()\r\n    {\r\n        this.gridOptions =\r\n        {\r\n            plugins:\r\n            {\r\n                noDataRenderer:\r\n                {\r\n                    options: <NoDataRendererOptions<any>>\r\n                    {\r\n                        texts:\r\n                        {\r\n                            noData: \"See there are no data :).\"\r\n                        }\r\n                    }\r\n                },\r\n                paging:\r\n                {\r\n                    options: <BasicPagingOptions>\r\n                    {\r\n                        //available values for items per page buttons\r\n                        itemsPerPageValues: [5, 10, 15]\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n}","<h4>Component scope provided paging options, globally provided no data renderer options</h4>\r\n\r\n<ng-grid>\r\n    <basic-table-metadata>\r\n        <basic-table-column id=\"country\" name=\"country\" title=\"Country\"></basic-table-column>\r\n        <basic-table-column id=\"city\" name=\"city\" title=\"City\"></basic-table-column>\r\n        <basic-table-column id=\"zip\" name=\"zip\" title=\"ZIP\"></basic-table-column>\r\n        <basic-table-column id=\"street\" name=\"street\" title=\"Street\"></basic-table-column>\r\n        <basic-table-column id=\"houseNumber\" name=\"houseNumber\" title=\"House Number\"></basic-table-column>\r\n    </basic-table-metadata>\r\n</ng-grid>\r\n\r\n<hr class=\"margin-top-big\">\r\n\r\n<h4>Locally provided paging and no data renderer options</h4>\r\n\r\n<ng-grid [gridOptions]=\"gridOptions\">\r\n    <basic-table-metadata>\r\n        <basic-table-column id=\"country\" name=\"country\" title=\"Country\"></basic-table-column>\r\n        <basic-table-column id=\"city\" name=\"city\" title=\"City\"></basic-table-column>\r\n        <basic-table-column id=\"zip\" name=\"zip\" title=\"ZIP\"></basic-table-column>\r\n        <basic-table-column id=\"street\" name=\"street\" title=\"Street\"></basic-table-column>\r\n        <basic-table-column id=\"houseNumber\" name=\"houseNumber\" title=\"House Number\"></basic-table-column>\r\n    </basic-table-metadata>\r\n</ng-grid>"],"sourceRoot":""}