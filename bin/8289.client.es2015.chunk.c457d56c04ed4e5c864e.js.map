{"version":3,"sources":["webpack://ressurectit.github.io/./app/boot/commonShared.module.ts","webpack://ressurectit.github.io/./app/services/api/source/source.service.ts","webpack://ressurectit.github.io/./app/modules/asSource/pipes/asSource/asSource.pipe.ts","webpack://ressurectit.github.io/./app/misc/rxjsOperators/handle404.ts","webpack://ressurectit.github.io/./app/modules/sourceCode/components/sourceCode/sourceCode.component.html","webpack://ressurectit.github.io/./app/modules/sourceCode/components/sourceCode/sourceCode.component.ts","webpack://ressurectit.github.io/./app/samples/select/absolute/absolute.component.ts","webpack://ressurectit.github.io/./app/samples/select/absolute/absolute.component.html","webpack://ressurectit.github.io/./app/samples/select/absolute/absoluteSample.component.ts","webpack://ressurectit.github.io/./app/samples/select/absolute/absoluteSample.component.html","webpack://ressurectit.github.io/./app/samples/select/basicLazy/basicLazy.component.ts","webpack://ressurectit.github.io/./app/samples/select/basicLazy/basicLazy.component.html","webpack://ressurectit.github.io/./app/samples/select/basicLazy/basicLazySample.component.html","webpack://ressurectit.github.io/./app/samples/select/basicLazy/basicLazySample.component.ts","webpack://ressurectit.github.io/./app/samples/select/basicSample/basic.component.ts","webpack://ressurectit.github.io/./app/samples/select/basicSample/basic.component.html","webpack://ressurectit.github.io/./app/samples/select/basicSample/basicSample.component.ts","webpack://ressurectit.github.io/./app/samples/select/basicSample/basicSample.component.html","webpack://ressurectit.github.io/./app/samples/select/config/config.component.ts","webpack://ressurectit.github.io/./app/samples/select/config/config.component.html","webpack://ressurectit.github.io/./app/samples/select/config/configSample.component.ts","webpack://ressurectit.github.io/./app/samples/select/config/configSample.component.html","webpack://ressurectit.github.io/./app/samples/select/customReadonly/customReadonly.component.ts","webpack://ressurectit.github.io/./app/samples/select/customReadonly/customReadonly.component.html","webpack://ressurectit.github.io/./app/samples/select/customReadonly/customReadonlySample.component.ts","webpack://ressurectit.github.io/./app/samples/select/customReadonly/customReadonlySample.component.html","webpack://ressurectit.github.io/./app/samples/select/customReadonly/customReadonlyState.component.ts","webpack://ressurectit.github.io/./app/samples/select/customReadonly/customReadonlyState.component.html","webpack://ressurectit.github.io/./app/samples/select/customTemplate/customTemplate.component.ts","webpack://ressurectit.github.io/./app/samples/select/customTemplate/customTemplate.component.html","webpack://ressurectit.github.io/./app/samples/select/customTemplate/customTemplateSample.component.html","webpack://ressurectit.github.io/./app/samples/select/customTemplate/customTemplateSample.component.ts","webpack://ressurectit.github.io/./app/samples/select/dynamic/dynamic.component.ts","webpack://ressurectit.github.io/./app/samples/select/dynamic/dynamic.component.html","webpack://ressurectit.github.io/./app/samples/select/dynamic/dynamicSample.component.ts","webpack://ressurectit.github.io/./app/samples/select/dynamic/dynamicSample.component.html","webpack://ressurectit.github.io/./app/samples/select/edit/edit.component.ts","webpack://ressurectit.github.io/./app/samples/select/edit/edit.component.html","webpack://ressurectit.github.io/./app/samples/select/edit/editSample.component.ts","webpack://ressurectit.github.io/./app/samples/select/edit/editSample.component.html","webpack://ressurectit.github.io/./app/samples/select/external/external.component.ts","webpack://ressurectit.github.io/./app/samples/select/external/external.component.html","webpack://ressurectit.github.io/./app/samples/select/liveSearch/liveSearch.component.ts","webpack://ressurectit.github.io/./app/samples/select/liveSearch/liveSearch.component.html","webpack://ressurectit.github.io/./app/samples/select/liveSearch/liveSearchSample.component.ts","webpack://ressurectit.github.io/./app/samples/select/liveSearch/liveSearchSample.component.html","webpack://ressurectit.github.io/./app/samples/select/modalPopup/modalPopup.component.ts","webpack://ressurectit.github.io/./app/samples/select/modalPopup/modalPopup.component.html","webpack://ressurectit.github.io/./app/samples/select/modalPopup/modalPopupSample.component.ts","webpack://ressurectit.github.io/./app/samples/select/modalPopup/modalPopupSample.component.html","webpack://ressurectit.github.io/./app/samples/select/multiple/multiple.component.ts","webpack://ressurectit.github.io/./app/samples/select/multiple/multiple.component.html","webpack://ressurectit.github.io/./app/samples/select/multiple/multipleSample.component.ts","webpack://ressurectit.github.io/./app/samples/select/multiple/multipleSample.component.html","webpack://ressurectit.github.io/./app/samples/select/readonly/readonly.component.ts","webpack://ressurectit.github.io/./app/samples/select/readonly/readonly.component.html","webpack://ressurectit.github.io/./app/samples/select/readonly/readonlySample.component.ts","webpack://ressurectit.github.io/./app/samples/select/readonly/readonlySample.component.html","webpack://ressurectit.github.io/./app/samples/select/selectSamples.module.ts","webpack://ressurectit.github.io/./node_modules/moment/dist/locale|sync|/^/.*$"],"names":["CommonSharedModule","A","SourceService","getSource","_path","C","Observable","AsSourcePipe","constructor","_sourceSvc","transform","path","type","source","this","pipe","catchError","error","status","of","throwError","toPromise","SourceCodeComponent","showSources","AbsoluteComponent","AbsoluteSampleComponent","selectControl","BasicLazyComponent","BasicLazySampleComponent","changeDetector","lazyOptions","setTimeout","kod","popis","detectChanges","BasicComponent","BasicSampleComponent","ConfigComponent","ConfigSampleComponent","selectOptions","plugins","normalState","options","texts","nothingSelected","provide","useValue","CustomReadonlyComponent","CustomReadonlySampleComponent","readonly","readonlyState","CustomReadonlyStateComponent","CustomTemplateComponent","CustomTemplateSampleComponent","DynamicComponent","DynamicSampleComponent","_dataSvc","_getData","value","isString","result","getCis","content","length","map","itm","text","liveSearch","valueHandler","dynamicOptionsCallback","optionsGatherer","D","EditComponent","EditSampleComponent","selectMultipleControl","ExternalComponent","LiveSearchComponent","LiveSearchSampleComponent","ModalPopupComponent","ModalPopupSampleComponent","MultipleComponent","MultipleSampleComponent","ReadonlyComponent","ReadonlySampleComponent","SelectSamplesModule","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"8289.client.es2015.chunk.c457d56c04ed4e5c864e.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {ProgressIndicatorModule} from '@anglr/common';\nimport {GridModule, GroupedGridModule} from '@anglr/grid';\nimport {VirtualScrollTableContentRendererModule} from '@anglr/grid/material';\nimport {NgSelectModule, NgSelectEditModule} from '@anglr/select';\nimport {NgSelectDialogPopupModule} from '@anglr/select/material';\nimport {CommonModule as NgCommonModule} from '@anglr/common';\nimport {NumeralModule} from '@anglr/common/numeral';\nimport {NumberInputModule} from '@anglr/common/forms';\nimport {MomentModule} from '@anglr/common/moment';\nimport {NotificationsModule} from '@anglr/notifications';\nimport {InternalServerErrorModule} from '@anglr/error-handling';\nimport {AuthorizationModule} from '@anglr/authentication';\nimport {MarkdownModule} from '@anglr/md-help/web';\nimport {TranslateModule} from '@ngx-translate/core';\n\nimport {AsSourceModule} from '../modules/asSource';\nimport {SourceCodeModule} from '../modules/sourceCode';\n\n/**\n * Common module for all other modules\n */\n@NgModule(\n{\n    exports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n        RouterModule,\n        ScrollingModule,\n        NgCommonModule,\n        ProgressIndicatorModule,\n        NumeralModule,\n        NumberInputModule,\n        MomentModule,\n        TranslateModule,\n        NotificationsModule,\n        GridModule,\n        GroupedGridModule,\n        VirtualScrollTableContentRendererModule,\n        AuthorizationModule,\n        NgSelectModule,\n        NgSelectEditModule,\n        NgSelectDialogPopupModule,\n        InternalServerErrorModule,\n        MatTabsModule,\n        MarkdownModule,\n        AsSourceModule,\n        SourceCodeModule\n    ]\n})\nexport class CommonSharedModule\n{\n}","import {Injectable} from \"@angular/core\";\r\nimport {BaseUrl, Produces, ResponseType, GET, Path, Cache, RESTClient} from \"@anglr/rest\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n/**\r\n * Service used to obtain source files\r\n */\r\n@Injectable({providedIn: 'root'})\r\n@BaseUrl('https://raw.githubusercontent.com/ressurectit/ressurectit.github.io.src/master/app/')\r\nexport class SourceService extends RESTClient\r\n{\r\n    /**\r\n     * Gets content file from path\r\n     * @param _path Path to content file\r\n     */\r\n    @Cache()\r\n    @Produces(ResponseType.Text)\r\n    @GET('{path}')\r\n    public getSource(@Path('path') _path: string): Observable<string>\r\n    {\r\n        return null;\r\n    }\r\n}","import {Pipe, PipeTransform} from \"@angular/core\";\r\n\r\nimport {SourceService} from \"../../../../services/api/source\";\r\nimport {handle404} from \"../../../../misc/rxjsOperators\";\r\n\r\n/**\r\n * Obtains source for provided string\r\n */\r\n@Pipe(\r\n{\r\n    name: \"asSource\"\r\n})\r\nexport class AsSourcePipe implements PipeTransform\r\n{\r\n    //######################### constructor #########################\r\n    constructor(private _sourceSvc: SourceService)\r\n    {\r\n    }\r\n\r\n    //######################### public methods #########################\r\n\r\n    /**\r\n     * Returns observable for obtaining source\r\n     * @param path Value to be used as source path\r\n     * @param type Type of source\r\n     */\r\n    public async transform(path: any, type: string = 'typescript'): Promise<string>\r\n    {\r\n        let source = await this._sourceSvc.getSource(path)\r\n            .pipe(handle404())\r\n            .toPromise();\r\n\r\n        return '``` ' + `${type}\r\n${source ?? 'not found ' + path}\r\n` + '```';\r\n    }\r\n}","import {Observable, MonoTypeOperatorFunction, of, throwError} from \"rxjs\";\r\nimport {catchError} from \"rxjs/operators\";\r\n\r\n/**\r\n * Handles 404 http code as response\r\n */\r\nexport function handle404<TResponse>(): MonoTypeOperatorFunction<TResponse|null>\r\n{\r\n    return (source: Observable<TResponse|null>) =>\r\n    {\r\n        return source.pipe(catchError(error =>\r\n        {\r\n            if(error.status == 404)\r\n            {\r\n                return of(null);\r\n            }\r\n\r\n            return throwError(error);\r\n        }));\r\n    };\r\n}","<div *ngIf=\"showSources\" class=\"flex-1\" @slideInOut>\r\n    <ng-content></ng-content>\r\n</div>\r\n\r\n<a class=\"show-icon\" [class.absolute]=\"showSources\" title=\"Show / hide sources\" (click)=\"showSources = !showSources\">\r\n    <span class=\"fas fa-code\"></span>\r\n</a>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {slideInOutTrigger} from '@anglr/animations';\r\n\r\n/**\r\n * Component that is used for displaying source codes\r\n */\r\n@Component(\r\n{\r\n    selector: 'source-code',\r\n    templateUrl: 'sourceCode.component.html',\r\n    styleUrls: ['sourceCode.component.scss'],\r\n    animations: [slideInOutTrigger],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SourceCodeComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Indication whether show/hide sources\r\n     */\r\n    public showSources: boolean = false;\r\n}","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Absolute sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'absolute-view',\r\n    templateUrl: 'absolute.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AbsoluteComponent\r\n{\r\n}","<h3>Absolute Select</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"absoluteSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/select/absolute/absoluteSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"absoluteSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/select/absolute/absoluteSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<absolute-sample></absolute-sample>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\n\r\n/**\r\n * Absolute sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'absolute-sample',\r\n    templateUrl: 'absoluteSample.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AbsoluteSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Control bound to select\r\n     */\r\n    public selectControl: FormControl = new FormControl(null);\r\n}","<div class=\"flex-row\">\r\n    <div class=\"flex-1 margin-right-small overflow-vertical-auto thin-scrollbar\" style=\"height: 100px;\">\r\n        <div><span class=\"bold\">Absolute: false</span> Value: {{selectControl?.value | json}}</div>\r\n\r\n        <ng-select [formControl]=\"selectControl\">\r\n            <ng-option value=\"first\" text=\"First value text\"></ng-option>\r\n            <ng-option value=\"second\" text=\"Second value text\"></ng-option>\r\n            <ng-option value=\"third\" text=\"Third value text\"></ng-option>\r\n            <ng-option value=\"fourth\" text=\"Fourth value text\"></ng-option>\r\n            <ng-option value=\"fifth\" text=\"Fifth value text\"></ng-option>\r\n        </ng-select>\r\n    </div>\r\n\r\n    <div class=\"flex-1 margin-left-small overflow-vertical-auto thin-scrollbar\" style=\"height: 100px;\">\r\n        <div><span class=\"bold\">Absolute: true</span> Value: {{selectControl?.value | json}}</div>\r\n\r\n        <ng-select [formControl]=\"selectControl\" [selectOptions]=\"{absolute: true}\">\r\n            <ng-option value=\"first\" text=\"First value text\"></ng-option>\r\n            <ng-option value=\"second\" text=\"Second value text\"></ng-option>\r\n            <ng-option value=\"third\" text=\"Third value text\"></ng-option>\r\n            <ng-option value=\"fourth\" text=\"Fourth value text\"></ng-option>\r\n            <ng-option value=\"fifth\" text=\"Fifth value text\"></ng-option>\r\n        </ng-select>\r\n    </div>\r\n</div>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Basic lazy sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'basic-lazy-view',\r\n    templateUrl: 'basicLazy.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BasicLazyComponent\r\n{\r\n}","<h3>Basic Lazy Select</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"basicLazySample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/select/basicLazy/basicLazySample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"basicLazySample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/select/basicLazy/basicLazySample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"kodPopisValue.interface.ts\">\r\n            <div [renderMarkdown]=\"'misc/types/kodPopisValue.interface.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<basic-lazy-sample></basic-lazy-sample>","<div>Value: {{selectControl?.value | json}}</div>\r\n\r\n<ng-select [formControl]=\"selectControl\">\r\n    <ng-option *ngFor=\"let option of lazyOptions\" [value]=\"option?.kod\" [text]=\"option?.popis\"></ng-option>\r\n</ng-select>","import {Component, ChangeDetectionStrategy, ChangeDetectorRef} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\n\r\nimport {KodPopisValue} from \"../../../misc/types\";\r\n\r\n/**\r\n * Basic lazy sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'basic-lazy-sample',\r\n    templateUrl: 'basicLazySample.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BasicLazySampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Control bound to select\r\n     */\r\n    public selectControl: FormControl = new FormControl(null);\r\n\r\n    /**\r\n     * Array of lazy options\r\n     */\r\n    public lazyOptions: KodPopisValue[] = [];\r\n\r\n    //######################### constructor #########################\r\n    constructor(changeDetector: ChangeDetectorRef)\r\n    {\r\n        setTimeout(() =>\r\n        {\r\n            this.lazyOptions = \r\n            [\r\n                {\r\n                    kod: 'first-x',\r\n                    popis: 'First value text'\r\n                },\r\n                {\r\n                    kod: 'second-x',\r\n                    popis: 'Second value text'\r\n                },\r\n                {\r\n                    kod: 'third-x',\r\n                    popis: 'Third value text'\r\n                },\r\n                {\r\n                    kod: 'fourth-x',\r\n                    popis: 'Fourth value text'\r\n                },\r\n                {\r\n                    kod: 'fifth-x',\r\n                    popis: 'Fifth value text'\r\n                }\r\n            ];\r\n\r\n            changeDetector.detectChanges();\r\n        }, 2500);\r\n    }\r\n}","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Basic sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'basic-view',\r\n    templateUrl: 'basic.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BasicComponent\r\n{\r\n}","<h3>Basic Select</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"basicSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/select/basicSample/basicSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"basicSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/select/basicSample/basicSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<basic-sample></basic-sample>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\n\r\n/**\r\n * Basic sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'basic-sample',\r\n    templateUrl: 'basicSample.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BasicSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Control bound to select\r\n     */\r\n    public selectControl: FormControl = new FormControl(null);\r\n}","<div>Value: {{selectControl?.value | json}}</div>\r\n\r\n<ng-select [formControl]=\"selectControl\">\r\n    <ng-option value=\"first\" text=\"First value text\"></ng-option>\r\n    <ng-option value=\"second\" text=\"Second value text\"></ng-option>\r\n    <ng-option value=\"third\" text=\"Third value text\"></ng-option>\r\n    <ng-option value=\"fourth\" text=\"Fourth value text\"></ng-option>\r\n    <ng-option value=\"fifth\" text=\"Fifth value text\"></ng-option>\r\n</ng-select>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Configuration sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'config-view',\r\n    templateUrl: 'config.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ConfigComponent\r\n{\r\n}","<h3>Configuration Select</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"configSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/select/config/configSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"configSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/select/config/configSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"kodPopisValue.interface.ts\">\r\n            <div [renderMarkdown]=\"'misc/types/kodPopisValue.interface.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"select.global.conf.ts\">\r\n            <div [renderMarkdown]=\"'boot/select.global.conf.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"constants.ts\">\r\n            <div [renderMarkdown]=\"'misc/constants.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<config-sample></config-sample>","import {Component, ChangeDetectionStrategy, ValueProvider} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {NgSelectOptions, NormalStateOptions, NORMAL_STATE_OPTIONS} from \"@anglr/select\";\r\n\r\nimport {KodPopisValue} from \"../../../misc/types\";\r\n\r\n/**\r\n * Configuration sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'config-sample',\r\n    templateUrl: 'configSample.component.html',\r\n    providers:\r\n    [\r\n        <ValueProvider>\r\n        {\r\n            provide: NORMAL_STATE_OPTIONS,\r\n            useValue: <NormalStateOptions<any>>\r\n            {\r\n                texts:\r\n                {\r\n                    nothingSelected: \"There is nothing :)\"\r\n                }\r\n            }\r\n        }\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ConfigSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Control bound to select\r\n     */\r\n    public selectControl: FormControl = new FormControl(null);\r\n\r\n    /**\r\n     * Select options that are used for select initialization, live search\r\n     */\r\n    public selectOptions: NgSelectOptions<KodPopisValue>;\r\n\r\n    //######################### constructor #########################\r\n    constructor()\r\n    {\r\n        this.selectOptions =\r\n        {\r\n            plugins:\r\n            {\r\n                normalState: \r\n                {\r\n                    options: <NormalStateOptions<any>>\r\n                    {\r\n                        texts:\r\n                        {\r\n                            nothingSelected: 'Nič nevybraté'\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n}","<div>Value: {{selectControl?.value | json}}</div>\r\n\r\n<div class=\"bold margin-top-small\">DI provided options</div>\r\n\r\n<ng-select [formControl]=\"selectControl\">\r\n    <ng-option value=\"first\" text=\"First value text\"></ng-option>\r\n    <ng-option value=\"second\" text=\"Second value text\"></ng-option>\r\n    <ng-option value=\"third\" text=\"Third value text\"></ng-option>\r\n    <ng-option value=\"fourth\" text=\"Fourth value text\"></ng-option>\r\n    <ng-option value=\"fifth\" text=\"Fifth value text\"></ng-option>\r\n</ng-select>\r\n\r\n<div class=\"bold margin-top-small\">Locally overriden options</div>\r\n\r\n<ng-select [formControl]=\"selectControl\" [selectOptions]=\"selectOptions\">\r\n    <ng-option value=\"first\" text=\"First value text\"></ng-option>\r\n    <ng-option value=\"second\" text=\"Second value text\"></ng-option>\r\n    <ng-option value=\"third\" text=\"Third value text\"></ng-option>\r\n    <ng-option value=\"fourth\" text=\"Fourth value text\"></ng-option>\r\n    <ng-option value=\"fifth\" text=\"Fifth value text\"></ng-option>\r\n</ng-select>\r\n\r\n<div class=\"bold margin-top-small\">All other select samples are using global DI provided options</div>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Custom readonly sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'custom-readonly-view',\r\n    templateUrl: 'customReadonly.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CustomReadonlyComponent\r\n{\r\n}","<h3>Custom Readonly Select</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"customReadonlySample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/select/customReadonly/customReadonlySample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"customReadonlySample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/select/customReadonly/customReadonlySample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"kodPopisValue.interface.ts\">\r\n            <div [renderMarkdown]=\"'misc/types/kodPopisValue.interface.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"customReadonlyState.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/select/customReadonly/customReadonlyState.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"customReadonlyState.component.html\">\r\n            <div [renderMarkdown]=\"'samples/select/customReadonly/customReadonlyState.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<custom-readonly-sample></custom-readonly-sample>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {NgSelectOptions} from \"@anglr/select\";\r\n\r\nimport {KodPopisValue} from \"../../../misc/types\";\r\nimport {CustomReadonlyStateComponent} from \"./customReadonlyState.component\";\r\n\r\n/**\r\n * Custom readonly sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'custom-readonly-sample',\r\n    templateUrl: 'customReadonlySample.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CustomReadonlySampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Control bound to select\r\n     */\r\n    public selectControl: FormControl = new FormControl(null);\r\n\r\n    /**\r\n     * Indication whether is NgSelect readonly\r\n     */\r\n    public readonly: boolean = false;\r\n\r\n    /**\r\n     * Select options that are used for select initialization\r\n     */\r\n    public selectOptions: NgSelectOptions<KodPopisValue>;\r\n    \r\n    //######################### constructor #########################\r\n    constructor()\r\n    {\r\n        this.selectOptions =\r\n        {\r\n            plugins:\r\n            {\r\n                readonlyState:\r\n                {\r\n                    type: CustomReadonlyStateComponent\r\n                }\r\n            }\r\n        };\r\n    }\r\n}","<div>Value: {{selectControl?.value | json}}</div>\r\n\r\n<button (click)=\"readonly = !readonly\" class=\"btn btn-primary\">\r\n    <span>{{readonly ? 'to normal' : 'to readonly'}}</span>\r\n</button>\r\n\r\n<ng-select [readonly]=\"readonly\" [selectOptions]=\"selectOptions\" [formControl]=\"selectControl\">\r\n    <ng-option value=\"first\" text=\"First value text\"></ng-option>\r\n    <ng-option value=\"second\" text=\"Second value text\"></ng-option>\r\n    <ng-option value=\"third\" text=\"Third value text\"></ng-option>\r\n    <ng-option value=\"fourth\" text=\"Fourth value text\"></ng-option>\r\n    <ng-option value=\"fifth\" text=\"Fifth value text\"></ng-option>\r\n</ng-select>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {BasicNormalStateComponent, ReadonlyStateOptions, NgSelectPlugin, ReadonlyState} from \"@anglr/select\";\r\n\r\n/**\r\n * Custom readonly state component\r\n */\r\n@Component(\r\n{\r\n    selector: 'custom-readonly-state',\r\n    templateUrl: 'customReadonlyState.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CustomReadonlyStateComponent extends BasicNormalStateComponent implements ReadonlyState, NgSelectPlugin<ReadonlyStateOptions<any>>\r\n{\r\n}","<div class=\"form-control\">{{valueHandler?.selectedOptions | ngSelectValue: texts?.nothingSelected}}</div>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Custom template sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'custom-template-view',\r\n    templateUrl: 'customTemplate.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CustomTemplateComponent\r\n{\r\n}","<h3>Custom Template Select</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"customTemplateSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/select/customTemplate/customTemplateSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"customTemplateSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/select/customTemplate/customTemplateSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<custom-template-sample></custom-template-sample>","<div>Value: {{selectControl?.value | json}}</div>\r\n\r\n<ng-select [formControl]=\"selectControl\">\r\n    <ng-option value=\"first\" text=\"First value text\"></ng-option>\r\n    <ng-option value=\"second\" text=\"Second value text\"></ng-option>\r\n    <ng-option value=\"third\" text=\"Third value text\"></ng-option>\r\n    <ng-option value=\"fourth\" text=\"Fourth value text\"></ng-option>\r\n    <ng-option value=\"fifth\" text=\"Fifth value text\"></ng-option>\r\n\r\n    <ng-template #normalStateTemplate let-normalState>{{normalState?.valueHandler?.selectedOptions?.value}} => {{normalState?.valueHandler?.selectedOptions | ngSelectValue: normalState?.texts?.nothingSelected}}</ng-template>\r\n    <ng-template #optionTemplate let-option>{{option?.value}} - {{option?.text}}</ng-template>\r\n</ng-select>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\n\r\n/**\r\n * Custom template sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'custom-template-sample',\r\n    templateUrl: 'customTemplateSample.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CustomTemplateSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Control bound to select\r\n     */\r\n    public selectControl: FormControl = new FormControl(null);\r\n}","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Dynamic sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'dynamic-view',\r\n    templateUrl: 'dynamic.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicComponent\r\n{\r\n}","<h3>Dynamic Select</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"dynamicSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/select/dynamic/dynamicSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"dynamicSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/select/dynamic/dynamicSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"kodPopisValue.interface.ts\">\r\n            <div [renderMarkdown]=\"'misc/types/kodPopisValue.interface.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<dynamic-sample></dynamic-sample>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {NgSelectOptions, GetOptionsCallback, NgSelectOption, BasicLiveSearchComponent, DynamicValueHandlerComponent, DynamicValueHandlerOptions, DynamicOptionsGatherer} from \"@anglr/select\";\r\nimport {isString} from \"@jscrpt/common\";\r\n\r\nimport {KodPopisValue} from \"../../../misc/types\";\r\nimport {DataService} from \"../../../services/api/data\";\r\n\r\n/**\r\n * Dynamic sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'dynamic-sample',\r\n    templateUrl: 'dynamicSample.component.html',\r\n    providers: [DataService],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Select options that are used for select initialization, custom readonly\r\n     */\r\n    public selectOptions: NgSelectOptions<KodPopisValue>;\r\n    \r\n    /**\r\n     * Control bound to select\r\n     */\r\n    public selectControl: FormControl = new FormControl(null);\r\n\r\n    //######################### constructor #########################\r\n    constructor(private _dataSvc: DataService)\r\n    {\r\n        this.selectOptions =\r\n        {\r\n            plugins:\r\n            {\r\n                liveSearch:\r\n                {\r\n                    type: BasicLiveSearchComponent\r\n                },\r\n                valueHandler:\r\n                {\r\n                    type: DynamicValueHandlerComponent,\r\n                    options: <DynamicValueHandlerOptions<KodPopisValue>>\r\n                    {\r\n                        dynamicOptionsCallback: this._getData\r\n                    }\r\n                }\r\n            },\r\n            optionsGatherer: new DynamicOptionsGatherer({dynamicOptionsCallback: this._getData})\r\n        };\r\n    }\r\n\r\n    //######################### private methods #########################\r\n    \r\n    /**\r\n     * Used for obtaining dynamic options\r\n     */\r\n    private _getData: GetOptionsCallback<KodPopisValue> = (async value =>\r\n    {\r\n        if(!isString(value))\r\n        {\r\n            value = value.kod;\r\n        }\r\n\r\n        let result = await this._dataSvc\r\n            .getCis(value)\r\n            .toPromise();\r\n\r\n        if(!result || !result.content || !result.content.length)\r\n        {\r\n            return [];\r\n        }\r\n\r\n        return result.content.map(itm =>\r\n        {\r\n            return <NgSelectOption<KodPopisValue>>\r\n            {\r\n                value: itm.kod,\r\n                text: itm.popis\r\n            };\r\n        });\r\n    });\r\n}","<div>Value: {{selectControl?.value | json}}</div>\r\n\r\n<ng-select [selectOptions]=\"selectOptions\" [formControl]=\"selectControl\">\r\n</ng-select>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Edit sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'edit-view',\r\n    templateUrl: 'edit.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EditComponent\r\n{\r\n}","<h3>Edit Select</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"editSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/select/edit/editSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"editSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/select/edit/editSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<edit-sample></edit-sample>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\n\r\n/**\r\n * Edit sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'edit-sample',\r\n    templateUrl: 'editSample.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EditSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Control bound to select\r\n     */\r\n    public selectControl: FormControl = new FormControl(null);\r\n\r\n    /**\r\n     * Control bound to multi select\r\n     */\r\n    public selectMultipleControl: FormControl = new FormControl(null);\r\n}","<div class=\"flex-row\">\r\n    <div class=\"flex-1 margin-right-small\">\r\n        <div>Value: {{selectControl?.value | json}}</div>\r\n\r\n        <ng-select [formControl]=\"selectControl\" editStyle>\r\n            <ng-option value=\"first\" text=\"First value text\"></ng-option>\r\n            <ng-option value=\"second\" text=\"Second value text\"></ng-option>\r\n            <ng-option value=\"third\" text=\"Third value text\"></ng-option>\r\n            <ng-option value=\"fourth\" text=\"Fourth value text\"></ng-option>\r\n            <ng-option value=\"fifth\" text=\"Fifth value text\"></ng-option>\r\n        </ng-select>\r\n    </div>\r\n\r\n    <div class=\"flex-1 margin-left-small\">\r\n        <div>Value: {{selectMultipleControl?.value | json}}</div>\r\n\r\n        <ng-select multiple [formControl]=\"selectMultipleControl\" editStyle>\r\n            <ng-option value=\"first\" text=\"First value text\"></ng-option>\r\n            <ng-option value=\"second\" text=\"Second value text\"></ng-option>\r\n            <ng-option value=\"third\" text=\"Third value text\"></ng-option>\r\n            <ng-option value=\"fourth\" text=\"Fourth value text\"></ng-option>\r\n            <ng-option value=\"fifth\" text=\"Fifth value text\"></ng-option>\r\n        </ng-select>\r\n    </div>\r\n</div>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * External source sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'external-view',\r\n    templateUrl: 'external.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ExternalComponent\r\n{\r\n}","<h3>External Source Select</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"externalSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/select/external/externalSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"externalSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/select/external/externalSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"externalSource.directive.ts\">\r\n            <div [renderMarkdown]=\"'samples/select/external/externalSource.directive.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"kodPopisValue.interface.ts\">\r\n            <div [renderMarkdown]=\"'misc/types/kodPopisValue.interface.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"constants.ts\">\r\n            <div [renderMarkdown]=\"'misc/constants.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<external-sample></external-sample>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Live search sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'live-search-view',\r\n    templateUrl: 'liveSearch.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LiveSearchComponent\r\n{\r\n}","<h3>Live Search Select</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"liveSearchSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/select/liveSearch/liveSearchSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"liveSearchSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/select/liveSearch/liveSearchSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"kodPopisValue.interface.ts\">\r\n            <div [renderMarkdown]=\"'misc/types/kodPopisValue.interface.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<live-search-sample></live-search-sample>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {NgSelectOptions, BasicLiveSearchComponent} from \"@anglr/select\";\r\n\r\nimport {KodPopisValue} from \"../../../misc/types\";\r\n\r\n/**\r\n * Live search sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'live-search-sample',\r\n    templateUrl: 'liveSearchSample.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LiveSearchSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Control bound to select\r\n     */\r\n    public selectControl: FormControl = new FormControl(null);\r\n\r\n    /**\r\n     * Select options that are used for select initialization, live search\r\n     */\r\n    public selectOptions: NgSelectOptions<KodPopisValue>;\r\n\r\n    //######################### constructor #########################\r\n    constructor()\r\n    {\r\n        this.selectOptions =\r\n        {\r\n            plugins:\r\n            {\r\n                liveSearch:\r\n                {\r\n                    type: BasicLiveSearchComponent\r\n                }\r\n            }\r\n        };\r\n    }\r\n}","<div>Value: {{selectControl?.value | json}}</div>\r\n\r\n<ng-select [selectOptions]=\"selectOptions\" [formControl]=\"selectControl\">\r\n    <ng-option value=\"first\" text=\"First value text\"></ng-option>\r\n    <ng-option value=\"second\" text=\"Second value text\"></ng-option>\r\n    <ng-option value=\"third\" text=\"Third value text\"></ng-option>\r\n    <ng-option value=\"fourth\" text=\"Fourth value text\"></ng-option>\r\n    <ng-option value=\"fifth\" text=\"Fifth value text\"></ng-option>\r\n</ng-select>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Modal Popup sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'modal-popup-view',\r\n    templateUrl: 'modalPopup.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ModalPopupComponent\r\n{\r\n}","<h3>Modal Popup Select</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"modalPopupSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/select/modalPopup/modalPopupSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"modalPopupSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/select/modalPopup/modalPopupSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<modal-popup-sample></modal-popup-sample>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\n\r\n/**\r\n * Modal Popup sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'modal-popup-sample',\r\n    templateUrl: 'modalPopupSample.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ModalPopupSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Control bound to select\r\n     */\r\n    public selectControl: FormControl = new FormControl(null);\r\n}","<div>Value: {{selectControl?.value | json}}</div>\r\n\r\n<ng-select [formControl]=\"selectControl\" [dialogPopup]=\"null\">\r\n    <ng-option value=\"first\" text=\"First value text\"></ng-option>\r\n    <ng-option value=\"second\" text=\"Second value text\"></ng-option>\r\n    <ng-option value=\"third\" text=\"Third value text\"></ng-option>\r\n    <ng-option value=\"fourth\" text=\"Fourth value text\"></ng-option>\r\n    <ng-option value=\"fifth\" text=\"Fifth value text\"></ng-option>\r\n</ng-select>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Multiple sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'multiple-view',\r\n    templateUrl: 'multiple.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MultipleComponent\r\n{\r\n}","<h3>Multiple Select</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"multipleSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/select/multiple/multipleSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"multipleSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/select/multiple/multipleSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<multiple-sample></multiple-sample>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\n\r\n/**\r\n * Multiple sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'multiple-sample',\r\n    templateUrl: 'multipleSample.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MultipleSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Control bound to select\r\n     */\r\n    public selectControl: FormControl = new FormControl(null);\r\n}","<div>Value: {{selectControl?.value | json}}</div>\r\n\r\n<ng-select multiple [formControl]=\"selectControl\">\r\n    <ng-option value=\"first\" text=\"First value text\"></ng-option>\r\n    <ng-option value=\"second\" text=\"Second value text\"></ng-option>\r\n    <ng-option value=\"third\" text=\"Third value text\"></ng-option>\r\n    <ng-option value=\"fourth\" text=\"Fourth value text\"></ng-option>\r\n    <ng-option value=\"fifth\" text=\"Fifth value text\"></ng-option>\r\n</ng-select>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Readonly sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'readonly-view',\r\n    templateUrl: 'readonly.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ReadonlyComponent\r\n{\r\n}","<h3>Readonly Select</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"readonlySample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/select/readonly/readonlySample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"readonlySample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/select/readonly/readonlySample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<readonly-sample></readonly-sample>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\n\r\n/**\r\n * Readonly sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'readonly-sample',\r\n    templateUrl: 'readonlySample.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ReadonlySampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Control bound to select\r\n     */\r\n    public selectControl: FormControl = new FormControl(null);\r\n\r\n    /**\r\n     * Indication whether is NgSelect readonly\r\n     */\r\n    public readonly: boolean = false;\r\n}","<div>Value: {{selectControl?.value | json}}</div>\r\n\r\n<button (click)=\"readonly = !readonly\" class=\"btn btn-primary\">\r\n    <span>{{readonly ? 'to normal' : 'to readonly'}}</span>\r\n</button>\r\n\r\n<ng-select [readonly]=\"readonly\" [formControl]=\"selectControl\">\r\n    <ng-option value=\"first\" text=\"First value text\"></ng-option>\r\n    <ng-option value=\"second\" text=\"Second value text\"></ng-option>\r\n    <ng-option value=\"third\" text=\"Third value text\"></ng-option>\r\n    <ng-option value=\"fourth\" text=\"Fourth value text\"></ng-option>\r\n    <ng-option value=\"fifth\" text=\"Fifth value text\"></ng-option>\r\n</ng-select>","import {NgModule} from \"@angular/core\";\r\n\r\nimport {CommonSharedModule} from \"../../boot/commonShared.module\";\r\nimport {BasicSampleComponent} from \"./basicSample/basicSample.component\";\r\nimport {BasicComponent} from \"./basicSample/basic.component\";\r\nimport {BasicLazyComponent} from \"./basicLazy/basicLazy.component\";\r\nimport {BasicLazySampleComponent} from \"./basicLazy/basicLazySample.component\";\r\nimport {ConfigComponent} from \"./config/config.component\";\r\nimport {ConfigSampleComponent} from \"./config/configSample.component\";\r\nimport {CustomReadonlySampleComponent} from \"./customReadonly/customReadonlySample.component\";\r\nimport {CustomReadonlyComponent} from \"./customReadonly/customReadonly.component\";\r\nimport {CustomReadonlyStateComponent} from \"./customReadonly/customReadonlyState.component\";\r\nimport {CustomTemplateComponent} from \"./customTemplate/customTemplate.component\";\r\nimport {CustomTemplateSampleComponent} from \"./customTemplate/customTemplateSample.component\";\r\nimport {DynamicSampleComponent} from \"./dynamic/dynamicSample.component\";\r\nimport {DynamicComponent} from \"./dynamic/dynamic.component\";\r\nimport {ExternalSampleComponent} from \"./external/externalSample.component\";\r\nimport {ExternalComponent} from \"./external/external.component\";\r\nimport {ExternalSourceDirective} from \"./external/externalSource.directive\";\r\nimport {LiveSearchSampleComponent} from \"./liveSearch/liveSearchSample.component\";\r\nimport {LiveSearchComponent} from \"./liveSearch/liveSearch.component\";\r\nimport {MultipleSampleComponent} from \"./multiple/multipleSample.component\";\r\nimport {MultipleComponent} from \"./multiple/multiple.component\";\r\nimport {ReadonlySampleComponent} from \"./readonly/readonlySample.component\";\r\nimport {ReadonlyComponent} from \"./readonly/readonly.component\";\r\nimport {ModalPopupSampleComponent} from './modalPopup/modalPopupSample.component';\r\nimport {ModalPopupComponent} from './modalPopup/modalPopup.component';\r\nimport {EditSampleComponent} from './edit/editSample.component';\r\nimport {EditComponent} from './edit/edit.component';\r\nimport {AbsoluteSampleComponent} from './absolute/absoluteSample.component';\r\nimport {AbsoluteComponent} from './absolute/absolute.component';\r\n\r\n/**\r\n * Module with select samples components\r\n */\r\n@NgModule(\r\n{\r\n    imports:\r\n    [\r\n        CommonSharedModule\r\n    ],\r\n    declarations:\r\n    [\r\n        BasicSampleComponent,\r\n        BasicComponent,\r\n        BasicLazySampleComponent,\r\n        BasicLazyComponent,\r\n        ConfigSampleComponent,\r\n        ConfigComponent,\r\n        CustomReadonlySampleComponent,\r\n        CustomReadonlyComponent,\r\n        CustomReadonlyStateComponent,\r\n        CustomTemplateSampleComponent,\r\n        CustomTemplateComponent,\r\n        DynamicSampleComponent,\r\n        DynamicComponent,\r\n        ExternalSampleComponent,\r\n        ExternalComponent,\r\n        ExternalSourceDirective,\r\n        LiveSearchSampleComponent,\r\n        LiveSearchComponent,\r\n        MultipleSampleComponent,\r\n        MultipleComponent,\r\n        ReadonlySampleComponent,\r\n        ReadonlyComponent,\r\n        ModalPopupSampleComponent,\r\n        ModalPopupComponent,\r\n        EditSampleComponent,\r\n        EditComponent,\r\n        AbsoluteSampleComponent,\r\n        AbsoluteComponent\r\n    ]\r\n})\r\nexport class SelectSamplesModule\r\n{\r\n}","var map = {\n\t\"./af\": 66250,\n\t\"./af.js\": 66250,\n\t\"./ar\": 57505,\n\t\"./ar-dz\": 82466,\n\t\"./ar-dz.js\": 82466,\n\t\"./ar-kw\": 92740,\n\t\"./ar-kw.js\": 92740,\n\t\"./ar-ly\": 66282,\n\t\"./ar-ly.js\": 66282,\n\t\"./ar-ma\": 30842,\n\t\"./ar-ma.js\": 30842,\n\t\"./ar-sa\": 24229,\n\t\"./ar-sa.js\": 24229,\n\t\"./ar-tn\": 93880,\n\t\"./ar-tn.js\": 93880,\n\t\"./ar.js\": 57505,\n\t\"./az\": 93030,\n\t\"./az.js\": 93030,\n\t\"./be\": 8541,\n\t\"./be.js\": 8541,\n\t\"./bg\": 29581,\n\t\"./bg.js\": 29581,\n\t\"./bm\": 85498,\n\t\"./bm.js\": 85498,\n\t\"./bn\": 57059,\n\t\"./bn-bd\": 23532,\n\t\"./bn-bd.js\": 23532,\n\t\"./bn.js\": 57059,\n\t\"./bo\": 18120,\n\t\"./bo.js\": 18120,\n\t\"./br\": 1202,\n\t\"./br.js\": 1202,\n\t\"./bs\": 8895,\n\t\"./bs.js\": 8895,\n\t\"./ca\": 24875,\n\t\"./ca.js\": 24875,\n\t\"./cs\": 74691,\n\t\"./cs.js\": 74691,\n\t\"./cv\": 92987,\n\t\"./cv.js\": 92987,\n\t\"./cy\": 15572,\n\t\"./cy.js\": 15572,\n\t\"./da\": 98488,\n\t\"./da.js\": 98488,\n\t\"./de\": 43694,\n\t\"./de-at\": 42381,\n\t\"./de-at.js\": 42381,\n\t\"./de-ch\": 11304,\n\t\"./de-ch.js\": 11304,\n\t\"./de.js\": 43694,\n\t\"./dv\": 84049,\n\t\"./dv.js\": 84049,\n\t\"./el\": 50402,\n\t\"./el.js\": 50402,\n\t\"./en-au\": 90579,\n\t\"./en-au.js\": 90579,\n\t\"./en-ca\": 99159,\n\t\"./en-ca.js\": 99159,\n\t\"./en-gb\": 9422,\n\t\"./en-gb.js\": 9422,\n\t\"./en-ie\": 28513,\n\t\"./en-ie.js\": 28513,\n\t\"./en-il\": 61537,\n\t\"./en-il.js\": 61537,\n\t\"./en-in\": 57945,\n\t\"./en-in.js\": 57945,\n\t\"./en-nz\": 45820,\n\t\"./en-nz.js\": 45820,\n\t\"./en-sg\": 54214,\n\t\"./en-sg.js\": 54214,\n\t\"./eo\": 39751,\n\t\"./eo.js\": 39751,\n\t\"./es\": 79443,\n\t\"./es-do\": 58461,\n\t\"./es-do.js\": 58461,\n\t\"./es-mx\": 78295,\n\t\"./es-mx.js\": 78295,\n\t\"./es-us\": 30250,\n\t\"./es-us.js\": 30250,\n\t\"./es.js\": 79443,\n\t\"./et\": 33284,\n\t\"./et.js\": 33284,\n\t\"./eu\": 75917,\n\t\"./eu.js\": 75917,\n\t\"./fa\": 86892,\n\t\"./fa.js\": 86892,\n\t\"./fi\": 2416,\n\t\"./fi.js\": 2416,\n\t\"./fil\": 32330,\n\t\"./fil.js\": 32330,\n\t\"./fo\": 15429,\n\t\"./fo.js\": 15429,\n\t\"./fr\": 40557,\n\t\"./fr-ca\": 33808,\n\t\"./fr-ca.js\": 33808,\n\t\"./fr-ch\": 1029,\n\t\"./fr-ch.js\": 1029,\n\t\"./fr.js\": 40557,\n\t\"./fy\": 58435,\n\t\"./fy.js\": 58435,\n\t\"./ga\": 7268,\n\t\"./ga.js\": 7268,\n\t\"./gd\": 27325,\n\t\"./gd.js\": 27325,\n\t\"./gl\": 86631,\n\t\"./gl.js\": 86631,\n\t\"./gom-deva\": 20994,\n\t\"./gom-deva.js\": 20994,\n\t\"./gom-latn\": 51307,\n\t\"./gom-latn.js\": 51307,\n\t\"./gu\": 31546,\n\t\"./gu.js\": 31546,\n\t\"./he\": 90505,\n\t\"./he.js\": 90505,\n\t\"./hi\": 90732,\n\t\"./hi.js\": 90732,\n\t\"./hr\": 48681,\n\t\"./hr.js\": 48681,\n\t\"./hu\": 22314,\n\t\"./hu.js\": 22314,\n\t\"./hy-am\": 86516,\n\t\"./hy-am.js\": 86516,\n\t\"./id\": 86237,\n\t\"./id.js\": 86237,\n\t\"./is\": 65164,\n\t\"./is.js\": 65164,\n\t\"./it\": 34705,\n\t\"./it-ch\": 71629,\n\t\"./it-ch.js\": 71629,\n\t\"./it.js\": 34705,\n\t\"./ja\": 71463,\n\t\"./ja.js\": 71463,\n\t\"./jv\": 93985,\n\t\"./jv.js\": 93985,\n\t\"./ka\": 49466,\n\t\"./ka.js\": 49466,\n\t\"./kk\": 58713,\n\t\"./kk.js\": 58713,\n\t\"./km\": 76537,\n\t\"./km.js\": 76537,\n\t\"./kn\": 10052,\n\t\"./kn.js\": 10052,\n\t\"./ko\": 8133,\n\t\"./ko.js\": 8133,\n\t\"./ku\": 84299,\n\t\"./ku.js\": 84299,\n\t\"./ky\": 32869,\n\t\"./ky.js\": 32869,\n\t\"./lb\": 25916,\n\t\"./lb.js\": 25916,\n\t\"./lo\": 58586,\n\t\"./lo.js\": 58586,\n\t\"./lt\": 22126,\n\t\"./lt.js\": 22126,\n\t\"./lv\": 85511,\n\t\"./lv.js\": 85511,\n\t\"./me\": 97860,\n\t\"./me.js\": 97860,\n\t\"./mi\": 95697,\n\t\"./mi.js\": 95697,\n\t\"./mk\": 84051,\n\t\"./mk.js\": 84051,\n\t\"./ml\": 3870,\n\t\"./ml.js\": 3870,\n\t\"./mn\": 72410,\n\t\"./mn.js\": 72410,\n\t\"./mr\": 51585,\n\t\"./mr.js\": 51585,\n\t\"./ms\": 84456,\n\t\"./ms-my\": 62336,\n\t\"./ms-my.js\": 62336,\n\t\"./ms.js\": 84456,\n\t\"./mt\": 93943,\n\t\"./mt.js\": 93943,\n\t\"./my\": 16570,\n\t\"./my.js\": 16570,\n\t\"./nb\": 96835,\n\t\"./nb.js\": 96835,\n\t\"./ne\": 91061,\n\t\"./ne.js\": 91061,\n\t\"./nl\": 91063,\n\t\"./nl-be\": 76057,\n\t\"./nl-be.js\": 76057,\n\t\"./nl.js\": 91063,\n\t\"./nn\": 57199,\n\t\"./nn.js\": 57199,\n\t\"./oc-lnc\": 45955,\n\t\"./oc-lnc.js\": 45955,\n\t\"./pa-in\": 51508,\n\t\"./pa-in.js\": 51508,\n\t\"./pl\": 2198,\n\t\"./pl.js\": 2198,\n\t\"./pt\": 62900,\n\t\"./pt-br\": 33621,\n\t\"./pt-br.js\": 33621,\n\t\"./pt.js\": 62900,\n\t\"./ro\": 16002,\n\t\"./ro.js\": 16002,\n\t\"./ru\": 96628,\n\t\"./ru.js\": 96628,\n\t\"./sd\": 99598,\n\t\"./sd.js\": 99598,\n\t\"./se\": 47274,\n\t\"./se.js\": 47274,\n\t\"./si\": 76998,\n\t\"./si.js\": 76998,\n\t\"./sk\": 41093,\n\t\"./sk.js\": 41093,\n\t\"./sl\": 8388,\n\t\"./sl.js\": 8388,\n\t\"./sq\": 60046,\n\t\"./sq.js\": 60046,\n\t\"./sr\": 26180,\n\t\"./sr-cyrl\": 95671,\n\t\"./sr-cyrl.js\": 95671,\n\t\"./sr.js\": 26180,\n\t\"./ss\": 11900,\n\t\"./ss.js\": 11900,\n\t\"./sv\": 32052,\n\t\"./sv.js\": 32052,\n\t\"./sw\": 82791,\n\t\"./sw.js\": 82791,\n\t\"./ta\": 14224,\n\t\"./ta.js\": 14224,\n\t\"./te\": 2175,\n\t\"./te.js\": 2175,\n\t\"./tet\": 6669,\n\t\"./tet.js\": 6669,\n\t\"./tg\": 13567,\n\t\"./tg.js\": 13567,\n\t\"./th\": 3799,\n\t\"./th.js\": 3799,\n\t\"./tk\": 27175,\n\t\"./tk.js\": 27175,\n\t\"./tl-ph\": 66720,\n\t\"./tl-ph.js\": 66720,\n\t\"./tlh\": 61795,\n\t\"./tlh.js\": 61795,\n\t\"./tr\": 50147,\n\t\"./tr.js\": 50147,\n\t\"./tzl\": 88646,\n\t\"./tzl.js\": 88646,\n\t\"./tzm\": 20718,\n\t\"./tzm-latn\": 70705,\n\t\"./tzm-latn.js\": 70705,\n\t\"./tzm.js\": 20718,\n\t\"./ug-cn\": 75557,\n\t\"./ug-cn.js\": 75557,\n\t\"./uk\": 60580,\n\t\"./uk.js\": 60580,\n\t\"./ur\": 86766,\n\t\"./ur.js\": 86766,\n\t\"./uz\": 40689,\n\t\"./uz-latn\": 75483,\n\t\"./uz-latn.js\": 75483,\n\t\"./uz.js\": 40689,\n\t\"./vi\": 73260,\n\t\"./vi.js\": 73260,\n\t\"./x-pseudo\": 22948,\n\t\"./x-pseudo.js\": 22948,\n\t\"./yo\": 8120,\n\t\"./yo.js\": 8120,\n\t\"./zh-cn\": 97529,\n\t\"./zh-cn.js\": 97529,\n\t\"./zh-hk\": 94821,\n\t\"./zh-hk.js\": 94821,\n\t\"./zh-mo\": 94791,\n\t\"./zh-mo.js\": 94791,\n\t\"./zh-tw\": 55176,\n\t\"./zh-tw.js\": 55176\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 74375;"],"sourceRoot":""}