{"version":3,"sources":["webpack://ressurectit.github.io/./app/samples/grid/customRenderer/gallery/galleryItem.component.ts","webpack://ressurectit.github.io/./app/samples/grid/customRenderer/gallery/galleryMetadataGatherer.component.ts"],"names":["GalleryItemComponent","GalleryMetadataGathererComponent","metadataChange","getMetadata","item","this","items","first","ngAfterContentInit","changes","subscribe","emit","provide","useExisting"],"mappings":"6LAaO,MAAMA,G,iCAAAA,I,kBAAAA,EAAoB,mI,oKCY1B,MAAMC,EAdb,cAqBW,KAAAC,eAAqC,IAAI,IAgBzCC,c,MAEH,MAAO,CACHC,KAAgB,QAAV,EAAAC,KAAKC,aAAK,eAAEC,OASnBC,qBAEHH,KAAKC,MAAMG,QAAQC,WAAU,KAEzBL,KAAKH,eAAeS,W,iCAvCnBV,I,kBAAAA,EAAgC,gE,GAAA,K,OAexB,EAAAD,qBAAoB,G,uDAvBrC,CAEI,CACIY,QAAS,KACTC,aAAa,SAAW,IAAMZ,QAErC","file":"2879.client.es2015.chunk.6488539165a1d75169eb.js","sourcesContent":["import {Component, ChangeDetectionStrategy, Input} from \"@angular/core\";\r\n\r\nimport {GalleryItem} from \"./gallery.interface\";\r\n\r\n/**\r\n * Component for gathering information about gallery item\r\n */\r\n@Component(\r\n{\r\n    selector: 'gallery-item',\r\n    template: '',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GalleryItemComponent implements GalleryItem\r\n{\r\n    //######################### public properties #########################\r\n\r\n    /**\r\n     * Source of gallery item\r\n     */\r\n    @Input()\r\n    source: string;\r\n}","import {ExistingProvider, Component, ChangeDetectionStrategy, EventEmitter, forwardRef, ContentChildren, QueryList, AfterContentInit} from \"@angular/core\";\r\nimport {METADATA_GATHERER, MetadataGatherer} from \"@anglr/grid\";\r\n\r\nimport {GalleryMetadata, GalleryItem} from \"./gallery.interface\";\r\nimport {GalleryItemComponent} from \"./galleryItem.component\";\r\n\r\n/**\r\n * Component that is used for gathering metadata for gallery\r\n *\r\n * This is metadata gatherer which works with `GalleryItemComponent`\r\n */\r\n@Component(\r\n{\r\n    selector: 'gallery-metadata',\r\n    template: '',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers:\r\n    [\r\n        <ExistingProvider>\r\n        {\r\n            provide: METADATA_GATHERER,\r\n            useExisting: forwardRef(() => GalleryMetadataGathererComponent)\r\n        }\r\n    ]\r\n})\r\nexport class GalleryMetadataGathererComponent<TGalleryItem extends GalleryItem> implements AfterContentInit, MetadataGatherer<GalleryMetadata<TGalleryItem>>\r\n{\r\n    //######################### public properties - implementation of MetadataGatherer<BasicTableColumn[]> #########################\r\n\r\n    /**\r\n     * Information that metadata for grid has changed\r\n     */\r\n    public metadataChange: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n    //######################### public properties - children #########################\r\n\r\n    /**\r\n     * Gets gallery item defined in template\r\n     * @internal\r\n     */\r\n    @ContentChildren(GalleryItemComponent)\r\n    public items: QueryList<TGalleryItem>;\r\n\r\n    //######################### public methods - implementation of MetadataGatherer<BasicTableColumn[]> #########################\r\n\r\n    /**\r\n     * Gets current metadata for grid\r\n     */\r\n    public getMetadata(): GalleryMetadata<TGalleryItem>\r\n    {\r\n        return {\r\n            item: this.items?.first\r\n        };\r\n    }\r\n\r\n    //######################### public methods - implementation of AfterContentInit #########################\r\n\r\n    /**\r\n     * Called when content was initialized\r\n     */\r\n    public ngAfterContentInit()\r\n    {\r\n        this.items.changes.subscribe(() =>\r\n        {\r\n            this.metadataChange.emit();\r\n        });\r\n    }\r\n}"],"sourceRoot":""}