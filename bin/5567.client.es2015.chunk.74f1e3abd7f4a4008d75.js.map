{"version":3,"sources":["webpack://ressurectit.github.io/./app/samples/grid/basic/basicSample.component.ts","webpack://ressurectit.github.io/./app/samples/grid/basic/basicSample.component.html"],"names":["BasicSampleComponent","constructor","_dataSvc","this","gridOptions","plugins","dataLoader","options","dataCallback","_getData","bind","paging","itemsPerPageValues","initialItemsPerPage","page","itemsPerPage","ordering","reqOrdering","direction","orderByDirection","sort","orderBy","result","getData","size","toPromise","data","content","totalCount","totalElements","D"],"mappings":"iRAgBO,MAAMA,EAUTC,YAAoBC,GAAA,KAAAA,WAEhBC,KAAKC,YACL,CACIC,QACA,CACIC,WACA,CACIC,QACA,CAEIC,aAAcL,KAAKM,SAASC,KAAKP,QAGzCQ,OACA,CACIJ,QACA,CAEIK,mBAAoB,CAAC,EAAG,GAAI,IAE5BC,oBAAqB,MAe3BJ,SAASK,EAAcC,EAAsBC,G,qCAEvD,IAAIC,EAAyB,KAE1BD,IAECC,EACA,CACIC,UAAWF,EAASG,iBACpBC,KAAMJ,EAASK,UAIvB,IAAIC,QAAenB,KAAKD,SACnBqB,QAAQ,CACGT,KAAMA,EACNU,KAAMT,GAEVE,GACPQ,YAEL,MAAO,CACHC,KAAMJ,EAAOK,QACbC,WAAYN,EAAOO,gB,iUArElB7B,GAAoB,W,kBAApBA,EAAoB,2CAHlB,CAAC,EAAA8B,KAAY,gUCb5B,oBACI,+BACI,+BACA,+BACA,+BACA,+BACA,+BACJ,OACJ,Q,KARS,kC","file":"5567.client.es2015.chunk.74f1e3abd7f4a4008d75.js","sourcesContent":["import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {GridOptions, SimpleOrdering, BasicPagingOptions, AsyncDataLoaderOptions, DataResponse} from \"@anglr/grid\";\r\n\r\nimport {Address, DataService} from \"../../../services/api/data\";\r\nimport {Orderable} from \"../../../misc/types\";\r\n\r\n/**\r\n * Basic sample for grid component\r\n */\r\n@Component(\r\n{\r\n    selector: 'basic-sample',\r\n    templateUrl: 'basicSample.component.html',\r\n    providers: [DataService],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BasicSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Grid options that are used for grid initialization\r\n     */\r\n    public gridOptions: GridOptions;\r\n\r\n    //######################### constructor #########################\r\n    constructor(private _dataSvc: DataService)\r\n    {\r\n        this.gridOptions =\r\n        {\r\n            plugins:\r\n            {\r\n                dataLoader:\r\n                {\r\n                    options: <AsyncDataLoaderOptions<Address, SimpleOrdering>>\r\n                    {\r\n                        //data callback used for getting data asynchronously\r\n                        dataCallback: this._getData.bind(this)\r\n                    }\r\n                },\r\n                paging:\r\n                {\r\n                    options: <BasicPagingOptions>\r\n                    {\r\n                        //available values for items per page buttons\r\n                        itemsPerPageValues: [5, 10, 20],\r\n                        //initial value of items per page, should be one of above\r\n                        initialItemsPerPage: 5\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    //######################### private methods #########################\r\n\r\n    /**\r\n     * Callback used for obtaining data\r\n     * @param page Index of requested page\r\n     * @param itemsPerPage Number of items per page\r\n     * @param ordering Order by column name\r\n     */\r\n    private async _getData(page: number, itemsPerPage: number, ordering: SimpleOrdering): Promise<DataResponse<Address>>\r\n    {\r\n        let reqOrdering: Orderable = null;\r\n\r\n        if(ordering)\r\n        {\r\n            reqOrdering = \r\n            {\r\n                direction: ordering.orderByDirection,\r\n                sort: ordering.orderBy\r\n            };\r\n        }\r\n\r\n        let result = await this._dataSvc\r\n            .getData({\r\n                        page: page,\r\n                        size: itemsPerPage\r\n                    },\r\n                    reqOrdering)\r\n            .toPromise();\r\n\r\n        return {\r\n            data: result.content,\r\n            totalCount: result.totalElements\r\n        };\r\n    }\r\n}","<ng-grid [gridOptions]=\"gridOptions\">\r\n    <basic-table-metadata>\r\n        <basic-table-column id=\"country\" name=\"country\" title=\"Country\"></basic-table-column>\r\n        <basic-table-column id=\"city\" name=\"city\" title=\"City\"></basic-table-column>\r\n        <basic-table-column id=\"zip\" name=\"zip\" title=\"ZIP\"></basic-table-column>\r\n        <basic-table-column id=\"street\" name=\"street\" title=\"Street\"></basic-table-column>\r\n        <basic-table-column id=\"houseNumber\" name=\"houseNumber\" title=\"House Number\"></basic-table-column>\r\n    </basic-table-metadata>\r\n</ng-grid>"],"sourceRoot":""}