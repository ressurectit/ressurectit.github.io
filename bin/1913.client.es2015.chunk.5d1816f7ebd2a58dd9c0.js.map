{"version":3,"sources":["webpack://ressurectit.github.io/./app/samples/grid/basicSync/basicSyncSample.component.ts","webpack://ressurectit.github.io/./app/samples/grid/basicSync/basicSyncSample.component.html"],"names":["BasicSyncSampleComponent","constructor","_route","data","this","snapshot","gridOptions","plugins","dataLoader","type","options","orderData","ordering","sort","a","b","aValue","getValue","orderBy","bValue","aValueNum","bValueNum","isNaN","orderByDirection","paging","itemsPerPageValues","initialItemsPerPage"],"mappings":"2SAqBO,MAAMA,EAUTC,YAAoBC,GAAA,KAAAA,SAEhB,IAAIC,EAAQC,KAAKF,OAAOG,SAASF,KAAmBA,KAEpDC,KAAKE,YACL,CACIC,QACA,CACIC,WACA,CAEIC,KAAM,KACNC,QACA,CAEIP,KAAMA,EAENQ,UAAW,CAACR,EAAaS,IAEjBA,EAKGT,EAAKU,MAAK,CAACC,EAAGC,KAEjB,IAAIC,GAAS,IAAAC,UAASH,EAAGF,EAASM,SAC9BC,GAAS,IAAAF,UAASF,EAAGH,EAASM,SAC9BE,GAAaJ,EACbK,GAAaF,EAQjB,OANIG,MAAMF,IAAeE,MAAMD,KAE3BL,EAASI,EACTD,EAASE,GAGVL,EAASG,EAEDP,EAASW,kBAAoB,eAA8B,EAAI,EAElEP,EAASG,EAENP,EAASW,kBAAoB,cAA6B,GAAK,EAGnE,KAzBApB,IA8BvBqB,OACA,CACId,QACA,CAEIe,mBAAoB,CAAC,GAAI,GAAI,IAE7BC,oBAAqB,Q,iCApEhC1B,GAAwB,Y,kBAAxBA,EAAwB,kWCrBrC,oBACI,+BACI,+BACA,+BACA,+BACA,+BACA,+BACJ,OACJ,Q,KARS,kC","file":"1913.client.es2015.chunk.5d1816f7ebd2a58dd9c0.js","sourcesContent":["import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {GridOptions, SyncDataLoaderComponent, SyncDataLoaderOptions, SimpleOrdering, BasicPagingOptions} from \"@anglr/grid\";\r\nimport {getValue, OrderByDirection} from \"@jscrpt/common\";\r\n\r\nimport {Address} from \"../../../services/api/data\";\r\n\r\ninterface RouteData\r\n{\r\n    data: Address[];\r\n}\r\n\r\n/**\r\n * Basic synchronous sample for grid component\r\n */\r\n@Component(\r\n{\r\n    selector: 'basic-sync-sample',\r\n    templateUrl: 'basicSyncSample.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BasicSyncSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Grid options that are used for grid initialization\r\n     */\r\n    public gridOptions: GridOptions;\r\n\r\n    //######################### constructor #########################\r\n    constructor(private _route: ActivatedRoute)\r\n    {\r\n        let data = (this._route.snapshot.data as RouteData).data;\r\n\r\n        this.gridOptions =\r\n        {\r\n            plugins:\r\n            {\r\n                dataLoader:\r\n                {\r\n                    //use sync data loader as grid data loader plugin\r\n                    type: SyncDataLoaderComponent,\r\n                    options: <SyncDataLoaderOptions<Address, SimpleOrdering>>\r\n                    {\r\n                        //all data used in data loader\r\n                        data: data,\r\n                        //custom ordering, does not have to be specified, defaults to function that orders using string ordering\r\n                        orderData: (data: any[], ordering: SimpleOrdering) =>\r\n                        {\r\n                            if(!ordering)\r\n                            {\r\n                                return data;\r\n                            }\r\n\r\n                            return data.sort((a, b) =>\r\n                            {\r\n                                let aValue = getValue(a, ordering.orderBy);\r\n                                let bValue = getValue(b, ordering.orderBy);\r\n                                let aValueNum = +aValue;\r\n                                let bValueNum = +bValue;\r\n\r\n                                if(!isNaN(aValueNum) && !isNaN(bValueNum))\r\n                                {\r\n                                    aValue = aValueNum;\r\n                                    bValue = bValueNum;\r\n                                }\r\n\r\n                                if(aValue < bValue)\r\n                                {\r\n                                    return ordering.orderByDirection == OrderByDirection.Ascendant ? -1 : 1;\r\n                                }\r\n                                else if(aValue > bValue)\r\n                                {\r\n                                    return ordering.orderByDirection == OrderByDirection.Ascendant ? 1 : -1;\r\n                                }\r\n                    \r\n                                return 0;\r\n                            });\r\n                        }\r\n                    }\r\n                },\r\n                paging:\r\n                {\r\n                    options: <BasicPagingOptions>\r\n                    {\r\n                        //available values for items per page buttons\r\n                        itemsPerPageValues: [15, 30, 60],\r\n                        //initial value of items per page, should be one of above\r\n                        initialItemsPerPage: 15\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n}","<ng-grid [gridOptions]=\"gridOptions\">\r\n    <basic-table-metadata>\r\n        <basic-table-column id=\"country\" name=\"country\" title=\"Country\"></basic-table-column>\r\n        <basic-table-column id=\"city\" name=\"city\" title=\"City\"></basic-table-column>\r\n        <basic-table-column id=\"zip\" name=\"zip\" title=\"ZIP\"></basic-table-column>\r\n        <basic-table-column id=\"street\" name=\"street\" title=\"Street\"></basic-table-column>\r\n        <basic-table-column id=\"houseNumber\" name=\"houseNumber\" title=\"House Number\"></basic-table-column>\r\n    </basic-table-metadata>\r\n</ng-grid>"],"sourceRoot":""}