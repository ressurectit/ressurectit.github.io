{"version":3,"sources":["webpack://ressurectit.github.io/./app/boot/commonShared.module.ts","webpack://ressurectit.github.io/./app/samples/grid/basicMetadata/basicMetadata.component.ts","webpack://ressurectit.github.io/./app/samples/grid/basicMetadata/basicMetadata.component.html","webpack://ressurectit.github.io/./app/samples/grid/basicMetadata/basicMetadataSample.component.html","webpack://ressurectit.github.io/./app/samples/grid/basicMetadata/basicMetadataSample.component.ts","webpack://ressurectit.github.io/./app/samples/grid/basicSync/basicSync.component.ts","webpack://ressurectit.github.io/./app/samples/grid/basicSync/basicSync.component.html","webpack://ressurectit.github.io/./app/samples/grid/basicSync/basicSyncSample.component.ts","webpack://ressurectit.github.io/./app/samples/grid/basicSync/basicSyncSample.component.html","webpack://ressurectit.github.io/./app/samples/grid/basic/basic.component.ts","webpack://ressurectit.github.io/./app/samples/grid/basic/basic.component.html","webpack://ressurectit.github.io/./app/samples/grid/basic/basicSample.component.ts","webpack://ressurectit.github.io/./app/samples/grid/basic/basicSample.component.html","webpack://ressurectit.github.io/./app/samples/grid/configuration/configuration.component.ts","webpack://ressurectit.github.io/./app/samples/grid/configuration/configuration.component.html","webpack://ressurectit.github.io/./app/samples/grid/configuration/configurationSample.component.ts","webpack://ressurectit.github.io/./app/samples/grid/configuration/configurationSample.component.html","webpack://ressurectit.github.io/./app/samples/grid/gridSamples.module.ts","webpack://ressurectit.github.io/./app/samples/grid/groupedMetadata/groupedMetadata.component.ts","webpack://ressurectit.github.io/./app/samples/grid/groupedMetadata/groupedMetadata.component.html","webpack://ressurectit.github.io/./app/samples/grid/groupedMetadata/groupedMetadataSample.component.html","webpack://ressurectit.github.io/./app/samples/grid/groupedMetadata/groupedMetadataSample.component.ts","webpack://ressurectit.github.io/./node_modules/moment/dist/locale|sync|/^/.*$"],"names":["CommonSharedModule","A","BasicMetadataComponent","BasicMetadataSampleComponent","constructor","_dataSvc","this","gridOptions","plugins","dataLoader","options","dataCallback","_getData","bind","paging","itemsPerPageValues","initialItemsPerPage","page","itemsPerPage","ordering","reqOrdering","direction","orderByDirection","sort","orderBy","result","getData","size","toPromise","data","content","totalCount","totalElements","D","BasicSyncComponent","BasicSyncSampleComponent","_route","snapshot","type","orderData","a","b","aValue","getValue","bValue","aValueNum","bValueNum","isNaN","BasicComponent","BasicSampleComponent","ConfigurationComponent","ConfigurationSampleComponent","noDataRenderer","texts","noData","provide","useValue","P","GridSamplesModule","GroupedMetadataComponent","GroupedMetadataSampleComponent","contentRenderer","headerRenderer","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"mappings":"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","file":"2483.client.es2015.chunk.b4d94314215222c412f4.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {ProgressIndicatorModule} from '@anglr/common';\nimport {GridModule, GroupedGridModule} from '@anglr/grid';\nimport {VirtualScrollTableContentRendererModule} from '@anglr/grid/material';\nimport {NgSelectModule, NgSelectEditModule} from '@anglr/select';\nimport {NgSelectDialogPopupModule} from '@anglr/select/material';\nimport {CommonModule as NgCommonModule} from '@anglr/common';\nimport {NumeralModule} from '@anglr/common/numeral';\nimport {NumberInputModule} from '@anglr/common/forms';\nimport {MomentModule} from '@anglr/common/moment';\nimport {NotificationsModule} from '@anglr/notifications';\nimport {InternalServerErrorModule} from '@anglr/error-handling';\nimport {AuthorizationModule} from '@anglr/authentication';\nimport {MarkdownModule} from '@anglr/md-help/web';\nimport {TranslateModule} from '@ngx-translate/core';\n\nimport {AsSourceModule} from '../modules/asSource';\nimport {SourceCodeModule} from '../modules/sourceCode';\n\n/**\n * Common module for all other modules\n */\n@NgModule(\n{\n    exports:\n    [\n        CommonModule,\n        ReactiveFormsModule,\n        RouterModule,\n        ScrollingModule,\n        NgCommonModule,\n        ProgressIndicatorModule,\n        NumeralModule,\n        NumberInputModule,\n        MomentModule,\n        TranslateModule,\n        NotificationsModule,\n        GridModule,\n        GroupedGridModule,\n        VirtualScrollTableContentRendererModule,\n        AuthorizationModule,\n        NgSelectModule,\n        NgSelectEditModule,\n        NgSelectDialogPopupModule,\n        InternalServerErrorModule,\n        MatTabsModule,\n        MarkdownModule,\n        AsSourceModule,\n        SourceCodeModule\n    ]\n})\nexport class CommonSharedModule\n{\n}","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Basic metadata sample for grid component\r\n */\r\n@Component(\r\n{\r\n    selector: 'basicMetadata-view',\r\n    templateUrl: 'basicMetadata.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BasicMetadataComponent\r\n{\r\n}","<h3>Basic Metadata Grid</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"basicMetadataSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/grid/basicMetadata/basicMetadataSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"basicMetadataSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/grid/basicMetadata/basicMetadataSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"data.interface.ts\">\r\n            <div [renderMarkdown]=\"'services/api/data/data.interface.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<basic-metadata-sample></basic-metadata-sample>","<ng-grid [gridOptions]=\"gridOptions\">\r\n    <basic-table-metadata>\r\n        <!-- Simple column definition -->\r\n        <basic-table-column id=\"country\" name=\"country\" title=\"Country\"></basic-table-column>\r\n        <!-- Simple column definition, with ordering enabled, specific width and title tooltip in header -->\r\n        <basic-table-column id=\"city\" name=\"city\" title=\"City\" [ordering]=\"true\" width=\"70px\" headerTooltip=\"City where citizen lives\"></basic-table-column>\r\n        <!-- Simple column definition, that is hidden as default, can be displayed using metadata selector -->\r\n        <basic-table-column id=\"zip\" name=\"zip\" title=\"ZIP\" [visible]=\"false\"></basic-table-column>\r\n        <!-- Simple column definition, with custom css classes for header and body cell -->\r\n        <basic-table-column id=\"street\" name=\"street\" title=\"Street\" headerClass=\"text-center\" cellClass=\"text-right\"></basic-table-column>\r\n        <!-- Simple column definition, without visible title -->\r\n        <basic-table-column id=\"houseNumber\" name=\"houseNumber\" title=\"House number\" [titleVisible]=\"false\"></basic-table-column>\r\n\r\n        <!-- Custom column definition, custom body template with all available context data -->\r\n        <basic-table-column id=\"citizenName\" title=\"Citizen name\">\r\n            <ng-template #bodyTemplate let-row let-column=\"column\" let-index=\"index\" let-rowIndex=\"rowIndex\">\r\n                <div>\r\n                    {{row?.citizen?.name}} | column title: {{column?.title}} | index of row on current page: {{index}} | index of row: {{rowIndex}}\r\n                </div>\r\n            </ng-template>\r\n        </basic-table-column>\r\n\r\n        <!-- Custom column definition, custom body and header template -->\r\n        <basic-table-column id=\"citizenSurname\" title=\"Citizen surname\">\r\n            <ng-template #bodyTemplate let-row>\r\n                <div>\r\n                    {{row?.citizen?.surname}}\r\n                </div>\r\n            </ng-template>\r\n\r\n            <ng-template #headerTemplate let-column=\"column\">\r\n                <div class=\"bold\">\r\n                    {{column?.title}}\r\n                </div>\r\n            </ng-template>\r\n        </basic-table-column>\r\n\r\n        <!-- Custom column definition, custom body template -->\r\n        <basic-table-column id=\"citizenBirthDate\" title=\"Citizen birth date\">\r\n            <ng-template #bodyTemplate let-row>{{row?.citizen?.birthDate | momentConvert}}</ng-template>\r\n        </basic-table-column>\r\n    </basic-table-metadata>\r\n</ng-grid>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {GridOptions, SimpleOrdering, BasicPagingOptions, AsyncDataLoaderOptions, DataResponse} from \"@anglr/grid\";\r\n\r\nimport {Address, DataService} from \"../../../services/api/data\";\r\nimport {Orderable} from \"../../../misc/types\";\r\n\r\n/**\r\n * Basic metadata sample for grid component\r\n */\r\n@Component(\r\n{\r\n    selector: 'basic-metadata-sample',\r\n    templateUrl: 'basicMetadataSample.component.html',\r\n    providers: [DataService],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BasicMetadataSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Grid options that are used for grid initialization\r\n     */\r\n    public gridOptions: GridOptions;\r\n\r\n    //######################### constructor #########################\r\n    constructor(private _dataSvc: DataService)\r\n    {\r\n        this.gridOptions =\r\n        {\r\n            plugins:\r\n            {\r\n                dataLoader:\r\n                {\r\n                    options: <AsyncDataLoaderOptions<Address, SimpleOrdering>>\r\n                    {\r\n                        //data callback used for getting data asynchronously\r\n                        dataCallback: this._getData.bind(this)\r\n                    }\r\n                },\r\n                paging:\r\n                {\r\n                    options: <BasicPagingOptions>\r\n                    {\r\n                        //available values for items per page buttons\r\n                        itemsPerPageValues: [10, 20, 40],\r\n                        //initial value of items per page, should be one of above\r\n                        initialItemsPerPage: 10\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    //######################### private methods #########################\r\n\r\n    /**\r\n     * Callback used for obtaining data\r\n     * @param page Index of requested page\r\n     * @param itemsPerPage Number of items per page\r\n     * @param ordering Order by column name\r\n     */\r\n    private async _getData(page: number, itemsPerPage: number, ordering: SimpleOrdering): Promise<DataResponse<Address>>\r\n    {\r\n        let reqOrdering: Orderable = null;\r\n\r\n        if(ordering)\r\n        {\r\n            reqOrdering = \r\n            {\r\n                direction: ordering.orderByDirection,\r\n                sort: ordering.orderBy\r\n            };\r\n        }\r\n\r\n        let result = await this._dataSvc\r\n            .getData({\r\n                        page: page,\r\n                        size: itemsPerPage\r\n                    },\r\n                    reqOrdering)\r\n            .toPromise();\r\n\r\n        return {\r\n            data: result.content,\r\n            totalCount: result.totalElements\r\n        };\r\n    }\r\n}","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Basic synchronous sample for grid component\r\n */\r\n@Component(\r\n{\r\n    selector: 'basicSync-view',\r\n    templateUrl: 'basicSync.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BasicSyncComponent\r\n{\r\n}","<h3>Basic Synchronous Grid</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"basicSyncSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/grid/basicSync/basicSyncSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"basicSyncSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/grid/basicSync/basicSyncSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"data.resolver.ts\">\r\n            <div [renderMarkdown]=\"'misc/resolvers/data.resolver.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"data.interface.ts\">\r\n            <div [renderMarkdown]=\"'services/api/data/data.interface.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<basic-sync-sample></basic-sync-sample>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {GridOptions, SyncDataLoaderComponent, SyncDataLoaderOptions, SimpleOrdering, BasicPagingOptions} from \"@anglr/grid\";\r\nimport {getValue, OrderByDirection} from \"@jscrpt/common\";\r\n\r\nimport {Address} from \"../../../services/api/data\";\r\n\r\ninterface RouteData\r\n{\r\n    data: Address[];\r\n}\r\n\r\n/**\r\n * Basic synchronous sample for grid component\r\n */\r\n@Component(\r\n{\r\n    selector: 'basic-sync-sample',\r\n    templateUrl: 'basicSyncSample.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BasicSyncSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Grid options that are used for grid initialization\r\n     */\r\n    public gridOptions: GridOptions;\r\n\r\n    //######################### constructor #########################\r\n    constructor(private _route: ActivatedRoute)\r\n    {\r\n        let data = (this._route.snapshot.data as RouteData).data;\r\n\r\n        this.gridOptions =\r\n        {\r\n            plugins:\r\n            {\r\n                dataLoader:\r\n                {\r\n                    //use sync data loader as grid data loader plugin\r\n                    type: SyncDataLoaderComponent,\r\n                    options: <SyncDataLoaderOptions<Address, SimpleOrdering>>\r\n                    {\r\n                        //all data used in data loader\r\n                        data: data,\r\n                        //custom ordering, does not have to be specified, defaults to function that orders using string ordering\r\n                        orderData: (data: any[], ordering: SimpleOrdering) =>\r\n                        {\r\n                            if(!ordering)\r\n                            {\r\n                                return data;\r\n                            }\r\n\r\n                            return data.sort((a, b) =>\r\n                            {\r\n                                let aValue = getValue(a, ordering.orderBy);\r\n                                let bValue = getValue(b, ordering.orderBy);\r\n                                let aValueNum = +aValue;\r\n                                let bValueNum = +bValue;\r\n\r\n                                if(!isNaN(aValueNum) && !isNaN(bValueNum))\r\n                                {\r\n                                    aValue = aValueNum;\r\n                                    bValue = bValueNum;\r\n                                }\r\n\r\n                                if(aValue < bValue)\r\n                                {\r\n                                    return ordering.orderByDirection == OrderByDirection.Ascendant ? -1 : 1;\r\n                                }\r\n                                else if(aValue > bValue)\r\n                                {\r\n                                    return ordering.orderByDirection == OrderByDirection.Ascendant ? 1 : -1;\r\n                                }\r\n                    \r\n                                return 0;\r\n                            });\r\n                        }\r\n                    }\r\n                },\r\n                paging:\r\n                {\r\n                    options: <BasicPagingOptions>\r\n                    {\r\n                        //available values for items per page buttons\r\n                        itemsPerPageValues: [15, 30, 60],\r\n                        //initial value of items per page, should be one of above\r\n                        initialItemsPerPage: 15\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n}","<ng-grid [gridOptions]=\"gridOptions\">\r\n    <basic-table-metadata>\r\n        <basic-table-column id=\"country\" name=\"country\" title=\"Country\"></basic-table-column>\r\n        <basic-table-column id=\"city\" name=\"city\" title=\"City\"></basic-table-column>\r\n        <basic-table-column id=\"zip\" name=\"zip\" title=\"ZIP\"></basic-table-column>\r\n        <basic-table-column id=\"street\" name=\"street\" title=\"Street\"></basic-table-column>\r\n        <basic-table-column id=\"houseNumber\" name=\"houseNumber\" title=\"House Number\"></basic-table-column>\r\n    </basic-table-metadata>\r\n</ng-grid>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Basic sample for grid component\r\n */\r\n@Component(\r\n{\r\n    selector: 'basic-view',\r\n    templateUrl: 'basic.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BasicComponent\r\n{\r\n}","<h3>Basic Grid</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"basicSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/grid/basic/basicSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"basicSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/grid/basic/basicSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"data.interface.ts\">\r\n            <div [renderMarkdown]=\"'services/api/data/data.interface.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<basic-sample></basic-sample>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {GridOptions, SimpleOrdering, BasicPagingOptions, AsyncDataLoaderOptions, DataResponse} from \"@anglr/grid\";\r\n\r\nimport {Address, DataService} from \"../../../services/api/data\";\r\nimport {Orderable} from \"../../../misc/types\";\r\n\r\n/**\r\n * Basic sample for grid component\r\n */\r\n@Component(\r\n{\r\n    selector: 'basic-sample',\r\n    templateUrl: 'basicSample.component.html',\r\n    providers: [DataService],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BasicSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Grid options that are used for grid initialization\r\n     */\r\n    public gridOptions: GridOptions;\r\n\r\n    //######################### constructor #########################\r\n    constructor(private _dataSvc: DataService)\r\n    {\r\n        this.gridOptions =\r\n        {\r\n            plugins:\r\n            {\r\n                dataLoader:\r\n                {\r\n                    options: <AsyncDataLoaderOptions<Address, SimpleOrdering>>\r\n                    {\r\n                        //data callback used for getting data asynchronously\r\n                        dataCallback: this._getData.bind(this)\r\n                    }\r\n                },\r\n                paging:\r\n                {\r\n                    options: <BasicPagingOptions>\r\n                    {\r\n                        //available values for items per page buttons\r\n                        itemsPerPageValues: [5, 10, 20],\r\n                        //initial value of items per page, should be one of above\r\n                        initialItemsPerPage: 5\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    //######################### private methods #########################\r\n\r\n    /**\r\n     * Callback used for obtaining data\r\n     * @param page Index of requested page\r\n     * @param itemsPerPage Number of items per page\r\n     * @param ordering Order by column name\r\n     */\r\n    private async _getData(page: number, itemsPerPage: number, ordering: SimpleOrdering): Promise<DataResponse<Address>>\r\n    {\r\n        let reqOrdering: Orderable = null;\r\n\r\n        if(ordering)\r\n        {\r\n            reqOrdering = \r\n            {\r\n                direction: ordering.orderByDirection,\r\n                sort: ordering.orderBy\r\n            };\r\n        }\r\n\r\n        let result = await this._dataSvc\r\n            .getData({\r\n                        page: page,\r\n                        size: itemsPerPage\r\n                    },\r\n                    reqOrdering)\r\n            .toPromise();\r\n\r\n        return {\r\n            data: result.content,\r\n            totalCount: result.totalElements\r\n        };\r\n    }\r\n}","<ng-grid [gridOptions]=\"gridOptions\">\r\n    <basic-table-metadata>\r\n        <basic-table-column id=\"country\" name=\"country\" title=\"Country\"></basic-table-column>\r\n        <basic-table-column id=\"city\" name=\"city\" title=\"City\"></basic-table-column>\r\n        <basic-table-column id=\"zip\" name=\"zip\" title=\"ZIP\"></basic-table-column>\r\n        <basic-table-column id=\"street\" name=\"street\" title=\"Street\"></basic-table-column>\r\n        <basic-table-column id=\"houseNumber\" name=\"houseNumber\" title=\"House Number\"></basic-table-column>\r\n    </basic-table-metadata>\r\n</ng-grid>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Configuration sample for grid component\r\n */\r\n@Component(\r\n{\r\n    selector: 'configuration-view',\r\n    templateUrl: 'configuration.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ConfigurationComponent\r\n{\r\n}","<h3>Configuration</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"configurationSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/grid/configuration/configurationSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"configurationSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/grid/configuration/configurationSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"grid.global.conf.ts\">\r\n            <div [renderMarkdown]=\"'boot/grid.global.conf.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<configuration-sample></configuration-sample>","import {Component, ChangeDetectionStrategy, ValueProvider} from \"@angular/core\";\r\nimport {GridOptions, SimpleOrdering, BasicPagingOptions, SyncDataLoaderComponent, SyncDataLoaderOptions, GRID_OPTIONS, PAGING_OPTIONS, NoDataRendererOptions} from \"@anglr/grid\";\r\n\r\n/**\r\n * Configuration sample for grid component\r\n */\r\n@Component(\r\n{\r\n    selector: 'configuration-sample',\r\n    templateUrl: 'configurationSample.component.html',\r\n    providers:\r\n    [\r\n        //one way is to provide all grid options\r\n        <ValueProvider>\r\n        {\r\n            provide: GRID_OPTIONS,\r\n            useValue: <GridOptions>\r\n            {\r\n                plugins:\r\n                {\r\n                    dataLoader:\r\n                    {\r\n                        //use sync data loader as grid data loader plugin for all 3 grids\r\n                        type: SyncDataLoaderComponent,\r\n                        options: <SyncDataLoaderOptions<any, SimpleOrdering>>\r\n                        {\r\n                            data: []\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        //other way is to provide only specific options for one plugin\r\n        <ValueProvider>\r\n        {\r\n            provide: PAGING_OPTIONS,\r\n            useValue: <BasicPagingOptions>\r\n            {\r\n                itemsPerPageValues: [15, 30, 60],\r\n                initialItemsPerPage: 15\r\n            }\r\n        }\r\n    ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ConfigurationSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Grid options that are used for grid initialization\r\n     */\r\n    public gridOptions: GridOptions;\r\n\r\n    //######################### constructor #########################\r\n    constructor()\r\n    {\r\n        this.gridOptions =\r\n        {\r\n            plugins:\r\n            {\r\n                noDataRenderer:\r\n                {\r\n                    options: <NoDataRendererOptions<any>>\r\n                    {\r\n                        texts:\r\n                        {\r\n                            noData: \"See there are no data :).\"\r\n                        }\r\n                    }\r\n                },\r\n                paging:\r\n                {\r\n                    options: <BasicPagingOptions>\r\n                    {\r\n                        //available values for items per page buttons\r\n                        itemsPerPageValues: [5, 10, 15]\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n}","<h4>Component scope provided paging options, globally provided no data renderer options</h4>\r\n\r\n<ng-grid>\r\n    <basic-table-metadata>\r\n        <basic-table-column id=\"country\" name=\"country\" title=\"Country\"></basic-table-column>\r\n        <basic-table-column id=\"city\" name=\"city\" title=\"City\"></basic-table-column>\r\n        <basic-table-column id=\"zip\" name=\"zip\" title=\"ZIP\"></basic-table-column>\r\n        <basic-table-column id=\"street\" name=\"street\" title=\"Street\"></basic-table-column>\r\n        <basic-table-column id=\"houseNumber\" name=\"houseNumber\" title=\"House Number\"></basic-table-column>\r\n    </basic-table-metadata>\r\n</ng-grid>\r\n\r\n<hr class=\"margin-top-big\">\r\n\r\n<h4>Locally provided paging and no data renderer options</h4>\r\n\r\n<ng-grid [gridOptions]=\"gridOptions\">\r\n    <basic-table-metadata>\r\n        <basic-table-column id=\"country\" name=\"country\" title=\"Country\"></basic-table-column>\r\n        <basic-table-column id=\"city\" name=\"city\" title=\"City\"></basic-table-column>\r\n        <basic-table-column id=\"zip\" name=\"zip\" title=\"ZIP\"></basic-table-column>\r\n        <basic-table-column id=\"street\" name=\"street\" title=\"Street\"></basic-table-column>\r\n        <basic-table-column id=\"houseNumber\" name=\"houseNumber\" title=\"House Number\"></basic-table-column>\r\n    </basic-table-metadata>\r\n</ng-grid>","import {NgModule} from '@angular/core';\n\nimport {CommonSharedModule} from '../../boot/commonShared.module';\nimport {BasicSampleComponent} from './basic/basicSample.component';\nimport {BasicComponent} from './basic/basic.component';\nimport {BasicMetadataSampleComponent} from './basicMetadata/basicMetadataSample.component';\nimport {BasicMetadataComponent} from './basicMetadata/basicMetadata.component';\nimport {BasicSyncSampleComponent} from './basicSync/basicSyncSample.component';\nimport {BasicSyncComponent} from './basicSync/basicSync.component';\nimport {ConfigurationSampleComponent} from './configuration/configurationSample.component';\nimport {ConfigurationComponent} from './configuration/configuration.component';\nimport {GroupedMetadataSampleComponent} from './groupedMetadata/groupedMetadataSample.component';\nimport {GroupedMetadataComponent} from './groupedMetadata/groupedMetadata.component';\nimport {CustomRendererSampleComponent} from './customRenderer/customRendererSample.component';\nimport {CustomRendererComponent} from './customRenderer/customRenderer.component';\nimport {GalleryMetadataGathererComponent} from './customRenderer/gallery/galleryMetadataGatherer.component';\nimport {GalleryItemComponent} from './customRenderer/gallery/galleryItem.component';\nimport {GalleryContentRendererComponent} from './customRenderer/galleryRenderer/galleryContentRenderer.component';\n\n/**\n * Module with grid samples components\n */\n@NgModule(\n{\n    imports:\n    [\n        CommonSharedModule\n    ],\n    declarations:\n    [\n        BasicSampleComponent,\n        BasicComponent,\n        BasicMetadataSampleComponent,\n        BasicMetadataComponent,\n        BasicSyncSampleComponent,\n        BasicSyncComponent,\n        ConfigurationSampleComponent,\n        ConfigurationComponent,\n        GroupedMetadataSampleComponent,\n        GroupedMetadataComponent,\n        CustomRendererSampleComponent,\n        CustomRendererComponent,\n        GalleryMetadataGathererComponent,\n        GalleryItemComponent,\n        GalleryContentRendererComponent\n    ]\n    \n})\nexport class GridSamplesModule\n{\n}","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Grouped metadata sample for grid component\r\n */\r\n@Component(\r\n{\r\n    selector: 'grouped-metadata-view',\r\n    templateUrl: 'groupedMetadata.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GroupedMetadataComponent\r\n{\r\n}","<h3>Grouped Metadata Grid</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"groupedMetadataSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/grid/groupedMetadata/groupedMetadataSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"groupedMetadataSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/grid/groupedMetadata/groupedMetadataSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"data.interface.ts\">\r\n            <div [renderMarkdown]=\"'services/api/data/data.interface.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<grouped-metadata-sample></grouped-metadata-sample>","<ng-grid [gridOptions]=\"gridOptions\">\r\n    <grouped-table-metadata>\r\n        <!-- group with custom template and 2 columns in it-->\r\n        <table-group title=\"Country and city\">\r\n            <ng-template let-group>\r\n                <div class=\"text-left\">{{group?.title}}</div>\r\n            </ng-template>\r\n\r\n            <table-group-column id=\"country\"></table-group-column>\r\n            <table-group-column id=\"city\"></table-group-column>\r\n        </table-group>\r\n\r\n        <!-- group with only one column and with title that is not visible -->\r\n        <table-group title=\"Zip code\" [titleVisible]=\"false\">\r\n            <table-group-column id=\"zip\"></table-group-column>\r\n        </table-group>\r\n\r\n        <!-- group with custom css class applied to group and 2 columns in it -->\r\n        <table-group title=\"Address street:\" cssClass=\"text-right\">\r\n            <table-group-column id=\"street\"></table-group-column>\r\n            <table-group-column id=\"houseNumber\"></table-group-column>\r\n        </table-group>\r\n\r\n        <!-- columns metadata definition as standard -->\r\n        <basic-table-column id=\"country\" name=\"country\" title=\"Country\"></basic-table-column>\r\n        <basic-table-column id=\"city\" name=\"city\" title=\"City\"></basic-table-column>\r\n        <basic-table-column id=\"zip\" name=\"zip\" title=\"ZIP\"></basic-table-column>\r\n        <basic-table-column id=\"street\" name=\"street\" title=\"Street\"></basic-table-column>\r\n        <basic-table-column id=\"houseNumber\" name=\"houseNumber\" title=\"House number\"></basic-table-column>\r\n    </grouped-table-metadata>\r\n</ng-grid>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {GridOptions, SimpleOrdering, BasicPagingOptions, AsyncDataLoaderOptions, DataResponse, TableContentRendererOptions, GroupedTableHeaderContentRendererComponent} from \"@anglr/grid\";\r\n\r\nimport {Address, DataService} from \"../../../services/api/data\";\r\nimport {Orderable} from \"../../../misc/types\";\r\n\r\n/**\r\n * Grouped metadata sample for grid component\r\n */\r\n@Component(\r\n{\r\n    selector: 'grouped-metadata-sample',\r\n    templateUrl: 'groupedMetadataSample.component.html',\r\n    providers: [DataService],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GroupedMetadataSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Grid options that are used for grid initialization\r\n     */\r\n    public gridOptions: GridOptions;\r\n\r\n    //######################### constructor #########################\r\n    constructor(private _dataSvc: DataService)\r\n    {\r\n        this.gridOptions =\r\n        {\r\n            plugins:\r\n            {\r\n                contentRenderer:\r\n                {\r\n                    options: <TableContentRendererOptions>\r\n                    {\r\n                        plugins:\r\n                        {\r\n                            headerRenderer:\r\n                            {\r\n                                type: GroupedTableHeaderContentRendererComponent\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                dataLoader:\r\n                {\r\n                    options: <AsyncDataLoaderOptions<Address, SimpleOrdering>>\r\n                    {\r\n                        //data callback used for getting data asynchronously\r\n                        dataCallback: this._getData.bind(this)\r\n                    }\r\n                },\r\n                paging:\r\n                {\r\n                    options: <BasicPagingOptions>\r\n                    {\r\n                        //available values for items per page buttons\r\n                        itemsPerPageValues: [5, 10, 20],\r\n                        //initial value of items per page, should be one of above\r\n                        initialItemsPerPage: 5\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    //######################### private methods #########################\r\n\r\n    /**\r\n     * Callback used for obtaining data\r\n     * @param page Index of requested page\r\n     * @param itemsPerPage Number of items per page\r\n     * @param ordering Order by column name\r\n     */\r\n    private async _getData(page: number, itemsPerPage: number, ordering: SimpleOrdering): Promise<DataResponse<Address>>\r\n    {\r\n        let reqOrdering: Orderable = null;\r\n\r\n        if(ordering)\r\n        {\r\n            reqOrdering = \r\n            {\r\n                direction: ordering.orderByDirection,\r\n                sort: ordering.orderBy\r\n            };\r\n        }\r\n\r\n        let result = await this._dataSvc\r\n            .getData({\r\n                        page: page,\r\n                        size: itemsPerPage\r\n                    },\r\n                    reqOrdering)\r\n            .toPromise();\r\n\r\n        return {\r\n            data: result.content,\r\n            totalCount: result.totalElements\r\n        };\r\n    }\r\n}","var map = {\n\t\"./af\": 66250,\n\t\"./af.js\": 66250,\n\t\"./ar\": 57505,\n\t\"./ar-dz\": 82466,\n\t\"./ar-dz.js\": 82466,\n\t\"./ar-kw\": 92740,\n\t\"./ar-kw.js\": 92740,\n\t\"./ar-ly\": 66282,\n\t\"./ar-ly.js\": 66282,\n\t\"./ar-ma\": 30842,\n\t\"./ar-ma.js\": 30842,\n\t\"./ar-sa\": 24229,\n\t\"./ar-sa.js\": 24229,\n\t\"./ar-tn\": 93880,\n\t\"./ar-tn.js\": 93880,\n\t\"./ar.js\": 57505,\n\t\"./az\": 93030,\n\t\"./az.js\": 93030,\n\t\"./be\": 8541,\n\t\"./be.js\": 8541,\n\t\"./bg\": 29581,\n\t\"./bg.js\": 29581,\n\t\"./bm\": 85498,\n\t\"./bm.js\": 85498,\n\t\"./bn\": 57059,\n\t\"./bn-bd\": 23532,\n\t\"./bn-bd.js\": 23532,\n\t\"./bn.js\": 57059,\n\t\"./bo\": 18120,\n\t\"./bo.js\": 18120,\n\t\"./br\": 1202,\n\t\"./br.js\": 1202,\n\t\"./bs\": 8895,\n\t\"./bs.js\": 8895,\n\t\"./ca\": 24875,\n\t\"./ca.js\": 24875,\n\t\"./cs\": 74691,\n\t\"./cs.js\": 74691,\n\t\"./cv\": 92987,\n\t\"./cv.js\": 92987,\n\t\"./cy\": 15572,\n\t\"./cy.js\": 15572,\n\t\"./da\": 98488,\n\t\"./da.js\": 98488,\n\t\"./de\": 43694,\n\t\"./de-at\": 42381,\n\t\"./de-at.js\": 42381,\n\t\"./de-ch\": 11304,\n\t\"./de-ch.js\": 11304,\n\t\"./de.js\": 43694,\n\t\"./dv\": 84049,\n\t\"./dv.js\": 84049,\n\t\"./el\": 50402,\n\t\"./el.js\": 50402,\n\t\"./en-au\": 90579,\n\t\"./en-au.js\": 90579,\n\t\"./en-ca\": 99159,\n\t\"./en-ca.js\": 99159,\n\t\"./en-gb\": 9422,\n\t\"./en-gb.js\": 9422,\n\t\"./en-ie\": 28513,\n\t\"./en-ie.js\": 28513,\n\t\"./en-il\": 61537,\n\t\"./en-il.js\": 61537,\n\t\"./en-in\": 57945,\n\t\"./en-in.js\": 57945,\n\t\"./en-nz\": 45820,\n\t\"./en-nz.js\": 45820,\n\t\"./en-sg\": 54214,\n\t\"./en-sg.js\": 54214,\n\t\"./eo\": 39751,\n\t\"./eo.js\": 39751,\n\t\"./es\": 79443,\n\t\"./es-do\": 58461,\n\t\"./es-do.js\": 58461,\n\t\"./es-mx\": 78295,\n\t\"./es-mx.js\": 78295,\n\t\"./es-us\": 30250,\n\t\"./es-us.js\": 30250,\n\t\"./es.js\": 79443,\n\t\"./et\": 33284,\n\t\"./et.js\": 33284,\n\t\"./eu\": 75917,\n\t\"./eu.js\": 75917,\n\t\"./fa\": 86892,\n\t\"./fa.js\": 86892,\n\t\"./fi\": 2416,\n\t\"./fi.js\": 2416,\n\t\"./fil\": 32330,\n\t\"./fil.js\": 32330,\n\t\"./fo\": 15429,\n\t\"./fo.js\": 15429,\n\t\"./fr\": 40557,\n\t\"./fr-ca\": 33808,\n\t\"./fr-ca.js\": 33808,\n\t\"./fr-ch\": 1029,\n\t\"./fr-ch.js\": 1029,\n\t\"./fr.js\": 40557,\n\t\"./fy\": 58435,\n\t\"./fy.js\": 58435,\n\t\"./ga\": 7268,\n\t\"./ga.js\": 7268,\n\t\"./gd\": 27325,\n\t\"./gd.js\": 27325,\n\t\"./gl\": 86631,\n\t\"./gl.js\": 86631,\n\t\"./gom-deva\": 20994,\n\t\"./gom-deva.js\": 20994,\n\t\"./gom-latn\": 51307,\n\t\"./gom-latn.js\": 51307,\n\t\"./gu\": 31546,\n\t\"./gu.js\": 31546,\n\t\"./he\": 90505,\n\t\"./he.js\": 90505,\n\t\"./hi\": 90732,\n\t\"./hi.js\": 90732,\n\t\"./hr\": 48681,\n\t\"./hr.js\": 48681,\n\t\"./hu\": 22314,\n\t\"./hu.js\": 22314,\n\t\"./hy-am\": 86516,\n\t\"./hy-am.js\": 86516,\n\t\"./id\": 86237,\n\t\"./id.js\": 86237,\n\t\"./is\": 65164,\n\t\"./is.js\": 65164,\n\t\"./it\": 34705,\n\t\"./it-ch\": 71629,\n\t\"./it-ch.js\": 71629,\n\t\"./it.js\": 34705,\n\t\"./ja\": 71463,\n\t\"./ja.js\": 71463,\n\t\"./jv\": 93985,\n\t\"./jv.js\": 93985,\n\t\"./ka\": 49466,\n\t\"./ka.js\": 49466,\n\t\"./kk\": 58713,\n\t\"./kk.js\": 58713,\n\t\"./km\": 76537,\n\t\"./km.js\": 76537,\n\t\"./kn\": 10052,\n\t\"./kn.js\": 10052,\n\t\"./ko\": 8133,\n\t\"./ko.js\": 8133,\n\t\"./ku\": 84299,\n\t\"./ku.js\": 84299,\n\t\"./ky\": 32869,\n\t\"./ky.js\": 32869,\n\t\"./lb\": 25916,\n\t\"./lb.js\": 25916,\n\t\"./lo\": 58586,\n\t\"./lo.js\": 58586,\n\t\"./lt\": 22126,\n\t\"./lt.js\": 22126,\n\t\"./lv\": 85511,\n\t\"./lv.js\": 85511,\n\t\"./me\": 97860,\n\t\"./me.js\": 97860,\n\t\"./mi\": 95697,\n\t\"./mi.js\": 95697,\n\t\"./mk\": 84051,\n\t\"./mk.js\": 84051,\n\t\"./ml\": 3870,\n\t\"./ml.js\": 3870,\n\t\"./mn\": 72410,\n\t\"./mn.js\": 72410,\n\t\"./mr\": 51585,\n\t\"./mr.js\": 51585,\n\t\"./ms\": 84456,\n\t\"./ms-my\": 62336,\n\t\"./ms-my.js\": 62336,\n\t\"./ms.js\": 84456,\n\t\"./mt\": 93943,\n\t\"./mt.js\": 93943,\n\t\"./my\": 16570,\n\t\"./my.js\": 16570,\n\t\"./nb\": 96835,\n\t\"./nb.js\": 96835,\n\t\"./ne\": 91061,\n\t\"./ne.js\": 91061,\n\t\"./nl\": 91063,\n\t\"./nl-be\": 76057,\n\t\"./nl-be.js\": 76057,\n\t\"./nl.js\": 91063,\n\t\"./nn\": 57199,\n\t\"./nn.js\": 57199,\n\t\"./oc-lnc\": 45955,\n\t\"./oc-lnc.js\": 45955,\n\t\"./pa-in\": 51508,\n\t\"./pa-in.js\": 51508,\n\t\"./pl\": 2198,\n\t\"./pl.js\": 2198,\n\t\"./pt\": 62900,\n\t\"./pt-br\": 33621,\n\t\"./pt-br.js\": 33621,\n\t\"./pt.js\": 62900,\n\t\"./ro\": 16002,\n\t\"./ro.js\": 16002,\n\t\"./ru\": 96628,\n\t\"./ru.js\": 96628,\n\t\"./sd\": 99598,\n\t\"./sd.js\": 99598,\n\t\"./se\": 47274,\n\t\"./se.js\": 47274,\n\t\"./si\": 76998,\n\t\"./si.js\": 76998,\n\t\"./sk\": 41093,\n\t\"./sk.js\": 41093,\n\t\"./sl\": 8388,\n\t\"./sl.js\": 8388,\n\t\"./sq\": 60046,\n\t\"./sq.js\": 60046,\n\t\"./sr\": 26180,\n\t\"./sr-cyrl\": 95671,\n\t\"./sr-cyrl.js\": 95671,\n\t\"./sr.js\": 26180,\n\t\"./ss\": 11900,\n\t\"./ss.js\": 11900,\n\t\"./sv\": 32052,\n\t\"./sv.js\": 32052,\n\t\"./sw\": 82791,\n\t\"./sw.js\": 82791,\n\t\"./ta\": 14224,\n\t\"./ta.js\": 14224,\n\t\"./te\": 2175,\n\t\"./te.js\": 2175,\n\t\"./tet\": 6669,\n\t\"./tet.js\": 6669,\n\t\"./tg\": 13567,\n\t\"./tg.js\": 13567,\n\t\"./th\": 3799,\n\t\"./th.js\": 3799,\n\t\"./tk\": 27175,\n\t\"./tk.js\": 27175,\n\t\"./tl-ph\": 66720,\n\t\"./tl-ph.js\": 66720,\n\t\"./tlh\": 61795,\n\t\"./tlh.js\": 61795,\n\t\"./tr\": 50147,\n\t\"./tr.js\": 50147,\n\t\"./tzl\": 88646,\n\t\"./tzl.js\": 88646,\n\t\"./tzm\": 20718,\n\t\"./tzm-latn\": 70705,\n\t\"./tzm-latn.js\": 70705,\n\t\"./tzm.js\": 20718,\n\t\"./ug-cn\": 75557,\n\t\"./ug-cn.js\": 75557,\n\t\"./uk\": 60580,\n\t\"./uk.js\": 60580,\n\t\"./ur\": 86766,\n\t\"./ur.js\": 86766,\n\t\"./uz\": 40689,\n\t\"./uz-latn\": 75483,\n\t\"./uz-latn.js\": 75483,\n\t\"./uz.js\": 40689,\n\t\"./vi\": 73260,\n\t\"./vi.js\": 73260,\n\t\"./x-pseudo\": 22948,\n\t\"./x-pseudo.js\": 22948,\n\t\"./yo\": 8120,\n\t\"./yo.js\": 8120,\n\t\"./zh-cn\": 97529,\n\t\"./zh-cn.js\": 97529,\n\t\"./zh-hk\": 94821,\n\t\"./zh-hk.js\": 94821,\n\t\"./zh-mo\": 94791,\n\t\"./zh-mo.js\": 94791,\n\t\"./zh-tw\": 55176,\n\t\"./zh-tw.js\": 55176\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 74375;"],"sourceRoot":""}