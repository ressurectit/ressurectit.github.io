{"version":3,"sources":["webpack://ressurectit.github.io/./app/services/api/source/source.service.ts","webpack://ressurectit.github.io/./app/modules/asSource/pipes/asSource/asSource.pipe.ts","webpack://ressurectit.github.io/./app/misc/rxjsOperators/handle404.ts","webpack://ressurectit.github.io/./app/modules/sourceCode/components/sourceCode/sourceCode.component.html","webpack://ressurectit.github.io/./app/modules/sourceCode/components/sourceCode/sourceCode.component.ts","webpack://ressurectit.github.io/./app/samples/grid/basicSync/basicSync.component.ts","webpack://ressurectit.github.io/./app/samples/grid/basicSync/basicSync.component.html","webpack://ressurectit.github.io/./app/samples/grid/basicSync/basicSyncSample.component.ts","webpack://ressurectit.github.io/./app/samples/grid/basicSync/basicSyncSample.component.html"],"names":["SourceService","getSource","_path","C","Observable","AsSourcePipe","constructor","_sourceSvc","transform","path","type","source","this","pipe","catchError","error","status","of","throwError","toPromise","SourceCodeComponent","showSources","BasicSyncComponent","BasicSyncSampleComponent","_route","data","snapshot","gridOptions","plugins","dataLoader","options","orderData","ordering","sort","a","b","aValue","getValue","orderBy","bValue","aValueNum","bValueNum","isNaN","orderByDirection","paging","itemsPerPageValues","initialItemsPerPage"],"mappings":"qrBASaA,EAAa,cAAS,KASxBC,UAAwBC,GAE3B,OAAO,O,qEAXFF,KAAa,GAAbA,I,uBAAAA,EAAa,QAAbA,EAAa,gBAFD,SAWrB,IAHC,IAAAG,MACA,OAAS,YACT,QAAI,W,EACa,E,GAAA,QAAK,Q,yGAAwBC,EAAA,I,8BATtCJ,EAAa,IADzB,OAAQ,wFACIA,G,2DCGN,MAAMK,EAGTC,YAAoBC,GAAA,KAAAA,aAWPC,UAAUC,EAAWC,EAAe,c,qCAE7C,IAAIC,QAAeC,KAAKL,WAAWN,UAAUQ,GACxCI,MCrBDF,GAEGA,EAAOE,MAAK,EAAAC,EAAA,IAAWC,GAEP,KAAhBA,EAAMC,QAEE,EAAAC,MAAG,OAGP,EAAAC,EAAA,GAAWH,QDajBI,YAEL,MAAgB,UAAGT,MACzBC,UAAU,aAAeF,a,iUArBdJ,GAAY,Y,mCAAZA,EAAY,W,qLEZzB,gBACI,QACJ,Q,KAFwC,0BCcjC,MAAMe,EARb,cAeW,KAAAC,aAAuB,G,iCAPrBD,I,kBAAAA,EAAmB,+C,MAAA,0K,ODdhC,qBAIA,cAAgF,+DAC5E,iBACJ,Q,MANM,0BAIe,wC,+MCOL,CAAC,MAAkB,qB,wNCA5B,MAAME,G,iCAAAA,I,kBAAAA,EAAkB,0PCX/B,aAAI,gCAAsB,OAE1B,sBACI,wBACI,oBACI,gB,mCACJ,OAEA,oBACI,gB,qCACJ,OAEA,qBACI,iB,qCACJ,OAEA,qBACI,iB,qCACJ,OACJ,OACJ,OAEA,8B,MAjBiB,uGAIA,mHAIA,uFAIA,6F,uTCIV,MAAMC,EAUTjB,YAAoBkB,GAAA,KAAAA,SAEhB,IAAIC,EAAQb,KAAKY,OAAOE,SAASD,KAAmBA,KAEpDb,KAAKe,YACL,CACIC,QACA,CACIC,WACA,CAEInB,KAAM,KACNoB,QACA,CAEIL,KAAMA,EAENM,UAAW,CAACN,EAAaO,IAEjBA,EAKGP,EAAKQ,MAAK,CAACC,EAAGC,KAEjB,IAAIC,GAAS,IAAAC,UAASH,EAAGF,EAASM,SAC9BC,GAAS,IAAAF,UAASF,EAAGH,EAASM,SAC9BE,GAAaJ,EACbK,GAAaF,EAQjB,OANIG,MAAMF,IAAeE,MAAMD,KAE3BL,EAASI,EACTD,EAASE,GAGVL,EAASG,EAEDP,EAASW,kBAAoB,eAA8B,EAAI,EAElEP,EAASG,EAENP,EAASW,kBAAoB,cAA6B,GAAK,EAGnE,KAzBAlB,IA8BvBmB,OACA,CACId,QACA,CAEIe,mBAAoB,CAAC,GAAI,GAAI,IAE7BC,oBAAqB,Q,iCApEhCvB,GAAwB,Y,kBAAxBA,EAAwB,kWCrBrC,oBACI,+BACI,+BACA,+BACA,+BACA,+BACA,+BACJ,OACJ,Q,KARS,kC","file":"9773.client.es2015.chunk.beaea66f8cfce3720aee.js","sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {BaseUrl, Produces, ResponseType, GET, Path, Cache, RESTClient} from \"@anglr/rest\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n/**\r\n * Service used to obtain source files\r\n */\r\n@Injectable({providedIn: 'root'})\r\n@BaseUrl('https://raw.githubusercontent.com/ressurectit/ressurectit.github.io.src/master/app/')\r\nexport class SourceService extends RESTClient\r\n{\r\n    /**\r\n     * Gets content file from path\r\n     * @param _path Path to content file\r\n     */\r\n    @Cache()\r\n    @Produces(ResponseType.Text)\r\n    @GET('{path}')\r\n    public getSource(@Path('path') _path: string): Observable<string>\r\n    {\r\n        return null;\r\n    }\r\n}","import {Pipe, PipeTransform} from \"@angular/core\";\r\n\r\nimport {SourceService} from \"../../../../services/api/source\";\r\nimport {handle404} from \"../../../../misc/rxjsOperators\";\r\n\r\n/**\r\n * Obtains source for provided string\r\n */\r\n@Pipe(\r\n{\r\n    name: \"asSource\"\r\n})\r\nexport class AsSourcePipe implements PipeTransform\r\n{\r\n    //######################### constructor #########################\r\n    constructor(private _sourceSvc: SourceService)\r\n    {\r\n    }\r\n\r\n    //######################### public methods #########################\r\n\r\n    /**\r\n     * Returns observable for obtaining source\r\n     * @param path Value to be used as source path\r\n     * @param type Type of source\r\n     */\r\n    public async transform(path: any, type: string = 'typescript'): Promise<string>\r\n    {\r\n        let source = await this._sourceSvc.getSource(path)\r\n            .pipe(handle404())\r\n            .toPromise();\r\n\r\n        return '``` ' + `${type}\r\n${source ?? 'not found ' + path}\r\n` + '```';\r\n    }\r\n}","import {Observable, MonoTypeOperatorFunction, of, throwError} from \"rxjs\";\r\nimport {catchError} from \"rxjs/operators\";\r\n\r\n/**\r\n * Handles 404 http code as response\r\n */\r\nexport function handle404<TResponse>(): MonoTypeOperatorFunction<TResponse|null>\r\n{\r\n    return (source: Observable<TResponse|null>) =>\r\n    {\r\n        return source.pipe(catchError(error =>\r\n        {\r\n            if(error.status == 404)\r\n            {\r\n                return of(null);\r\n            }\r\n\r\n            return throwError(error);\r\n        }));\r\n    };\r\n}","<div *ngIf=\"showSources\" class=\"flex-1\" @slideInOut>\r\n    <ng-content></ng-content>\r\n</div>\r\n\r\n<a class=\"show-icon\" [class.absolute]=\"showSources\" title=\"Show / hide sources\" (click)=\"showSources = !showSources\">\r\n    <span class=\"fas fa-code\"></span>\r\n</a>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {slideInOutTrigger} from '@anglr/animations';\r\n\r\n/**\r\n * Component that is used for displaying source codes\r\n */\r\n@Component(\r\n{\r\n    selector: 'source-code',\r\n    templateUrl: 'sourceCode.component.html',\r\n    styleUrls: ['sourceCode.component.scss'],\r\n    animations: [slideInOutTrigger],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SourceCodeComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Indication whether show/hide sources\r\n     */\r\n    public showSources: boolean = false;\r\n}","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Basic synchronous sample for grid component\r\n */\r\n@Component(\r\n{\r\n    selector: 'basicSync-view',\r\n    templateUrl: 'basicSync.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BasicSyncComponent\r\n{\r\n}","<h3>Basic Synchronous Grid</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"basicSyncSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/grid/basicSync/basicSyncSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"basicSyncSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/grid/basicSync/basicSyncSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"data.resolver.ts\">\r\n            <div [renderMarkdown]=\"'misc/resolvers/data.resolver.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"data.interface.ts\">\r\n            <div [renderMarkdown]=\"'services/api/data/data.interface.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<basic-sync-sample></basic-sync-sample>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {GridOptions, SyncDataLoaderComponent, SyncDataLoaderOptions, SimpleOrdering, BasicPagingOptions} from \"@anglr/grid\";\r\nimport {getValue, OrderByDirection} from \"@jscrpt/common\";\r\n\r\nimport {Address} from \"../../../services/api/data\";\r\n\r\ninterface RouteData\r\n{\r\n    data: Address[];\r\n}\r\n\r\n/**\r\n * Basic synchronous sample for grid component\r\n */\r\n@Component(\r\n{\r\n    selector: 'basic-sync-sample',\r\n    templateUrl: 'basicSyncSample.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class BasicSyncSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Grid options that are used for grid initialization\r\n     */\r\n    public gridOptions: GridOptions;\r\n\r\n    //######################### constructor #########################\r\n    constructor(private _route: ActivatedRoute)\r\n    {\r\n        let data = (this._route.snapshot.data as RouteData).data;\r\n\r\n        this.gridOptions =\r\n        {\r\n            plugins:\r\n            {\r\n                dataLoader:\r\n                {\r\n                    //use sync data loader as grid data loader plugin\r\n                    type: SyncDataLoaderComponent,\r\n                    options: <SyncDataLoaderOptions<Address, SimpleOrdering>>\r\n                    {\r\n                        //all data used in data loader\r\n                        data: data,\r\n                        //custom ordering, does not have to be specified, defaults to function that orders using string ordering\r\n                        orderData: (data: any[], ordering: SimpleOrdering) =>\r\n                        {\r\n                            if(!ordering)\r\n                            {\r\n                                return data;\r\n                            }\r\n\r\n                            return data.sort((a, b) =>\r\n                            {\r\n                                let aValue = getValue(a, ordering.orderBy);\r\n                                let bValue = getValue(b, ordering.orderBy);\r\n                                let aValueNum = +aValue;\r\n                                let bValueNum = +bValue;\r\n\r\n                                if(!isNaN(aValueNum) && !isNaN(bValueNum))\r\n                                {\r\n                                    aValue = aValueNum;\r\n                                    bValue = bValueNum;\r\n                                }\r\n\r\n                                if(aValue < bValue)\r\n                                {\r\n                                    return ordering.orderByDirection == OrderByDirection.Ascendant ? -1 : 1;\r\n                                }\r\n                                else if(aValue > bValue)\r\n                                {\r\n                                    return ordering.orderByDirection == OrderByDirection.Ascendant ? 1 : -1;\r\n                                }\r\n                    \r\n                                return 0;\r\n                            });\r\n                        }\r\n                    }\r\n                },\r\n                paging:\r\n                {\r\n                    options: <BasicPagingOptions>\r\n                    {\r\n                        //available values for items per page buttons\r\n                        itemsPerPageValues: [15, 30, 60],\r\n                        //initial value of items per page, should be one of above\r\n                        initialItemsPerPage: 15\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }\r\n}","<ng-grid [gridOptions]=\"gridOptions\">\r\n    <basic-table-metadata>\r\n        <basic-table-column id=\"country\" name=\"country\" title=\"Country\"></basic-table-column>\r\n        <basic-table-column id=\"city\" name=\"city\" title=\"City\"></basic-table-column>\r\n        <basic-table-column id=\"zip\" name=\"zip\" title=\"ZIP\"></basic-table-column>\r\n        <basic-table-column id=\"street\" name=\"street\" title=\"Street\"></basic-table-column>\r\n        <basic-table-column id=\"houseNumber\" name=\"houseNumber\" title=\"House Number\"></basic-table-column>\r\n    </basic-table-metadata>\r\n</ng-grid>"],"sourceRoot":""}