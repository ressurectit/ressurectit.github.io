{"version":3,"sources":["webpack://ressurectit.github.io/./app/samples/select/external/externalSample.component.ts","webpack://ressurectit.github.io/./app/samples/select/external/externalSample.component.html","webpack://ressurectit.github.io/./node_modules/@anglr/select/dist/es2015/src/misc/optionsGatherer/codeOptionsGatherer.js","webpack://ressurectit.github.io/./app/samples/select/external/externalSource.directive.ts","webpack://ressurectit.github.io/./node_modules/@anglr/select/extensions/dist/es2015/extensions/src/extensions/reinitializeOptions.js"],"names":["ExternalSampleComponent","selectControl","CodeOptionsGatherer","constructor","this","_availableOptions","_options","_availableOptionsChange","optionsChange","value","initializeGatherer","liveSearch","ngSelectPlugins","_liveSearch","_searchValueChangeSubscription","unsubscribe","searchValueChange","subscribe","searchValue","options","emit","filter","pluginBus","selectOptions","liveSearchFilter","normalizer","destroyGatherer","ExternalSourceDirective","_enums","_select","_codeOptionsGatherer","autoInitialize","ngOnInit","isBlank","externalSourceName","Error","dataObservable","execute","optionsGatherer","ngSelect","initOptions","invalidateVisuals","initialize","getEnum","data","tmp","mappingCallback","map","itm","kod","name","popis","onlyCodes","onlyTexts","isPresent","emptyValueText","isString","text","availableOptionsChange","D"],"mappings":"+UAYO,MAAMA,EANb,cAaW,KAAAC,cAA6B,IAAI,KAAY,O,iCAP3CD,I,kBAAAA,EAAuB,qPCZpC,cAAK,O,eAAsC,OAE3C,gBAAmC,uBAAa,OAEhD,sBAGA,gBAAmC,yBAAe,OAElD,sBAGA,gBAAmC,0BAAe,OAElD,wB,MAdK,qFAIM,0CAKA,0CAA6B,gBAK7B,0CAA6B,kB,2NCHjC,MAAME,EACTC,cAMIC,KAAKC,kBAAoB,GAIzBD,KAAKE,SAAW,GAIhBF,KAAKG,wBAA0B,IAAI,IAInCH,KAAKI,cAAgB,IAAI,IAO7B,cACI,OAAOJ,KAAKE,SAMhB,YAAYG,GACRL,KAAKE,SAAWG,EAChBL,KAAKC,kBAAoBI,EAM7B,uBACI,OAAOL,KAAKC,kBAOhB,6BACI,OAAOD,KAAKG,wBAOhBG,qBAEI,IAAIC,EAAgCP,KAAKQ,gBAAgB,KACrDR,KAAKS,aAAeT,KAAKS,aAAeF,IACxCP,KAAKU,+BAA+BC,cACpCX,KAAKU,+BAAiC,KACtCV,KAAKS,YAAc,MAElBT,KAAKS,cACNT,KAAKS,YAAcF,EACnBP,KAAKU,+BAAiCV,KAAKS,YAAYG,kBAAkBC,WAAU,KAI/E,IAAKb,KAAKS,YAAYK,YAGlB,OAFAd,KAAKC,kBAAoBD,KAAKe,aAC9Bf,KAAKG,wBAAwBa,OAGjChB,KAAKC,kBAAoBD,KAAKe,QAAQE,OAAOjB,KAAKkB,UAAUC,cAAcC,iBAAiBpB,KAAKS,YAAYK,YAAad,KAAKkB,UAAUC,cAAcE,aACtJrB,KAAKG,wBAAwBa,WAQzCM,kBACQtB,KAAKU,iCACLV,KAAKU,+BAA+BC,cACpCX,KAAKU,+BAAiC,O,sECjF3C,MAAMa,EA0CTxB,YAAoByB,EACAC,GADA,KAAAD,SACA,KAAAC,UApCZ,KAAAC,qBAAoD,IAAI5B,EAsC5DE,KAAKyB,QAAQN,cACb,CACIQ,gBAAgB,GASjBC,WAEH,IAAG,IAAAC,SAAQ7B,KAAK8B,oBAEZ,MAAM,IAAIC,MAAM,gDCnErB,IAA6BhB,ED2E5B,IAAIiB,EALJhC,KAAKyB,QAAQQ,SCtEelB,EDuE5B,CACImB,gBAAiBlC,KAAK0B,sBCnE9BS,IACQpB,IACAoB,EAAShB,cAAgBJ,GAE7BoB,EAASC,cACTD,EAASE,oBACTF,EAASG,gBDkETN,EAAiBhC,KAAKwB,OAAOe,QAAQvC,KAAK8B,oBAE1CE,EACKnB,WAAU2B,IAEP,IAAIC,EAIAA,EAFDzC,KAAK0C,gBAEEF,EAAKG,IAAI3C,KAAK0C,iBAIdF,EAAKG,KAAIC,IAAgB,CAACvC,MAAOuC,EAAIC,IAAKC,KAAMF,EAAIG,UAG3D/C,KAAKgD,UAEJP,EAAMA,EAAIE,KAAIC,IAAgB,CAACvC,MAAOuC,EAAIvC,MAAOyC,KAAMF,EAAIvC,UAEvDL,KAAKiD,YAETR,EAAMA,EAAIE,KAAIC,IAAgB,CAACvC,MAAOuC,EAAIE,KAAMA,KAAMF,EAAIE,UAG9DL,EAAMA,EAAIxB,QAAO2B,IAAO,IAAAM,WAAUN,KAE/B5C,KAAKmD,iBAEJV,EACA,CACI,CACIpC,MAAO,GACPyC,MAAM,IAAAM,UAASpD,KAAKmD,gBAAkBnD,KAAKmD,eAAiB,SAE7DV,IAIXzC,KAAK0B,qBAAqBX,QAAU0B,EAAIE,KAAIC,IAGxC,CACIvC,MAAOuC,EAAIvC,MACXgD,KAAMT,EAAIE,SAIlB9C,KAAK0B,qBAAqBtB,cAAcY,OACxChB,KAAK0B,qBAAqB4B,uBAAuBtC,W,iCAvHpDO,GAAuB,qB,kBAAvBA,EAAuB,kOAFrB,CAAC,EAAAgC","file":"6787.client.es2015.chunk.c860b05d2ea1e81d19fc.js","sourcesContent":["import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\n\r\n/**\r\n * External source sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'external-sample',\r\n    templateUrl: 'externalSample.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ExternalSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Control bound to select\r\n     */\r\n    public selectControl: FormControl = new FormControl(null);\r\n}","<div>Value: {{selectControl?.value | json}}</div>\r\n\r\n<div class=\"bold margin-top-small\">Standard enum</div>\r\n\r\n<ng-select [formControl]=\"selectControl\" external=\"cis\">\r\n</ng-select>\r\n\r\n<div class=\"bold margin-top-small\">Only codes enum</div>\r\n\r\n<ng-select [formControl]=\"selectControl\" external=\"cis\" [onlyCodes]=\"true\">\r\n</ng-select>\r\n\r\n<div class=\"bold margin-top-small\">Only texts enum</div>\r\n\r\n<ng-select [formControl]=\"selectControl\" external=\"cis\" [onlyTexts]=\"true\">\r\n</ng-select>","/**\r\n * @fileoverview added by tsickle\r\n * Generated from: src/misc/optionsGatherer/codeOptionsGatherer.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\nimport { EventEmitter } from \"@angular/core\";\r\nimport { LIVE_SEARCH } from \"../../plugins/liveSearch/types\";\r\n/**\r\n * Options gatherer used for static options gathering from code\r\n * @template TValue\r\n */\r\nexport class CodeOptionsGatherer {\r\n    constructor() {\r\n        //######################### private fields #########################\r\n        //######################### private fields #########################\r\n        /**\r\n         * Array of visible, displayed options for select\r\n         */\r\n        this._availableOptions = [];\r\n        /**\r\n         * Array of provided options for select\r\n         */\r\n        this._options = [];\r\n        /**\r\n         * Occurs when array of visible, displayed options has changed\r\n         */\r\n        this._availableOptionsChange = new EventEmitter();\r\n        /**\r\n         * Occurs when array of provided options has changed\r\n         */\r\n        this.optionsChange = new EventEmitter();\r\n    }\r\n    //######################### public properties - implementation of OptionsGatherer #########################\r\n    /**\r\n     * Array of provided options for select\r\n     * @return {?}\r\n     */\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    set options(value) {\r\n        this._options = value;\r\n        this._availableOptions = value;\r\n    }\r\n    /**\r\n     * Array of visible, displayed options for select\r\n     * @return {?}\r\n     */\r\n    get availableOptions() {\r\n        return this._availableOptions;\r\n    }\r\n    ;\r\n    /**\r\n     * Occurs when array of visible, displayed options has changed\r\n     * @return {?}\r\n     */\r\n    get availableOptionsChange() {\r\n        return this._availableOptionsChange;\r\n    }\r\n    //######################### public methods - implmentation of OptionsGatherer #########################\r\n    /**\r\n     * Initialize gatherer during initialization phase\r\n     * @return {?}\r\n     */\r\n    initializeGatherer() {\r\n        /** @type {?} */\r\n        let liveSearch = (/** @type {?} */ (this.ngSelectPlugins[LIVE_SEARCH]));\r\n        if (this._liveSearch && this._liveSearch != liveSearch) {\r\n            this._searchValueChangeSubscription.unsubscribe();\r\n            this._searchValueChangeSubscription = null;\r\n            this._liveSearch = null;\r\n        }\r\n        if (!this._liveSearch) {\r\n            this._liveSearch = liveSearch;\r\n            this._searchValueChangeSubscription = this._liveSearch.searchValueChange.subscribe((/**\r\n             * @return {?}\r\n             */\r\n            () => {\r\n                if (!this._liveSearch.searchValue) {\r\n                    this._availableOptions = this.options;\r\n                    this._availableOptionsChange.emit();\r\n                    return;\r\n                }\r\n                this._availableOptions = this.options.filter(this.pluginBus.selectOptions.liveSearchFilter(this._liveSearch.searchValue, this.pluginBus.selectOptions.normalizer));\r\n                this._availableOptionsChange.emit();\r\n            }));\r\n        }\r\n    }\r\n    /**\r\n     * Called when gatherer needs to be destroyed\r\n     * @return {?}\r\n     */\r\n    destroyGatherer() {\r\n        if (this._searchValueChangeSubscription) {\r\n            this._searchValueChangeSubscription.unsubscribe();\r\n            this._searchValueChangeSubscription = null;\r\n        }\r\n    }\r\n}\r\nif (false) {\r\n    /**\r\n     * Array of visible, displayed options for select\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CodeOptionsGatherer.prototype._availableOptions;\r\n    /**\r\n     * Array of provided options for select\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CodeOptionsGatherer.prototype._options;\r\n    /**\r\n     * Occurs when array of visible, displayed options has changed\r\n     * @type {?}\r\n     * @private\r\n     */\r\n    CodeOptionsGatherer.prototype._availableOptionsChange;\r\n    /**\r\n     * Live search plugin currently used in NgSelect\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    CodeOptionsGatherer.prototype._liveSearch;\r\n    /**\r\n     * Subscription for changes of live search value\r\n     * @type {?}\r\n     * @protected\r\n     */\r\n    CodeOptionsGatherer.prototype._searchValueChangeSubscription;\r\n    /**\r\n     * Occurs when array of provided options has changed\r\n     * @type {?}\r\n     */\r\n    CodeOptionsGatherer.prototype.optionsChange;\r\n    /**\r\n     * NgSelect plugin instances available for gatherer\r\n     * @type {?}\r\n     */\r\n    CodeOptionsGatherer.prototype.ngSelectPlugins;\r\n    /**\r\n     * Plugin bus used for inter plugin shared events\r\n     * @type {?}\r\n     */\r\n    CodeOptionsGatherer.prototype.pluginBus;\r\n    /**\r\n     * Select element that implements default gatherers\r\n     * @type {?}\r\n     */\r\n    CodeOptionsGatherer.prototype.select;\r\n    /* Skipping unhandled member: ;*/\r\n}\r\n//# sourceMappingURL=data:application/json;base64,","import {Directive, OnInit, Input} from '@angular/core';\r\nimport {isPresent, isString, ValueNamePair, isBlank} from '@jscrpt/common';\r\nimport {NgSelectComponent, CodeOptionsGatherer, NgSelectOption} from '@anglr/select';\r\nimport {reinitializeOptions} from '@anglr/select/extensions';\r\nimport {Observable} from 'rxjs';\r\n\r\nimport {DataService} from '../../../services/api/data';\r\nimport {KodPopisValue} from '../../../misc/types';\r\nimport {NOTHING_SELECTED} from '../../../misc/constants';\r\n\r\n/**\r\n * Directive used for obtaining and creating enumeration of values\r\n */\r\n@Directive(\r\n{\r\n    selector: 'ng-select[external]',\r\n    providers: [DataService]\r\n})\r\nexport class ExternalSourceDirective implements OnInit\r\n{\r\n    //######################### private fields #########################\r\n\r\n    /**\r\n     * Enum options gatherer instance\r\n     */\r\n    private _codeOptionsGatherer: CodeOptionsGatherer<string> = new CodeOptionsGatherer<string>();\r\n\r\n    //######################### public properties - input #########################\r\n\r\n    /**\r\n     * Name of enum which values will be filled into select\r\n     */\r\n    @Input('external')\r\n    public externalSourceName: string;\r\n\r\n    /**\r\n     * If this is not empty, empty value with this text will be added\r\n     */\r\n    @Input()\r\n    public emptyValueText: string|boolean;\r\n\r\n    /**\r\n     * Indication that use codes also for description of value\r\n     */\r\n    @Input()\r\n    public onlyCodes: boolean;\r\n\r\n    /**\r\n     * Indication that use texts also for value\r\n     */\r\n    @Input()\r\n    public onlyTexts: boolean;\r\n\r\n    /**\r\n     * Transform mapping function for item\r\n     */\r\n    @Input()\r\n    public mappingCallback: (item: any) => ValueNamePair;\r\n\r\n    //######################### constructor #########################\r\n    constructor(private _enums: DataService,\r\n                private _select: NgSelectComponent<string>)\r\n    {\r\n        this._select.selectOptions =\r\n        {\r\n            autoInitialize: false\r\n        };\r\n    }\r\n\r\n    //######################### public methods - implementation of OnInit #########################\r\n\r\n    /**\r\n     * Initialize component\r\n     */\r\n    public ngOnInit()\r\n    {\r\n        if(isBlank(this.externalSourceName))\r\n        {\r\n            throw new Error(\"No name was provided for external directive!\");\r\n        }\r\n\r\n        this._select.execute(reinitializeOptions(\r\n        {\r\n            optionsGatherer: this._codeOptionsGatherer\r\n        }));\r\n\r\n        let dataObservable: Observable<KodPopisValue[]>;\r\n\r\n        dataObservable = this._enums.getEnum(this.externalSourceName);\r\n\r\n        dataObservable\r\n            .subscribe(data =>\r\n            {\r\n                let tmp: ValueNamePair[];\r\n\r\n                if(this.mappingCallback)\r\n                {\r\n                    tmp = data.map(this.mappingCallback);\r\n                }\r\n                else\r\n                {\r\n                    tmp = data.map(itm => { return {value: itm.kod, name: itm.popis}; });\r\n                }\r\n\r\n                if(this.onlyCodes)\r\n                {\r\n                    tmp = tmp.map(itm => { return {value: itm.value, name: itm.value}; });\r\n                }\r\n                else if(this.onlyTexts)\r\n                {\r\n                    tmp = tmp.map(itm => { return {value: itm.name, name: itm.name}; });\r\n                }\r\n\r\n                tmp = tmp.filter(itm => isPresent(itm));\r\n\r\n                if(this.emptyValueText)\r\n                {\r\n                    tmp =\r\n                    [\r\n                        {\r\n                            value: '',\r\n                            name: isString(this.emptyValueText) ? this.emptyValueText : NOTHING_SELECTED\r\n                        },\r\n                        ...tmp\r\n                    ];\r\n                }\r\n\r\n                this._codeOptionsGatherer.options = tmp.map(itm =>\r\n                {\r\n                    return <NgSelectOption<string>>\r\n                    {\r\n                        value: itm.value,\r\n                        text: itm.name\r\n                    };\r\n                });\r\n        \r\n                this._codeOptionsGatherer.optionsChange.emit();\r\n                this._codeOptionsGatherer.availableOptionsChange.emit();\r\n            });\r\n    }\r\n}\r\n\r\n","/**\r\n * @fileoverview added by tsickle\r\n * Generated from: extensions/src/extensions/reinitializeOptions.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\r\n/**\r\n * Method reinitialize options for NgSelect\r\n * @template TValue\r\n * @param {?=} options - Options to be used for reinitialization\r\n * @return {?}\r\n */\r\nexport function reinitializeOptions(options) {\r\n    return (/**\r\n     * @param {?} ngSelect\r\n     * @return {?}\r\n     */\r\n    ngSelect => {\r\n        if (options) {\r\n            ngSelect.selectOptions = options;\r\n        }\r\n        ngSelect.initOptions();\r\n        ngSelect.invalidateVisuals();\r\n        ngSelect.initialize();\r\n    });\r\n}\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVpbml0aWFsaXplT3B0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9leHRlbnNpb25zL3JlaW5pdGlhbGl6ZU9wdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFNQSxNQUFNLFVBQVUsbUJBQW1CLENBQWUsT0FBaUM7SUFFL0U7Ozs7SUFBTyxRQUFRLENBQUMsRUFBRTtRQUVkLElBQUcsT0FBTyxFQUNWO1lBQ0ksUUFBUSxDQUFDLGFBQWEsR0FBRyxPQUFPLENBQUM7U0FDcEM7UUFFRCxRQUFRLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDdkIsUUFBUSxDQUFDLGlCQUFpQixFQUFFLENBQUM7UUFDN0IsUUFBUSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQzFCLENBQUMsRUFBQztBQUNOLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge05nU2VsZWN0QWN0aW9uLCBOZ1NlbGVjdE9wdGlvbnN9IGZyb20gXCJAYW5nbHIvc2VsZWN0XCI7XHJcblxyXG4vKipcclxuICogTWV0aG9kIHJlaW5pdGlhbGl6ZSBvcHRpb25zIGZvciBOZ1NlbGVjdFxyXG4gKiBAcGFyYW0gb3B0aW9ucyAtIE9wdGlvbnMgdG8gYmUgdXNlZCBmb3IgcmVpbml0aWFsaXphdGlvblxyXG4gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHJlaW5pdGlhbGl6ZU9wdGlvbnM8VFZhbHVlID0gYW55PihvcHRpb25zPzogTmdTZWxlY3RPcHRpb25zPFRWYWx1ZT4pOiBOZ1NlbGVjdEFjdGlvbjxUVmFsdWU+XHJcbntcclxuICAgIHJldHVybiBuZ1NlbGVjdCA9PlxyXG4gICAge1xyXG4gICAgICAgIGlmKG9wdGlvbnMpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBuZ1NlbGVjdC5zZWxlY3RPcHRpb25zID0gb3B0aW9ucztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIG5nU2VsZWN0LmluaXRPcHRpb25zKCk7XHJcbiAgICAgICAgbmdTZWxlY3QuaW52YWxpZGF0ZVZpc3VhbHMoKTtcclxuICAgICAgICBuZ1NlbGVjdC5pbml0aWFsaXplKCk7XHJcbiAgICB9O1xyXG59Il19"],"sourceRoot":""}