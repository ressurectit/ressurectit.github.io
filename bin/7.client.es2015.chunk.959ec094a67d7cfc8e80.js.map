{"version":3,"sources":["webpack:///./app/services/api/sample/sample.service.ts","webpack:///./app/pages/+sampleRest/usage/usageSample.component.ts","webpack:///./app/pages/+sampleRest/usage/usageSample.component.html","webpack:///./app/pages/+sampleRest/usage/usage.component.ts","webpack:///./app/pages/+sampleRest/usage/usage.component.html","webpack:///./app/pages/+sampleRest/sampleRest.routes.ts","webpack:///./app/pages/+sampleRest/sampleRest.module.ts"],"names":["_id","_wow","_filter","filter","date","toISOString","response","pipe","map","result","birthDate","isValid","Observable","_sampleSvc","_changeDetector","this","getData","toPromise","detectChanges","console","log","getWithParamsData","name","age","simpleGet","advancedGet","selector","templateUrl","providers","changeDetection","OnPush","UsageComponent","path","components","SampleRestModule","imports","declarations"],"mappings":"izBAca,EAAa,cAAS,IAMxB,UAEH,OAAO,KAQJ,kBAA8BA,EACEC,EAC6CC,GAEhF,OAAO,KAUH,uBAAuBC,GAM3B,OAJAA,EAAS,aAAO,EAAM,GAAIA,IAEnBC,KAAOD,EAAOC,KAAKC,cAEnBF,EAOH,mCAAmCG,GAEvC,OAAOA,EAASC,KAAK,OAAAC,EAAA,GAAIC,IAElB,YAAUA,EAAOC,aAEhBD,EAAOC,UAAY,EAAOD,EAAOC,WAE7BD,EAAOC,UAAUC,UAEjBF,EAAOC,UAAY,OAIpBD,O,+BAzDN,I,mBAAA,EAAa,QAAb,EAAa,OAMtB,GADC,YAAI,4B,0EACaG,EAAA,I,4BAUlB,GAFC,cACA,YAAI,QACqB,gBAAK,OACL,gBAAM,QACN,SAAa,gBAAmB,2B,8FAAkDA,EAAA,I,sCAlBnG,EAAa,GADzB,YAAQ,6BACI,G,YAAA,G,IAAA,EAAa,E,KAFzB,M,qYCGM,MAAM,EAUT,YAAoBC,EACAC,GADA,KAAAD,aACA,KAAAC,kBASP,Y,yCAETC,KAAKN,aAAeM,KAAKF,WAAWG,UAAUC,YAE9CF,KAAKD,gBAAgBI,gBACrBC,QAAQC,IAAIL,KAAKN,WAMR,c,yCAETM,KAAKN,aAAeM,KAAKF,WAAWQ,kBAAkB,2BAA4B,OAClF,CACIjB,KAAM,IACNkB,KAAM,OACNC,IAAK,KACNN,YAEHF,KAAKD,gBAAgBI,gBACrBC,QAAQC,IAAIL,KAAKN,Y,iCAzCZ,GAAoB,kB,iBAApB,EAAoB,2CAHlB,CAAC,KAAc,mLCZ9B,eACI,eACI,kBAAgC,gCAAS,EAAAe,eAAa,oBAAU,MACpE,MAEA,eACI,kBAAgC,gCAAS,EAAAC,iBAAe,sBAAY,MACxE,MACJ,MAEA,eAAgD,iBAAO,MACvD,YACA,cAAK,Q,eAAiB,O,MAAjB,kC,oDDGQ,EAAoB,E,KAPhC,I,MACD,CACIC,SAAU,eACVC,YAAa,6BACbC,UAAW,CAAC,GACZC,gBAAiB,IAAwBC,Y,+YEAhCC,EAAc,Q,iCAAdA,I,iBAAAA,EAAc,iNCb3B,iBAEA,YAAI,4BAAkB,MAEtB,qBACI,uBACI,mBACI,e,iCACJ,MAEA,mBACI,gB,mCACJ,MAEA,oBACI,gB,mCACJ,MACJ,MACJ,MAEA,wB,MAbiB,kGAIA,6GAIA,6F,uFDFJA,EAAc,GAD1B,YAAe,CAACC,KAAM,MACVD,G,IAAAA,EAAc,E,KAP1B,I,MACD,CACIL,SAAU,aACVC,YAAa,uBACbE,gBAAiB,IAAwBC,W,WERtC,IAAIG,EACX,CACIF,G,+XCmBSG,EAAgB,Q,iBAAhBA,I,8CAAAA,IAAgB,SAVzB,CACI,QASKA,EAAgB,GAD5B,YAAaD,IACDC,I,+CAAAA,EAAgB,iBAJrB,GAAoB,SALpB,O,IASKA,EAAgB,E,KAb5B,I,MACD,CACIC,QACA,CACI,KAEJC,aACA,IACOH,EACH,O","file":"7.client.es2015.chunk.959ec094a67d7cfc8e80.js","sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {BaseUrl, GET, RESTClient, Path, Query, QueryObject, ResponseTransform, ParameterTransform} from \"@anglr/rest\";\r\nimport {isPresent, extend} from \"@jscrpt/common\";\r\nimport {Observable} from \"rxjs\";\r\nimport {map} from \"rxjs/operators\";\r\nimport * as moment from 'moment';\r\n\r\nimport {SampleFilter, SampleData} from \"./sample.interface\";\r\n\r\n/**\r\n * Sample REST service\r\n */\r\n@Injectable()\r\n@BaseUrl('https://www.mocky.io/v2/')\r\nexport class SampleService extends RESTClient\r\n{\r\n    /**\r\n     * GET sample\r\n     */\r\n    @GET('5e3140eb3200000d00888393')\r\n    public getData(): Observable<SampleData>\r\n    {\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * GET sample\r\n     */\r\n    @ResponseTransform()\r\n    @GET('{id}')\r\n    public getWithParamsData(@Path('id') _id: string,\r\n                             @Query('wow') _wow: string,\r\n                             @QueryObject @ParameterTransform('_sampleFilterTransform') _filter: SampleFilter): Observable<SampleData>\r\n    {\r\n        return null;\r\n    }\r\n\r\n    //######################### private methods #########################\r\n\r\n    /**\r\n     * SampleFilter transform method\r\n     * @param filter Filter to be transformed\r\n     */\r\n    //@ts-ignore\r\n    private _sampleFilterTransform(filter: SampleFilter): SampleFilter\r\n    {\r\n        filter = extend(true, {}, filter);\r\n\r\n        filter.date = filter.date.toISOString() as any;\r\n\r\n        return filter;\r\n    }\r\n\r\n    /**\r\n     * Transform response from getWithParamsData method\r\n     */\r\n    //@ts-ignore\r\n    private getWithParamsDataResponseTransform(response: Observable<SampleData>): Observable<SampleData>\r\n    {\r\n        return response.pipe(map(result =>\r\n        {\r\n            if(isPresent(result.birthDate))\r\n            {\r\n                result.birthDate = moment(result.birthDate);\r\n            \r\n                if(!result.birthDate.isValid)\r\n                {\r\n                    result.birthDate = null;\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }));\r\n    }\r\n}","import {Component, ChangeDetectionStrategy, ChangeDetectorRef} from \"@angular/core\";\r\nimport * as moment from 'moment';\r\n\r\nimport {SampleService} from \"../../../services/api/sample\";\r\n\r\n/**\r\n * REST usage samples component\r\n */\r\n@Component(\r\n{\r\n    selector: 'usage-sample',\r\n    templateUrl: 'usageSample.component.html',\r\n    providers: [SampleService],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class UsageSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Result from REST call\r\n     */\r\n    public result: any;\r\n\r\n    //######################### constructor #########################\r\n    constructor(private _sampleSvc: SampleService,\r\n                private _changeDetector: ChangeDetectorRef)\r\n    {\r\n    }\r\n\r\n    //######################### public methods - template bindings #########################\r\n\r\n    /**\r\n     * Performs simple GET request\r\n     */\r\n    public async simpleGet()\r\n    {\r\n        this.result = await this._sampleSvc.getData().toPromise();\r\n\r\n        this._changeDetector.detectChanges();\r\n        console.log(this.result);\r\n    }\r\n\r\n    /**\r\n     * Performs advanced GET request with params and transformations\r\n     */\r\n    public async advancedGet()\r\n    {\r\n        this.result = await this._sampleSvc.getWithParamsData('5e3140eb3200000d00888393', 'test',\r\n        {\r\n            date: moment(),\r\n            name: 'Test',\r\n            age: 33\r\n        }).toPromise();\r\n\r\n        this._changeDetector.detectChanges();\r\n        console.log(this.result);\r\n    }\r\n}","<div class=\"flex-row\">\r\n    <div class=\"margin-right-extra-small\">\r\n        <button class=\"btn btn-primary\" (click)=\"simpleGet()\">simple GET</button>\r\n    </div>\r\n\r\n    <div class=\"margin-right-extra-small\">\r\n        <button class=\"btn btn-primary\" (click)=\"advancedGet()\">advanced GET</button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"bold text-uppercase margin-top-big\">result:</div>\r\n<hr>\r\n<div>{{result | json}}</div>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {ComponentRoute} from \"@anglr/common/router\";\r\n\r\n/**\r\n * REST usage samples page\r\n */\r\n@Component(\r\n{\r\n    selector: 'usage-view',\r\n    templateUrl: 'usage.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n@ComponentRoute({path: ''})\r\nexport class UsageComponent\r\n{\r\n}","<go-back></go-back>\r\n\r\n<h3>REST usage samples</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"usageSample.component.ts\">\r\n            <div [renderMarkdown]=\"'pages/+sampleRest/usage/usageSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"usageSample.component.html\">\r\n            <div [renderMarkdown]=\"'pages/+sampleRest/usage/usageSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"sample.service.ts\">\r\n            <div [renderMarkdown]=\"'services/api/sample/sample.service.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<usage-sample></usage-sample>","import {UsageComponent} from \"./usage/usage.component\";\r\n\r\nexport var components = \r\n[\r\n    UsageComponent\r\n];","import {NgModule} from \"@angular/core\";\r\nimport {ModuleRoutes} from \"@anglr/common/router\";\r\n\r\nimport {CommonSharedModule} from \"../../boot/commonShared.module\";\r\nimport {components} from \"./sampleRest.routes\";\r\nimport {UsageSampleComponent} from \"./usage/usageSample.component\";\r\n\r\n/**\r\n * Module for samples for rest\r\n */\r\n@NgModule(\r\n{\r\n    imports:\r\n    [\r\n        CommonSharedModule\r\n    ],\r\n    declarations:\r\n    [\r\n        ...components,\r\n        UsageSampleComponent\r\n    ]\r\n})\r\n@ModuleRoutes(components)\r\nexport class SampleRestModule\r\n{\r\n}"],"sourceRoot":""}