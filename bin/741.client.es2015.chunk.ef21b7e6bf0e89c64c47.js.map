{"version":3,"sources":["webpack://ressurectit.github.io/./app/services/api/source/source.service.ts","webpack://ressurectit.github.io/./app/modules/asSource/pipes/asSource/asSource.pipe.ts","webpack://ressurectit.github.io/./app/misc/rxjsOperators/handle404.ts","webpack://ressurectit.github.io/./app/modules/sourceCode/components/sourceCode/sourceCode.component.html","webpack://ressurectit.github.io/./app/modules/sourceCode/components/sourceCode/sourceCode.component.ts","webpack://ressurectit.github.io/./app/samples/select/edit/edit.component.ts","webpack://ressurectit.github.io/./app/samples/select/edit/edit.component.html","webpack://ressurectit.github.io/./app/samples/select/edit/editSample.component.ts","webpack://ressurectit.github.io/./app/samples/select/edit/editSample.component.html"],"names":["SourceService","getSource","_path","C","Observable","AsSourcePipe","constructor","_sourceSvc","transform","path","type","source","this","pipe","catchError","error","status","of","throwError","toPromise","SourceCodeComponent","showSources","EditComponent","EditSampleComponent","selectControl","selectMultipleControl"],"mappings":"orBASaA,EAAa,cAAS,KASxBC,UAAwBC,GAE3B,OAAO,O,qEAXFF,KAAa,GAAbA,I,uBAAAA,EAAa,QAAbA,EAAa,gBAFD,SAWrB,IAHC,IAAAG,MACA,OAAS,YACT,QAAI,W,EACa,E,GAAA,QAAK,Q,yGAAwBC,EAAA,I,8BATtCJ,EAAa,IADzB,OAAQ,wFACIA,G,2DCGN,MAAMK,EAGTC,YAAoBC,GAAA,KAAAA,aAWPC,UAAUC,EAAWC,EAAe,c,qCAE7C,IAAIC,QAAeC,KAAKL,WAAWN,UAAUQ,GACxCI,MCrBDF,GAEGA,EAAOE,MAAK,EAAAC,EAAA,IAAWC,GAEP,KAAhBA,EAAMC,QAEE,EAAAC,MAAG,OAGP,EAAAC,EAAA,GAAWH,QDajBI,YAEL,MAAgB,UAAGT,MACzBC,UAAU,aAAeF,a,iUArBdJ,GAAY,Y,mCAAZA,EAAY,W,qLEZzB,gBACI,QACJ,Q,KAFwC,0BCcjC,MAAMe,EARb,cAeW,KAAAC,aAAuB,G,iCAPrBD,I,kBAAAA,EAAmB,+C,MAAA,0K,ODdhC,qBAIA,cAAgF,+DAC5E,iBACJ,Q,MANM,0BAIe,wC,+MCOL,CAAC,MAAkB,qB,kNCA5B,MAAME,G,iCAAAA,I,kBAAAA,EAAa,gLCX1B,aAAI,qBAAW,OAEf,sBACI,wBACI,oBACI,gB,mCACJ,OAEA,oBACI,gB,qCACJ,OACJ,OACJ,OAEA,wB,MATiB,+FAIA,4G,uVCGV,MAAMC,EANb,cAaW,KAAAC,cAA6B,IAAI,KAAY,MAK7C,KAAAC,sBAAqC,IAAI,KAAY,O,iCAZnDF,I,kBAAAA,EAAmB,odCZhC,gBACI,gBACI,cAAK,O,eAAsC,OAE3C,sBACI,sBACA,sBACA,sBACA,sBACA,uBACJ,OACJ,OAEA,iBACI,eAAK,Q,gBAA8C,OAEnD,uBACI,uBACA,uBACA,uBACA,uBACA,uBACJ,OACJ,OACJ,Q,MAtBa,qFAEM,0CAUN,sGAEe,oD","file":"741.client.es2015.chunk.ef21b7e6bf0e89c64c47.js","sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {BaseUrl, Produces, ResponseType, GET, Path, Cache, RESTClient} from \"@anglr/rest\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n/**\r\n * Service used to obtain source files\r\n */\r\n@Injectable({providedIn: 'root'})\r\n@BaseUrl('https://raw.githubusercontent.com/ressurectit/ressurectit.github.io.src/master/app/')\r\nexport class SourceService extends RESTClient\r\n{\r\n    /**\r\n     * Gets content file from path\r\n     * @param _path Path to content file\r\n     */\r\n    @Cache()\r\n    @Produces(ResponseType.Text)\r\n    @GET('{path}')\r\n    public getSource(@Path('path') _path: string): Observable<string>\r\n    {\r\n        return null;\r\n    }\r\n}","import {Pipe, PipeTransform} from \"@angular/core\";\r\n\r\nimport {SourceService} from \"../../../../services/api/source\";\r\nimport {handle404} from \"../../../../misc/rxjsOperators\";\r\n\r\n/**\r\n * Obtains source for provided string\r\n */\r\n@Pipe(\r\n{\r\n    name: \"asSource\"\r\n})\r\nexport class AsSourcePipe implements PipeTransform\r\n{\r\n    //######################### constructor #########################\r\n    constructor(private _sourceSvc: SourceService)\r\n    {\r\n    }\r\n\r\n    //######################### public methods #########################\r\n\r\n    /**\r\n     * Returns observable for obtaining source\r\n     * @param path Value to be used as source path\r\n     * @param type Type of source\r\n     */\r\n    public async transform(path: any, type: string = 'typescript'): Promise<string>\r\n    {\r\n        let source = await this._sourceSvc.getSource(path)\r\n            .pipe(handle404())\r\n            .toPromise();\r\n\r\n        return '``` ' + `${type}\r\n${source ?? 'not found ' + path}\r\n` + '```';\r\n    }\r\n}","import {Observable, MonoTypeOperatorFunction, of, throwError} from \"rxjs\";\r\nimport {catchError} from \"rxjs/operators\";\r\n\r\n/**\r\n * Handles 404 http code as response\r\n */\r\nexport function handle404<TResponse>(): MonoTypeOperatorFunction<TResponse|null>\r\n{\r\n    return (source: Observable<TResponse|null>) =>\r\n    {\r\n        return source.pipe(catchError(error =>\r\n        {\r\n            if(error.status == 404)\r\n            {\r\n                return of(null);\r\n            }\r\n\r\n            return throwError(error);\r\n        }));\r\n    };\r\n}","<div *ngIf=\"showSources\" class=\"flex-1\" @slideInOut>\r\n    <ng-content></ng-content>\r\n</div>\r\n\r\n<a class=\"show-icon\" [class.absolute]=\"showSources\" title=\"Show / hide sources\" (click)=\"showSources = !showSources\">\r\n    <span class=\"fas fa-code\"></span>\r\n</a>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {slideInOutTrigger} from '@anglr/animations';\r\n\r\n/**\r\n * Component that is used for displaying source codes\r\n */\r\n@Component(\r\n{\r\n    selector: 'source-code',\r\n    templateUrl: 'sourceCode.component.html',\r\n    styleUrls: ['sourceCode.component.scss'],\r\n    animations: [slideInOutTrigger],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SourceCodeComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Indication whether show/hide sources\r\n     */\r\n    public showSources: boolean = false;\r\n}","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Edit sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'edit-view',\r\n    templateUrl: 'edit.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EditComponent\r\n{\r\n}","<h3>Edit Select</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"editSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/select/edit/editSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"editSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/select/edit/editSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<edit-sample></edit-sample>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\n\r\n/**\r\n * Edit sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'edit-sample',\r\n    templateUrl: 'editSample.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EditSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Control bound to select\r\n     */\r\n    public selectControl: FormControl = new FormControl(null);\r\n\r\n    /**\r\n     * Control bound to multi select\r\n     */\r\n    public selectMultipleControl: FormControl = new FormControl(null);\r\n}","<div class=\"flex-row\">\r\n    <div class=\"flex-1 margin-right-small\">\r\n        <div>Value: {{selectControl?.value | json}}</div>\r\n\r\n        <ng-select [formControl]=\"selectControl\" editStyle>\r\n            <ng-option value=\"first\" text=\"First value text\"></ng-option>\r\n            <ng-option value=\"second\" text=\"Second value text\"></ng-option>\r\n            <ng-option value=\"third\" text=\"Third value text\"></ng-option>\r\n            <ng-option value=\"fourth\" text=\"Fourth value text\"></ng-option>\r\n            <ng-option value=\"fifth\" text=\"Fifth value text\"></ng-option>\r\n        </ng-select>\r\n    </div>\r\n\r\n    <div class=\"flex-1 margin-left-small\">\r\n        <div>Value: {{selectMultipleControl?.value | json}}</div>\r\n\r\n        <ng-select multiple [formControl]=\"selectMultipleControl\" editStyle>\r\n            <ng-option value=\"first\" text=\"First value text\"></ng-option>\r\n            <ng-option value=\"second\" text=\"Second value text\"></ng-option>\r\n            <ng-option value=\"third\" text=\"Third value text\"></ng-option>\r\n            <ng-option value=\"fourth\" text=\"Fourth value text\"></ng-option>\r\n            <ng-option value=\"fifth\" text=\"Fifth value text\"></ng-option>\r\n        </ng-select>\r\n    </div>\r\n</div>"],"sourceRoot":""}