{"version":3,"sources":["webpack://ressurectit.github.io/./app/services/api/source/source.service.ts","webpack://ressurectit.github.io/./app/modules/asSource/pipes/asSource/asSource.pipe.ts","webpack://ressurectit.github.io/./app/misc/rxjsOperators/handle404.ts","webpack://ressurectit.github.io/./app/modules/sourceCode/components/sourceCode/sourceCode.component.html","webpack://ressurectit.github.io/./app/modules/sourceCode/components/sourceCode/sourceCode.component.ts","webpack://ressurectit.github.io/./app/samples/select/dynamic/dynamic.component.ts","webpack://ressurectit.github.io/./app/samples/select/dynamic/dynamic.component.html","webpack://ressurectit.github.io/./app/samples/select/dynamic/dynamicSample.component.ts","webpack://ressurectit.github.io/./app/samples/select/dynamic/dynamicSample.component.html"],"names":["SourceService","getSource","_path","C","Observable","AsSourcePipe","constructor","_sourceSvc","transform","path","type","source","this","pipe","catchError","error","status","of","throwError","toPromise","SourceCodeComponent","showSources","DynamicComponent","DynamicSampleComponent","_dataSvc","selectControl","_getData","value","isString","kod","result","getCis","content","length","map","itm","text","popis","selectOptions","plugins","liveSearch","valueHandler","options","dynamicOptionsCallback","optionsGatherer","D"],"mappings":"qrBASaA,EAAa,cAAS,KASxBC,UAAwBC,GAE3B,OAAO,O,qEAXFF,KAAa,GAAbA,I,uBAAAA,EAAa,QAAbA,EAAa,gBAFD,SAWrB,IAHC,IAAAG,MACA,OAAS,YACT,QAAI,W,EACa,E,GAAA,QAAK,Q,yGAAwBC,EAAA,I,8BATtCJ,EAAa,IADzB,OAAQ,wFACIA,G,2DCGN,MAAMK,EAGTC,YAAoBC,GAAA,KAAAA,aAWPC,UAAUC,EAAWC,EAAe,c,qCAE7C,IAAIC,QAAeC,KAAKL,WAAWN,UAAUQ,GACxCI,MCrBDF,GAEGA,EAAOE,MAAK,EAAAC,EAAA,IAAWC,GAEP,KAAhBA,EAAMC,QAEE,EAAAC,MAAG,OAGP,EAAAC,EAAA,GAAWH,QDajBI,YAEL,MAAgB,UAAGT,MACzBC,UAAU,aAAeF,a,iUArBdJ,GAAY,Y,mCAAZA,EAAY,W,qLEZzB,gBACI,QACJ,Q,KAFwC,0BCcjC,MAAMe,EARb,cAeW,KAAAC,aAAuB,G,iCAPrBD,I,kBAAAA,EAAmB,+C,MAAA,0K,ODdhC,qBAIA,cAAgF,+DAC5E,iBACJ,Q,MANM,0BAIe,wC,+MCOL,CAAC,MAAkB,qB,sNCA5B,MAAME,G,iCAAAA,I,kBAAAA,EAAgB,gOCX7B,aAAI,wBAAc,OAElB,sBACI,wBACI,oBACI,gB,mCACJ,OAEA,oBACI,gB,qCACJ,OAEA,qBACI,iB,qCACJ,OACJ,OACJ,OAEA,2B,MAbiB,qGAIA,gHAIA,+F,qZCKV,MAAMC,EAeTjB,YAAoBkB,GAAA,KAAAA,WAHb,KAAAC,cAA6B,IAAI,KAAY,MA+B5C,KAAAC,SAAqDC,IAAQ,O,EAAA,K,OAAA,E,EAAA,aAE7D,IAAAC,UAASD,KAETA,EAAQA,EAAME,KAGlB,IAAIC,QAAelB,KAAKY,SACnBO,OAAOJ,GACPR,YAEL,OAAIW,GAAWA,EAAOE,SAAYF,EAAOE,QAAQC,OAK1CH,EAAOE,QAAQE,KAAIC,IAGtB,CACIR,MAAOQ,EAAIN,IACXO,KAAMD,EAAIE,UARP,I,YAbsD,K,+QA1BjEzB,KAAK0B,cACL,CACIC,QACA,CACIC,WACA,CACI9B,KAAM,KAEV+B,aACA,CACI/B,KAAM,IACNgC,QACA,CACIC,uBAAwB/B,KAAKc,YAIzCkB,gBAAiB,IAAI,IAAuB,CAACD,uBAAwB/B,KAAKc,a,iCAlCzEH,GAAsB,W,kBAAtBA,EAAsB,6CAHpB,CAAC,EAAAsB,KAAY,uFCf5B,cAAK,O,eAAsC,OAE3C,uB,MAFK,qFAEM,4CAA+B,iC","file":"2849.client.es2015.chunk.8397c1e246ad4be44144.js","sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {BaseUrl, Produces, ResponseType, GET, Path, Cache, RESTClient} from \"@anglr/rest\";\r\nimport {Observable} from \"rxjs\";\r\n\r\n/**\r\n * Service used to obtain source files\r\n */\r\n@Injectable({providedIn: 'root'})\r\n@BaseUrl('https://raw.githubusercontent.com/ressurectit/ressurectit.github.io.src/master/app/')\r\nexport class SourceService extends RESTClient\r\n{\r\n    /**\r\n     * Gets content file from path\r\n     * @param _path Path to content file\r\n     */\r\n    @Cache()\r\n    @Produces(ResponseType.Text)\r\n    @GET('{path}')\r\n    public getSource(@Path('path') _path: string): Observable<string>\r\n    {\r\n        return null;\r\n    }\r\n}","import {Pipe, PipeTransform} from \"@angular/core\";\r\n\r\nimport {SourceService} from \"../../../../services/api/source\";\r\nimport {handle404} from \"../../../../misc/rxjsOperators\";\r\n\r\n/**\r\n * Obtains source for provided string\r\n */\r\n@Pipe(\r\n{\r\n    name: \"asSource\"\r\n})\r\nexport class AsSourcePipe implements PipeTransform\r\n{\r\n    //######################### constructor #########################\r\n    constructor(private _sourceSvc: SourceService)\r\n    {\r\n    }\r\n\r\n    //######################### public methods #########################\r\n\r\n    /**\r\n     * Returns observable for obtaining source\r\n     * @param path Value to be used as source path\r\n     * @param type Type of source\r\n     */\r\n    public async transform(path: any, type: string = 'typescript'): Promise<string>\r\n    {\r\n        let source = await this._sourceSvc.getSource(path)\r\n            .pipe(handle404())\r\n            .toPromise();\r\n\r\n        return '``` ' + `${type}\r\n${source ?? 'not found ' + path}\r\n` + '```';\r\n    }\r\n}","import {Observable, MonoTypeOperatorFunction, of, throwError} from \"rxjs\";\r\nimport {catchError} from \"rxjs/operators\";\r\n\r\n/**\r\n * Handles 404 http code as response\r\n */\r\nexport function handle404<TResponse>(): MonoTypeOperatorFunction<TResponse|null>\r\n{\r\n    return (source: Observable<TResponse|null>) =>\r\n    {\r\n        return source.pipe(catchError(error =>\r\n        {\r\n            if(error.status == 404)\r\n            {\r\n                return of(null);\r\n            }\r\n\r\n            return throwError(error);\r\n        }));\r\n    };\r\n}","<div *ngIf=\"showSources\" class=\"flex-1\" @slideInOut>\r\n    <ng-content></ng-content>\r\n</div>\r\n\r\n<a class=\"show-icon\" [class.absolute]=\"showSources\" title=\"Show / hide sources\" (click)=\"showSources = !showSources\">\r\n    <span class=\"fas fa-code\"></span>\r\n</a>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {slideInOutTrigger} from '@anglr/animations';\r\n\r\n/**\r\n * Component that is used for displaying source codes\r\n */\r\n@Component(\r\n{\r\n    selector: 'source-code',\r\n    templateUrl: 'sourceCode.component.html',\r\n    styleUrls: ['sourceCode.component.scss'],\r\n    animations: [slideInOutTrigger],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SourceCodeComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Indication whether show/hide sources\r\n     */\r\n    public showSources: boolean = false;\r\n}","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\n\r\n/**\r\n * Dynamic sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'dynamic-view',\r\n    templateUrl: 'dynamic.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicComponent\r\n{\r\n}","<h3>Dynamic Select</h3>\r\n\r\n<source-code>\r\n    <mat-tab-group>\r\n        <mat-tab label=\"dynamicSample.component.ts\">\r\n            <div [renderMarkdown]=\"'samples/select/dynamic/dynamicSample.component.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"dynamicSample.component.html\">\r\n            <div [renderMarkdown]=\"'samples/select/dynamic/dynamicSample.component.html' | asSource: 'html' | async\"></div>\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"kodPopisValue.interface.ts\">\r\n            <div [renderMarkdown]=\"'misc/types/kodPopisValue.interface.ts' | asSource | async\"></div>\r\n        </mat-tab>\r\n    </mat-tab-group>\r\n</source-code>\r\n\r\n<dynamic-sample></dynamic-sample>","import {Component, ChangeDetectionStrategy} from \"@angular/core\";\r\nimport {FormControl} from \"@angular/forms\";\r\nimport {NgSelectOptions, GetOptionsCallback, NgSelectOption, BasicLiveSearchComponent, DynamicValueHandlerComponent, DynamicValueHandlerOptions, DynamicOptionsGatherer} from \"@anglr/select\";\r\nimport {isString} from \"@jscrpt/common\";\r\n\r\nimport {KodPopisValue} from \"../../../misc/types\";\r\nimport {DataService} from \"../../../services/api/data\";\r\n\r\n/**\r\n * Dynamic sample for select component\r\n */\r\n@Component(\r\n{\r\n    selector: 'dynamic-sample',\r\n    templateUrl: 'dynamicSample.component.html',\r\n    providers: [DataService],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicSampleComponent\r\n{\r\n    //######################### public properties - template bindings #########################\r\n\r\n    /**\r\n     * Select options that are used for select initialization, custom readonly\r\n     */\r\n    public selectOptions: NgSelectOptions<KodPopisValue>;\r\n    \r\n    /**\r\n     * Control bound to select\r\n     */\r\n    public selectControl: FormControl = new FormControl(null);\r\n\r\n    //######################### constructor #########################\r\n    constructor(private _dataSvc: DataService)\r\n    {\r\n        this.selectOptions =\r\n        {\r\n            plugins:\r\n            {\r\n                liveSearch:\r\n                {\r\n                    type: BasicLiveSearchComponent\r\n                },\r\n                valueHandler:\r\n                {\r\n                    type: DynamicValueHandlerComponent,\r\n                    options: <DynamicValueHandlerOptions<KodPopisValue>>\r\n                    {\r\n                        dynamicOptionsCallback: this._getData\r\n                    }\r\n                }\r\n            },\r\n            optionsGatherer: new DynamicOptionsGatherer({dynamicOptionsCallback: this._getData})\r\n        };\r\n    }\r\n\r\n    //######################### private methods #########################\r\n    \r\n    /**\r\n     * Used for obtaining dynamic options\r\n     */\r\n    private _getData: GetOptionsCallback<KodPopisValue> = (async value =>\r\n    {\r\n        if(!isString(value))\r\n        {\r\n            value = value.kod;\r\n        }\r\n\r\n        let result = await this._dataSvc\r\n            .getCis(value)\r\n            .toPromise();\r\n\r\n        if(!result || !result.content || !result.content.length)\r\n        {\r\n            return [];\r\n        }\r\n\r\n        return result.content.map(itm =>\r\n        {\r\n            return <NgSelectOption<KodPopisValue>>\r\n            {\r\n                value: itm.kod,\r\n                text: itm.popis\r\n            };\r\n        });\r\n    });\r\n}","<div>Value: {{selectControl?.value | json}}</div>\r\n\r\n<ng-select [selectOptions]=\"selectOptions\" [formControl]=\"selectControl\">\r\n</ng-select>"],"sourceRoot":""}