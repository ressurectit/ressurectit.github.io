{"version":3,"sources":["webpack://telecovid/./app/misc/basePrehladComponent.ts","webpack://telecovid/./app/misc/decorators/transformOrdering.decorator.ts","webpack://telecovid/./app/modules/responsiveUtils/pipes/formValuePreview.pipe.ts","webpack://telecovid/./app/modules/vyberStlpcovBtn/components/vyberStlpcovBtn/vyberStlpcovBtn.component.ts","webpack://telecovid/./app/modules/vyberStlpcovBtn/components/vyberStlpcovBtn/vyberStlpcovBtn.component.html","webpack://telecovid/./app/modules/collapsible/components/collapsibleIcon/collapsibleIcon.component.ts","webpack://telecovid/./app/modules/collapsible/components/collapsibleIcon/collapsibleIcon.component.html","webpack://telecovid/./app/modules/vahaTag/pipes/vahaClass.pipe.ts","webpack://telecovid/./app/modules/vahaTag/components/vahaTag/vahaTag.component.ts","webpack://telecovid/./app/modules/vahaTag/components/vahaTag/vahaTag.component.html","webpack://telecovid/./app/modules/animatedIcons/components/doubleRightIcon/doubleRightIcon.component.ts","webpack://telecovid/./app/modules/animatedIcons/components/doubleRightIcon/doubleRightIcon.component.html","webpack://telecovid/./app/pages/+merania/misc/components/measuredValue/measuredValue.component.html","webpack://telecovid/./app/pages/+merania/misc/components/measuredValue/measuredValue.component.ts","webpack://telecovid/./app/pages/+merania/misc/components/device/device.component.html","webpack://telecovid/./app/pages/+merania/misc/components/device/device.component.ts","webpack://telecovid/./app/misc/animations/componentContent.trigger.ts","webpack://telecovid/./app/pages/+merania/misc/components/deviceDetailBase.ts","webpack://telecovid/./app/pages/+merania/misc/components/pulseDeviceDetail/pulseDeviceDetail.component.html","webpack://telecovid/./app/pages/+merania/misc/components/pulseDeviceDetail/pulseDeviceDetail.component.ts","webpack://telecovid/./app/pages/+merania/misc/components/sampleChart/sampleChart.component.ts","webpack://telecovid/./app/pages/+merania/misc/components/saturationDeviceDetail/saturationDeviceDetail.component.html","webpack://telecovid/./app/pages/+merania/misc/components/saturationDeviceDetail/saturationDeviceDetail.component.ts","webpack://telecovid/./app/pages/+merania/detail/detail.animations.ts","webpack://telecovid/./app/modules/sessionModals/directives/startSession/startSession.directive.ts","webpack://telecovid/./app/modules/sessionModals/directives/endSession/endSession.directive.ts","webpack://telecovid/./app/pages/+merania/misc/directives/dynamicDetail/deviceDetailData.directive.ts","webpack://telecovid/./app/pages/+merania/detail/detail.component.html","webpack://telecovid/./app/pages/+merania/detail/detail.component.ts","webpack://telecovid/./app/services/api/merania/merania.service.ts","webpack://telecovid/./app/pages/+merania/prehlad/prehlad.component.html","webpack://telecovid/./app/pages/+merania/prehlad/prehlad.component.ts","webpack://telecovid/./app/pages/+merania/merania.routes.ts","webpack://telecovid/./app/pages/+merania/merania.module.ts"],"names":["BasePrehladComponent","_formBuilder","_route","_router","_changeDetector","filterCollapsed","filterDefault","this","defaultFilterValue","snapshot","paramMap","has","get","filter","group","patchValue","emitEvent","grid","execute","setPage","refreshData","navigate","relativeTo","queryParamsHandling","replaceUrl","refreshGridToDefaults","serializeToUrlQuery","value","detectChanges","page","itemsPerPage","ordering","_currentPaging","size","result","getPrehlad","_getFilterValues","toPromise","data","content","totalCount","totalElements","_target","propertyKey","descriptor","originalValue","isFunction","Error","configurable","bound","bind","funcBound","reqOrdering","direction","orderByDirection","sort","orderBy","isPresent","Object","defineProperty","writable","FormValuePreviewPipe","controlName","controls","control","push","join","VyberStlpcovBtnComponent","showSelection","CollapsibleIconComponent","visible","titleText","visibleChange","WeightClassPipe","VahaTagComponent","DoubleRightIconComponent","_destroyed","animating","_timeout","clearTimeout","setTimeout","MeasuredValueComponent","detailVisible","DeviceComponent","detailLoad","componentContentTrigger","optional","DeviceDetailBase","_first","componentState","firstToAnimate","PulseDeviceDetailComponent","SampleChartComponent","element","svg","nativeElement","append","attr","width","height","g","parseDate","color","domain","range","x","y","z","arrea","curve","d","date","y0","y1","kW","_","columns","console","log","c","i","n","length","sources","slice","map","id","values","call","text","selectAll","enter","style","SaturationDetailComponent","detailsAnimated","position","transform","opacity","limit","StartSessionDirective","_dialogSvc","open","title","EndSessionDirective","DeviceDetailDataDirective","_viewContainerRef","_componentRef","last","first","poistenecDynamicDetailCreated","instance","_changes","clear","elInjector","injector","componentFactory","resolveComponentFactory","deviceDetailData","componentType","createComponent","component","emit","MeraniaDetailComponent","details","loadDetail","path","canActivate","MeraniaService","Observable","config","MeraniaPrehladComponent","formBuilder","route","router","_dataSvc","changeDetector","super","gridOptions","plugins","dataLoader","options","dataCallback","_getData","rc","paging","getAllMerania","invalidateVisuals","MeraniaModule"],"mappings":"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","file":"524.client.es2015.chunk.43678a5a4fc3c851bb77.js","sourcesContent":["import {OnInit, ViewChild, Directive, ChangeDetectorRef} from '@angular/core';\nimport {FormBuilder, FormGroup} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {GridOptions, SimpleOrdering, DataResponse, GridComponent} from '@anglr/grid';\nimport {setPage, refreshData} from '@anglr/grid/extensions';\nimport {prepareForFormBuilder} from '@anglr/common/forms';\nimport {readEncodedFilterWithDates} from '@anglr/common/date-fns';\nimport {serializeToUrlQuery} from '@jscrpt/common';\nimport {Observable} from 'rxjs';\n\nimport {Orderable, Pageable, PagedData} from './types';\nimport {TransformOrdering} from './decorators';\n\n/**\n * Base class for all \"prehlad\" pages\n */\n@Directive()\nexport abstract class BasePrehladComponent<TFilter, TDataItem> implements OnInit\n{\n    //######################### protected page #########################\n\n    /**\n     * Current paging used for loading data\n     */\n    protected _currentPaging: Pageable;\n\n    //######################### public properties - template bindings #########################\n\n    /**\n     * Options for grid\n     */\n    public gridOptions: GridOptions;\n\n\n    /**\n     * Filter form group\n     */\n    public filter: FormGroup;\n\n    /**\n     * Indication whether is filter collapsed\n     */\n    public filterCollapsed: boolean = false;\n\n    //######################### protected properties #########################\n\n    /**\n     * Gets default value of filter\n     */\n    protected abstract get defaultFilterValue(): TFilter;\n\n    //######################### public properties - children #########################\n\n    /**\n     * Instance of grid component\n     */\n    @ViewChild('grid', {static: false})\n    public grid: GridComponent;\n\n    //######################### constructors #########################\n    constructor(protected _formBuilder: FormBuilder,\n                protected _route: ActivatedRoute,\n                protected _router: Router,\n                protected _changeDetector: ChangeDetectorRef)\n    {\n    }\n\n    //######################### public methods - implementation of OnInit #########################\n    \n    /**\n     * Initialize component\n     */\n    public ngOnInit()\n    {\n        let filterDefault: TFilter = this.defaultFilterValue;\n\n        if(this._route.snapshot.paramMap.has('filter'))\n        {\n            filterDefault = readEncodedFilterWithDates(filterDefault, this._route.snapshot.paramMap.get('filter'));\n        }\n\n        this.filter = this._formBuilder.group(prepareForFormBuilder(this.defaultFilterValue));\n        this.filter.patchValue(filterDefault, {emitEvent: false});\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Refresh to defaults grid content\n     */\n    public refreshGridToDefaults()\n    {\n        this.grid.execute(setPage(1),\n                          refreshData(true));\n    }\n\n    /**\n     * Refresh grid data\n     */\n    public refreshGrid()\n    {\n        this.grid.execute(refreshData(true));\n    }\n\n    /**\n     * Resets filter to its default value\n     */\n    public async resetFilter()\n    {\n        this.filter.patchValue(this.defaultFilterValue);\n\n        await this._router.navigate(['.', {}],\n                                    {\n                                        relativeTo: this._route,\n                                        queryParamsHandling: 'merge',\n                                        replaceUrl: true\n                                    });\n\n        this.refreshGridToDefaults();\n    }\n\n    /**\n     * Runs search\n     */\n    public async search()\n    {\n        await this._router.navigate(['.', {filter: serializeToUrlQuery(this.filter.value)}],\n                                    {\n                                        relativeTo: this._route,\n                                        queryParamsHandling: 'merge',\n                                        replaceUrl: true\n                                    });\n\n        this.refreshGridToDefaults();\n    }\n\n    /**\n     * Explicitly runs invalidation of content (change detection)\n     */\n    public invalidateVisuals(): void\n    {\n        this._changeDetector.detectChanges();\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Callback used for obtaining data\n     * @param page Index of requested page\n     * @param itemsPerPage Number of items per page\n     * @param ordering Order by column name\n     */\n    @TransformOrdering\n    protected async _getData(page: number, itemsPerPage: number, ordering: SimpleOrdering&Orderable): Promise<DataResponse<TDataItem>>\n    {\n        this._currentPaging = \n        {\n            page: page - 1,\n            size: itemsPerPage\n        };\n\n        const result = await this.getPrehlad(this._currentPaging,\n                                             ordering,\n                                             this._getFilterValues()).toPromise();\n\n        return {\n            data: result.content,\n            totalCount: result.totalElements\n        };\n    }\n\n    /**\n     * Gets data for prehlad\n     * @param paging Information about requested paging\n     * @param ordering Information about requested ordering\n     * @param filter Information about requested filter\n     */\n    protected abstract getPrehlad(paging?: Pageable,\n                                  ordering?: Orderable,\n                                  filter?: TFilter): Observable<PagedData<TDataItem>>;\n\n    /**\n     * Gets filter value\n     */\n    protected _getFilterValues(): TFilter\n    {\n        return this.filter.value;\n    }\n}","import {SimpleOrdering} from '@anglr/grid';\nimport {isFunction, isPresent, OrderByDirection} from '@jscrpt/common';\n\nimport {Orderable} from '../types';\n\n/**\n * Transforms SimpleOrdering into Orderable for REST\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function TransformOrdering(_target: Object, propertyKey: string, descriptor: PropertyDescriptor)\n{\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    const originalValue: Function = descriptor.value ?? descriptor.get();\n\n    if(!isFunction(originalValue))\n    {\n        throw new Error(`Unable to apply @TransformOrdering decorator to '${propertyKey}', it is not a method.`);\n    }\n\n    return {\n        configurable: true,\n        get(this: any): any\n        {\n            const bound: any = originalValue.bind(this);\n\n            const func = function(page: number, itemsPerPage: number, ordering: SimpleOrdering)\n            {\n                let reqOrdering: Orderable = null;\n\n                if(ordering)\n                {\n                    reqOrdering =\n                    {\n                        direction: ordering.orderByDirection,\n                        sort: ordering.orderBy\n                    };\n                }\n\n                if(reqOrdering)\n                {\n                    if(reqOrdering.sort && isPresent(reqOrdering.direction))\n                    {\n                        reqOrdering.sort = `${reqOrdering.sort},${reqOrdering.direction == OrderByDirection.Descendant ? 'desc' : 'asc'}`;\n                    }\n                    else\n                    {\n                        delete reqOrdering.sort;\n                    }\n\n                    delete reqOrdering.direction;\n                }\n\n                return bound(page, itemsPerPage, reqOrdering);\n            };\n\n            const funcBound = func.bind(this);\n\n            Object.defineProperty(this,\n                                  propertyKey,\n                                  {\n                                      value: funcBound,\n                                      configurable: true,\n                                      writable: true\n                                  });\n\n            return funcBound;\n        }\n    };\n}","import {Pipe, PipeTransform} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\n\n/**\n * Pipe that is used to visualize form group value\n */\n@Pipe({name: 'formValuePreview'})\nexport class FormValuePreviewPipe implements PipeTransform\n{\n    /**\n     * Transforms form group value to string\n     * @param group Form group to be visualized\n     */\n    public transform(group: FormGroup): string\n    {\n        const result = [];\n        \n        for(const controlName in group.controls)\n        {\n            const control = group.get(controlName);\n\n            if(control instanceof FormControl && !!control.value)\n            {\n                result.push(`${controlName}: ${control.value}`);\n            }\n        }\n\n        return result.join(' | ');\n    }\n}","import {Component, ChangeDetectionStrategy, Input} from '@angular/core';\nimport {Grid} from '@anglr/grid';\nimport {showMetadataSelector} from '@anglr/grid/extensions';\n\n/**\n * Component used for displaying column selection\n */\n@Component(\n{\n    selector: 'btn-column-selection',\n    templateUrl: 'vyberStlpcovBtn.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VyberStlpcovBtnComponent\n{\n    //######################### public properties - inputs #########################\n\n    /**\n     * Grid component for which is column selection displayed\n     */\n    @Input()\n    public grid: Grid;\n\n    //######################### public methods - template bindings #########################\n\n    /**\n     * Shows metadata selection for grid\n     */\n    public showSelection()\n    {\n        if(this.grid)\n        {\n            this.grid.execute(showMetadataSelector());\n        }\n    }\n}","<button class=\"btn btn-info\" type=\"button\" (click)=\"showSelection()\">\r\n    <span class=\"fa fa-list\"></span>\r\n    <span>VÝBER STĹPCOV</span>\r\n</button>","import {Component, ChangeDetectionStrategy, Input, Output, EventEmitter} from '@angular/core';\n\n/**\n * Component used for displaying collapsible icon\n */\n@Component(\n{\n    selector: 'collapsible-icon',\n    templateUrl: 'collapsibleIcon.component.html',\n    styleUrls: ['collapsibleIcon.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CollapsibleIconComponent\n{\n    //######################### public properties - inputs #########################\n\n    /**\n     * Initial value, if visible set to true minus is displayed, otherwise plus is displayed\n     */\n    @Input()\n    public visible: boolean = false;\n\n    /**\n     * Text of title\n     */\n    @Input()\n    public titleText: string = 'zobraziť/skryť detail';\n\n    /**\n     * Css class applied to button\n     */\n    @Input()\n    public cssClass: string;\n\n    //######################### public properties - outputs #########################\n\n    /**\n     * Occurs when visible change\n     */\n    @Output()\n    public visibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n}","<a class=\"btn-icon\" [ngClass]=\"cssClass\" style=\"font-size: 1em;\" (click)=\"visible = !visible; visibleChange.emit(visible)\" [tooltip]=\"titleText\">\r\n    <div [class.plus]=\"!visible\" [class.minus]=\"visible\">\r\n        <span class=\"vertical\"></span>\r\n        <span class=\"horizontal\"></span>\r\n    </div>\r\n</a>","import {Pipe, PipeTransform} from '@angular/core';\n\n/**\n * Transforms 'vaha' into weight css class\n */\n@Pipe({name: 'weightClass'})\nexport class WeightClassPipe implements PipeTransform\n{\n    /**\n     * Transforms weight value into weight css class\n     * @param value Weight value\n     */\n    public transform(value: string) \n    {\n        return `weight-${value}`;\n    }\n}","import {Component, ChangeDetectionStrategy, Input} from '@angular/core';\n\n/**\n * Component used for displaying \"vaha\"\n */\n@Component(\n{\n    selector: 'vaha-tag',\n    templateUrl: 'vahaTag.component.html',\n    styleUrls: ['vahaTag.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class VahaTagComponent\n{\n    //######################### public properties - inputs #########################\n\n    /**\n     * Value of currently displayed \"vaha\"\n     */\n    @Input()\n    public value: string;\n}","<div [ngClass]=\"value | weightClass\">{{value}}</div>","import {Component, ChangeDetectionStrategy, OnDestroy, HostListener, ChangeDetectorRef} from '@angular/core';\nimport {isPresent} from '@jscrpt/common';\n\n/**\n * Animated double right icon component\n */\n@Component(\n{\n    selector: '.double-right-icon',\n    templateUrl: 'doubleRightIcon.component.html',\n    styleUrls: ['doubleRightIcon.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DoubleRightIconComponent implements OnDestroy\n{\n    //######################### private fields #########################\n\n    /**\n     * Indication that component was destroyed\n     */\n    private _destroyed: boolean = false;\n\n    /**\n     * Timeout that is created\n     */\n    private _timeout: number;\n\n    //######################### public properties - template bindings #########################\n\n    /**\n     * Indication whether is icon animated\n     */\n    public animating: boolean = false;\n\n    //######################### constructor #########################\n    constructor(private _changeDetector: ChangeDetectorRef)\n    {\n    }\n\n    //######################### public methods - implementation of OnDestroy #########################\n    \n    /**\n     * Called when component is destroyed\n     */\n    public ngOnDestroy()\n    {\n        this._destroyed = true;\n\n        if(isPresent(this._timeout))\n        {\n            clearTimeout(this._timeout);\n            this._timeout = null;\n        }\n    }\n\n    //######################### public methods - host #########################\n\n    /**\n     * Handles mouse up and animates icon\n     */\n    @HostListener('mouseup')\n    public clickAndAnimate()\n    {\n        if(this._destroyed)\n        {\n            return;\n        }\n\n        this.animating = true;\n\n        this._timeout = setTimeout(() =>\n        {\n            this._timeout = null;\n\n            if(!this._destroyed)\n            {\n                this.animating = false;\n                this._changeDetector.detectChanges();\n            }\n        }, 1400) as any;\n    }\n}","<div class=\"left-angle\" [class.running]=\"animating\">\r\n    <div></div>\r\n</div>\r\n\r\n<div class=\"right-angle\" [class.running]=\"animating\">\r\n    <div></div>\r\n</div>","<div class=\"measured-value-title\">\r\n    <div></div>\r\n    <collapsible-icon class=\"small-text\" [(visible)]=\"detailVisible\"></collapsible-icon>\r\n    <div>Dáta X (Pulz)</div>\r\n    <div>10:45:30</div>\r\n    <div class=\"italic\">Hodnota merania</div>\r\n    <div>trend</div>\r\n    \r\n    <a class=\"btn-icon\">\r\n        <span class=\"double-right-icon\"></span>\r\n    </a>\r\n\r\n    <ng-template [ngIf]=\"detailVisible\">\r\n        <div @slideInOut></div>\r\n        <div @slideInOut></div>\r\n        <div @slideInOut></div>\r\n        <div @slideInOut>11:12:13</div>\r\n        <div @slideInOut class=\"italic\">Hodnota staršíeho merania</div>\r\n        <div @slideInOut>trend</div>\r\n        <div @slideInOut></div>\r\n\r\n        <div @slideInOut></div>\r\n        <div @slideInOut></div>\r\n        <div @slideInOut></div>\r\n        <div @slideInOut>11:12:13</div>\r\n        <div @slideInOut class=\"italic\">Hodnota staršíeho merania</div>\r\n        <div @slideInOut>trend</div>\r\n        <div @slideInOut></div>\r\n\r\n        <div @slideInOut></div>\r\n        <div @slideInOut></div>\r\n        <div @slideInOut></div>\r\n        <div @slideInOut>11:12:13</div>\r\n        <div @slideInOut class=\"italic\">Hodnota staršíeho merania</div>\r\n        <div @slideInOut>trend</div>\r\n        <div @slideInOut></div>\r\n    </ng-template>\r\n</div>","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {slideInOutTrigger} from '@anglr/animations';\n\n/**\n * Component used for displaying measured value for device\n */\n@Component(\n{\n    selector: 'measured-value',\n    templateUrl: 'measuredValue.component.html',\n    styleUrls: ['measuredValue.component.scss'],\n    animations: [slideInOutTrigger],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MeasuredValueComponent\n{\n    //######################### public properties - template bindings #########################\n\n    /**\n     * Indication whether is detail visible\n     */\n    public detailVisible: boolean = false;\n}","<div class=\"flex-row align-items-center\">\r\n    <collapsible-icon [(visible)]=\"detailVisible\"></collapsible-icon>\r\n    <div class=\"margin-horizontal-small\">DD.MM.RRRR</div>\r\n    <div class=\"flex-1 bold\" tooltip=\"Teplomer s Pulzoxymetrom\">Teplomer s Pulzoxymetrom</div>\r\n    <vaha-tag value=\"3\" class=\"margin-horizontal-extra-small\"></vaha-tag>\r\n\r\n    <a class=\"btn-icon extra-extra-large-text\" (click)=\"detailLoad.emit()\">\r\n        <span class=\"double-right-icon\"></span>\r\n    </a>\r\n</div>\r\n\r\n<div *ngIf=\"detailVisible\" @slideInOut>\r\n    <measured-value></measured-value>\r\n    <measured-value></measured-value>\r\n</div>","import {Component, ChangeDetectionStrategy, EventEmitter, Output} from '@angular/core';\nimport {slideInOutTrigger} from '@anglr/animations';\n\n/**\n * Component used for displaying basic device data\n */\n@Component(\n{\n    selector: 'device',\n    templateUrl: 'device.component.html',\n    styleUrls: ['device.component.scss'],\n    animations: [slideInOutTrigger],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DeviceComponent\n{\n    //######################### public properties - template bindings #########################\n\n    /**\n     * Indication whether is detail visible\n     */\n    public detailVisible: boolean = false;\n\n    //######################### public properties - outputs #########################\n\n    /**\n     * Occurs when there was detail load\n     */\n    @Output()\n    public detailLoad: EventEmitter<void> = new EventEmitter<void>();\n}","import {trigger, transition, animateChild, query} from '@angular/animations';\n\n/**\n * Animates all children animations\n */\nexport const componentContentTrigger = trigger('componentContent',\n[\n    transition(':enter, :leave',\n    [\n        query('@*', animateChild(), {optional: true})\n    ])\n]);","import {HostBinding, ChangeDetectorRef, Directive} from '@angular/core';\n\nimport {DeviceDetail} from '../types/deviceDetail.interface';\n\n/**\n * Base class for device detail component\n */\n@Directive()\nexport class DeviceDetailBase implements DeviceDetail\n{\n    //######################### protected fields #########################\n\n    /**\n     * Indication whether is device first in list\n     */\n    protected _first: boolean = false;\n\n    //######################### public properties - template bindings #########################\n\n    /**\n     * Indication whether is detail visible\n     */\n    public detailVisible: boolean = false;\n\n    //######################### public properties #########################\n\n    /**\n     * Indication whether is device first in list\n     */\n    public get first(): boolean\n    {\n        return this._first;\n    }\n    public set first(value: boolean)\n    {\n        this._first = value;\n\n        if(value)\n        {\n            this.detailVisible = true;\n            this.firstToAnimate = true;\n        }\n    }\n\n    //######################### public properties - host #########################\n\n    /**\n     * Indication whether is device last in list\n     */\n    @HostBinding('class.margin-none')\n    public last: boolean;\n\n    /**\n     * Indication whether animate this specialy\n     */\n    @HostBinding('class.first-animate')\n    public firstToAnimate: boolean;\n\n    /**\n     * Animation for component state\n     */\n     @HostBinding('@componentContent')\n     public componentState: boolean = true;\n\n    //######################### constructor #########################\n    constructor(protected _changeDetector: ChangeDetectorRef)\n    {\n    }\n\n    //######################### public methods #########################\n\n    /**\n     * Explicitly runs invalidation of content (change detection)\n     */\n    public invalidateVisuals(): void\n    {\n        this._changeDetector.detectChanges();\n    }\n}","<div class=\"flex-row align-items-center\">\r\n    <collapsible-icon [(visible)]=\"detailVisible\"></collapsible-icon>\r\n    <div>Dáta (pulz)</div>\r\n    <div>10:30:45</div>\r\n    <div>Hodnota merania</div>\r\n</div>\r\n\r\n<div *ngIf=\"detailVisible\" @slideInOut>\r\n    detail\r\n    <div>lakewjfalkejf</div>\r\n    <div>lakewjfalkejf</div>\r\n    <div>lakewjfalkejf</div>\r\n    <div>lakewjfalkejf</div>\r\n    <div>lakewjfalkejf</div>\r\n    <div>lakewjfalkejf</div>\r\n    <div>lakewjfalkejf</div>\r\n    <div>lakewjfalkejf</div>\r\n    <div>lakewjfalkejf</div>\r\n    <div>lakewjfalkejf</div>\r\n</div>","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {slideInOutTrigger} from '@anglr/animations';\n\nimport {DeviceDetail} from '../../types/deviceDetail.interface';\nimport {componentContentTrigger} from '../../../../../misc/animations';\nimport {DeviceDetailBase} from '../deviceDetailBase';\n\n/**\n * Component used for rendering detail of 'pulse' device\n */\n@Component(\n{\n    selector: 'pulse-device-detail',\n    templateUrl: 'pulseDeviceDetail.component.html',\n    styleUrls: ['pulseDeviceDetail.component.scss'],\n    host:\n    {\n        '[class.highlight-block]': 'true'\n    },\n    animations: [slideInOutTrigger, componentContentTrigger],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PulseDeviceDetailComponent extends DeviceDetailBase implements DeviceDetail\n{\n}","import {Component, ChangeDetectionStrategy, ElementRef} from '@angular/core';\nimport {curveMonotoneX, extent, scaleLinear, scaleOrdinal, scaleTime, select, timeParse, csvParse, area, max, axisBottom, axisLeft} from 'd3';\n\nconst csv =\n`date,PVkW,TBLkW\n2016/05/19 00:00,0.0,239.50626\n2016/05/19 01:00,0.0,206.19063\n2016/05/19 02:00,0.0,214.84766000000002\n2016/05/19 03:00,0.0,181.61172\n2016/05/19 04:00,0.0,170.51875\n2016/05/19 05:00,0.0,183.08907\n2016/05/19 06:00,0.0,216.7539\n2016/05/19 07:00,103.1,177.90312\n2016/05/19 08:00,319.2,217.39217999999997\n2016/05/19 09:00,366.5,261.4992\n2016/05/19 10:00,701.4,321.71405\n2016/05/19 11:00,1022.1,313.33124\n2016/05/19 12:00,1151.2,298.8094\n2016/05/19 13:00,1173.1,309.1164\n2016/05/19 14:00,1136.9,291.63672\n2016/05/19 15:00,1141.4,331.23984\n2016/05/19 16:00,486.5,316.14297\n2016/05/19 17:00,759.7,269.61014\n2016/05/19 18:00,375.7,258.6242\n2016/05/19 19:00,113.1,259.47266\n2016/05/19 20:00,5.9,294.9992\n2016/05/19 21:00,0.0,301.95703\n2016/05/19 22:00,0.0,347.30078\n2016/05/19 23:00,0.0,244.0953\n2016/05/20 00:00,0.0,250.16718999999998\n2016/05/20 01:00,0.0,236.74374\n2016/05/20 02:00,0.0,236.65155\n2016/05/20 03:00,0.0,215.8172\n2016/05/20 04:00,0.0,263.45547\n2016/05/20 05:00,0.0,235.24765\n2016/05/20 06:00,0.0,239.89687\n2016/05/20 07:00,94.6,228.99219\n2016/05/20 08:00,361.4,235.61717000000002\n2016/05/20 09:00,628.7,296.9117\n2016/05/20 10:00,890.9,300.43124\n2016/05/20 11:00,1040.4,326.11017000000004\n2016/05/20 12:00,1177.4,346.31952\n2016/05/20 13:00,1215.4,325.96094\n2016/05/20 14:00,1187.9,295.23904\n2016/05/20 15:00,1090.6,304.12732\n2016/05/20 16:00,962.1,381.3164\n2016/05/20 17:00,719.9,335.2672\n2016/05/20 18:00,472.9,198.23438000000002\n2016/05/20 19:00,156.7,209.66406\n2016/05/20 20:00,12.0,210.47342999999998\n2016/05/20 21:00,0.0,244.43282000000002\n2016/05/20 22:00,0.0,233.48515\n2016/05/20 23:00,0.0,250.00702\n2016/05/21 00:00,0.0,256.9742\n2016/05/21 01:00,0.0,238.1961\n2016/05/21 02:00,0.0,217.1461\n2016/05/21 03:00,0.0,217.98515\n2016/05/21 04:00,0.0,195.2664\n2016/05/21 05:00,0.0,211.32422000000003\n2016/05/21 06:00,0.0,196.6211\n2016/05/21 07:00,33.5,189.13516\n2016/05/21 08:00,44.1,233.9078\n2016/05/21 09:00,289.3,305.66486000000003\n2016/05/21 10:00,191.3,321.01797\n2016/05/21 11:00,354.5,290.99844\n2016/05/21 12:00,700.7,293.85156\n2016/05/21 13:00,676.3,359.50232\n2016/05/21 14:00,962.6,343.28516\n2016/05/21 15:00,721.1,457.98828\n2016/05/21 16:00,820.2,406.09296\n2016/05/21 17:00,828.0,256.93515\n2016/05/21 18:00,445.9,297.17343\n2016/05/21 19:00,190.5,257.10233\n2016/05/21 20:00,12.3,353.86484\n2016/05/21 21:00,0.0,280.41092000000003\n2016/05/21 22:00,0.0,262.20392000000004\n2016/05/21 23:00,0.0,220.90937999999997\n2016/05/22 00:00,0.0,240.6086`;\n\ninterface CsvData\n{\n    date: Date;\n    PVkW: number;\n    TBLkW:number;\n}\n\ninterface parsedData\n{\n    date: Date;\n    kW: number;\n}\n\n/**\n * Component used for rendering charts\n */\n@Component(\n{\n    selector: 'sample-chart',\n    template: '',\n    styles:[\n        `:host\n        {\n            display: block;\n        }`\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SampleChartComponent\n{\n    //######################### constructor #########################\n    constructor(private element: ElementRef<HTMLElement>)\n    {\n        const selfObj = select(this.element.nativeElement),\n            svg = selfObj.append('svg');\n\n        svg.attr('width', 960)\n            .attr('height', 500);\n\n        const margin = {top: 20, right: 20, bottom: 30, left: 50},\n            width = +svg.attr('width') - margin.left - margin.right,\n            height = +svg.attr('height') - margin.top - margin.bottom,\n            g = svg.append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n        // let selfObj = select(this.element.nativeElement),\n        //     margin = {top: 16, right: 10, bottom: 60, left: 40},\n        //     svgWidth = (+selfObj.property(\"offsetWidth\")),\n        //     svgHeight = 250,\n        //     height = +svgHeight - margin.top - margin.bottom,\n        //     svg = selfObj.append(\"svg\")\n        //         .attr(\"viewBox\", `0 0 ${svgWidth} ${svgHeight}`),\n        //     g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n        const parseDate = timeParse('%Y/%m/%d %H:%M');\n\n        function type(d, _, columns): CsvData\n        {\n            console.log('type', d, columns);\n\n            d.date = parseDate(d.date);\n\n            for (let i = 1, n = columns.length, c; i < n; ++i) d[c = columns[i]] = +d[c];\n\n            return d;\n          }\n\n        const color = scaleOrdinal()\n            .domain(['PVkW', 'TBLkW'])\n            .range(['rgba(249, 208, 87, 0.7)', 'rgba(54, 174, 175, 0.65)']);\n\n        const x = scaleTime().range([0, width]),\n            y = scaleLinear().range([height, 0]),\n            z = color;\n\n        const arrea = area<parsedData>()\n            .curve(curveMonotoneX)\n            .x(function(d) { return x(d.date); })\n            .y0(y(0))\n            .y1(function(d) { return y(d.kW); });\n\n        const data = csvParse(csv, type);\n\n        const sources = data.columns.slice(1).map(function(id: string) \n        {\n            return {\n                id: id,\n                values: data.map(function(d) \n                {\n                    return {date: d.date, kW: d[id] as number};\n                })\n            };\n        });\n\n        console.log(sources);\n\n        x.domain(extent(data, function(d) { return d.date; }));\n\n        y.domain(\n        [\n            0,\n            max(sources, function(c) { return max(c.values, function(d) { return d.kW; }); })\n        ]);\n        \n        z.domain(sources.map(function(c) { return c.id; }));\n        \n        g.append('g')\n            .attr('class', 'axis axis--x')\n            .attr('transform', 'translate(0,' + height + ')')\n            .call(axisBottom(x));\n        \n        g.append('g')\n            .attr('class', 'axis axis--y')\n            .call(axisLeft(y))\n            .append('text')\n            .attr('transform', 'rotate(-90)')\n            .attr('y', 6)\n            .attr('dy', '0.71em')\n            .attr('fill', '#000')\n            .text('Oxygen');\n        \n        const source = g.selectAll('.area')\n            .data(sources)\n            .enter().append('g')\n            .attr('class', function(d) { return `area ${d.id}`; });\n        \n        source.append('path')\n                .attr('d', function(d) { return arrea(d.values); })\n                .style('fill', function(d): any { return z(d.id); });\n          \n    }\n}","<div class=\"flex-row align-items-center\">\r\n    <collapsible-icon [(visible)]=\"detailVisible\"></collapsible-icon>\r\n    <div>Dáta (saturation)</div>\r\n    <div>10:30:45</div>\r\n    <div>Hodnota merania</div>\r\n</div>\r\n\r\n<div *ngIf=\"detailVisible\" @slideInOut>\r\n    saturation\r\n\r\n    <sample-chart></sample-chart>\r\n</div>","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {slideInOutTrigger} from '@anglr/animations';\n\nimport {DeviceDetail} from '../../types/deviceDetail.interface';\nimport {componentContentTrigger} from '../../../../../misc/animations';\nimport {DeviceDetailBase} from '../deviceDetailBase';\n\n/**\n * Component used for rendering detail of 'saturation' device\n */\n@Component(\n{\n    selector: 'pulse-device-detail',\n    templateUrl: 'saturationDeviceDetail.component.html',\n    styleUrls: ['saturationDeviceDetail.component.scss'],\n    host:\n    {\n        '[class.highlight-block]': 'true'\n    },\n    animations: [slideInOutTrigger, componentContentTrigger],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SaturationDetailComponent extends DeviceDetailBase implements DeviceDetail\n{\n}","import {animate, animateChild, query, stagger, style, transition, trigger} from '@angular/animations';\n\n/**\n * Animation used for animating change of displayed details\n */\nexport const detailsAnimated = trigger('detailsAnimated',\n[\n    transition('* => *',\n    [\n        style(\n        {\n            position: 'relative'\n        }),\n        query(':enter',\n        [\n            style(\n            {\n                transform: 'rotateX(-68deg)',\n                opacity: 0\n            })\n        ], {optional: true}),\n        query(':leave',\n        [\n            stagger(50,\n            [\n                animate(220, style(\n                {\n                    transform: 'translateX(100%)'\n                }))\n            ])\n        ], {optional: true}),\n        query(':leave',\n        [\n            //TODO - report bug with setting style or animating after stagger to all queried elements at once\n            animate(0, style(\n            {\n                opacity: 0\n            })),\n            style(\n            {\n                position: 'absolute'\n            })\n        ], {optional: true, limit: 20}),\n        query('.first-animate:enter',\n        [\n            style(\n            {\n                opacity: 1,\n                transform: 'translateX(-100%)',\n            }),\n            animate(220, style(\n            {\n                transform: 'translateX(0)',\n            })),\n            animateChild()\n        ], {optional: true}),\n        query(':not(.first-animate):enter',\n        [\n            stagger(60,\n            [\n                animate(550, style(\n                {\n                    transform: 'rotateX(0)',\n                    opacity: 1\n                }))\n            ])\n        ], {optional: true, limit: 20})\n    ])\n]);","import {Directive, HostListener} from '@angular/core';\nimport {TitledDialogService} from '@anglr/common/material';\n\nimport {StartSessionComponent} from '../../components';\n\n/**\n * Directive used for opening and communication with start session dialog\n */\n@Directive(\n{\n    selector: '[startSession]'\n})\nexport class StartSessionDirective\n{\n    //######################### constructors #########################\n    constructor(private _dialogSvc: TitledDialogService)\n    {\n    }\n\n    //######################### public methods - host #########################\n\n    /**\n     * Method that displays dialog on click\n     */\n    @HostListener('click')\n    public showDialog()\n    {\n        this._dialogSvc.open(StartSessionComponent,\n        {\n            title: 'start session',\n            width: '40vw'\n        });\n    }\n}","import {Directive, HostListener} from '@angular/core';\nimport {TitledDialogService} from '@anglr/common/material';\n\nimport {EndSessionComponent} from '../../components';\n\n/**\n * Directive used for opening and communication with end session dialog\n */\n@Directive(\n{\n    selector: '[endSession]'\n})\nexport class EndSessionDirective\n{\n    //######################### constructors #########################\n    constructor(private _dialogSvc: TitledDialogService)\n    {\n    }\n\n    //######################### public methods - host #########################\n\n    /**\n     * Method that displays dialog on click\n     */\n    @HostListener('click')\n    public showDialog()\n    {\n        this._dialogSvc.open(EndSessionComponent,\n        {\n            title: 'end session',\n            width: '40vw'\n        });\n    }\n}","import {ComponentFactoryResolver, EventEmitter, ComponentRef, Directive, OnChanges, SimpleChanges, ViewContainerRef, Output, Input} from '@angular/core';\n\nimport {DeviceDetail} from '../../types/deviceDetail.interface';\nimport {DeviceDetailData} from '../../types/deviceDetailData.interface';\n\n/**\n  * Creates instance of component that implements DeviceDetail\n  */\n@Directive(\n{\n    selector: '[deviceDetailData]',\n    exportAs: 'deviceDetailData'\n})\nexport class DeviceDetailDataDirective implements OnChanges\n{\n    //######################### private fields #########################\n\n    /**\n     * Created component reference\n     */\n    private _componentRef: ComponentRef<DeviceDetail>|null = null;\n\n    //######################### public properties - inputs #########################\n\n    /**\n     * Data used for rendering device detail\n     */\n    @Input()\n    public deviceDetailData: DeviceDetailData;\n\n    /**\n     * Indication whether is rendered detail last in list\n     */\n    @Input()\n    public last: boolean = false;\n\n    /**\n     * Indication whether is rendered detail first in list\n     */\n    @Input()\n    public first: boolean = false;\n\n    //######################### public properties - outputs #########################\n\n    /**\n     * Occurs when component is created or destroyed, it can send instance of component, or null\n     */\n    @Output()\n    public poistenecDynamicDetailCreated: EventEmitter<DeviceDetail|null> = new EventEmitter<DeviceDetail|null>();\n\n    //######################### public properties #########################\n\n    /**\n     * Instance of dynamically created component \n     */\n    public get component(): DeviceDetail|null\n    {\n        return this._componentRef?.instance;\n    }\n\n    //######################### constructor #########################\n    constructor(private _viewContainerRef: ViewContainerRef)\n    {\n    }\n\n    //######################### public methods - implementation of OnChanges #########################\n    \n    /**\n     * Called when input value changes\n     */\n    public ngOnChanges(_changes: SimpleChanges)\n    {\n        this._viewContainerRef.clear();\n        this._componentRef = null;\n\n        // if (this.poistenecDynamicDetail && this.poistenecDynamicDetail.component)\n        {\n            const elInjector = this._viewContainerRef.injector;\n\n            const componentFactoryResolver: ComponentFactoryResolver = elInjector.get(ComponentFactoryResolver);\n            const componentFactory = componentFactoryResolver.resolveComponentFactory(this.deviceDetailData.componentType);\n            this._componentRef = this._viewContainerRef.createComponent<DeviceDetail>(componentFactory, this._viewContainerRef.length, elInjector, null);\n        }\n\n        if(this.component)\n        {\n            this.component.last = this.last;\n            this.component.first = this.first;\n        }\n\n        this.poistenecDynamicDetailCreated.emit(this.component);\n    }\n}\n","<div class=\"page-title top-border-round flex-row padding-none align-items-center\">\r\n    <div class=\"flex-1 extra-large-text title-text\">Meno Priezvisko, 321123/3212, 44, Mudr. Lekár</div>\r\n\r\n    <div>\r\n        <button type=\"button\" class=\"btn btn-primary margin-right-small\" startSession>\r\n            <span></span>\r\n            <span>start session</span>\r\n        </button>\r\n        \r\n        <button type=\"button\" class=\"btn btn-primary margin-right-small\" endSession>\r\n            <span></span>\r\n            <span>end session</span>\r\n        </button>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"flex-1 flex-row\">\r\n    <!-- LEFT SIDE -->\r\n    <div class=\"secondary-block flex-2 bottom-left-border-round padding-horizontal-small\">\r\n        <device class=\"highlight-block margin-bottom-small\" (detailLoad)=\"loadDetail()\"></device>\r\n        <device class=\"highlight-block margin-bottom-small\" (detailLoad)=\"loadDetail()\"></device>\r\n        <device class=\"highlight-block margin-bottom-small\" (detailLoad)=\"loadDetail()\"></device>\r\n    </div>\r\n    \r\n    <!-- RIGHT SIDE -->\r\n    <div class=\"primary-block flex-3 bottom-right-border-round padding-horizontal-small flex-column\">\r\n        <div class=\"overflow-vertical-scroll thin-scrollbar flex-1 details-container\" [@detailsAnimated]=\"details\">\r\n            <ng-template ngFor [ngForOf]=\"details\" let-detail let-last=\"last\" let-first=\"first\">\r\n                <ng-template [deviceDetailData]=\"detail\" [last]=\"last\" [first]=\"first\"></ng-template>\r\n            </ng-template>\r\n        </div>\r\n    </div>\r\n</div>","import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {AuthGuard, Authorize} from '@anglr/authentication';\n\nimport {DeviceDetailData} from '../misc/types/deviceDetailData.interface';\nimport {PulseDeviceDetailComponent, SaturationDetailComponent} from '../misc/components';\nimport {detailsAnimated} from './detail.animations';\n\n/**\n * View used for displaying detail page\n */\n@Component(\n{\n    selector: 'merania-detail',\n    templateUrl: 'detail.component.html',\n    styleUrls: ['detail.component.scss'],\n    animations: [detailsAnimated],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'detail/:id', canActivate: [AuthGuard]})\n@Authorize('merania-detail-page')\nexport class MeraniaDetailComponent\n{\n    //######################### public properties - template bindings #########################\n\n    /**\n     * Array of details data\n     */\n    public details: DeviceDetailData[] =\n    [\n        {\n            componentType: PulseDeviceDetailComponent\n        },\n        {\n            componentType: PulseDeviceDetailComponent\n        },\n        {\n            componentType: PulseDeviceDetailComponent\n        },\n        {\n            componentType: SaturationDetailComponent\n        },\n        {\n            componentType: SaturationDetailComponent\n        },\n        {\n            componentType: PulseDeviceDetailComponent\n        },\n        {\n            componentType: PulseDeviceDetailComponent\n        },\n        {\n            componentType: PulseDeviceDetailComponent\n        }\n    ];\n\n    //######################### public methods - template bindings #########################\n\n    /**\n     * Loads detail\n     */\n    public loadDetail()\n    {\n        this.details = \n        [\n            {\n                componentType: PulseDeviceDetailComponent\n            },\n            {\n                componentType: SaturationDetailComponent\n            },\n            {\n                componentType: SaturationDetailComponent\n            },\n            {\n                componentType: PulseDeviceDetailComponent\n            },\n            {\n                componentType: PulseDeviceDetailComponent\n            },\n            {\n                componentType: SaturationDetailComponent\n            },\n            {\n                componentType: SaturationDetailComponent\n            },\n            {\n                componentType: SaturationDetailComponent\n            },\n            {\n                componentType: PulseDeviceDetailComponent\n            },\n            {\n                componentType: SaturationDetailComponent\n            },\n            {\n                componentType: PulseDeviceDetailComponent\n            },\n            {\n                componentType: PulseDeviceDetailComponent\n            }\n        ];\n    }\n}","import {Injectable} from '@angular/core';\nimport {RESTClient, GET, BaseUrl, DefaultHeaders} from '@anglr/rest';\nimport {Observable} from 'rxjs';\n\nimport {PagedData} from '../../../misc/types';\nimport {MeranieItem} from './merania.interface';\nimport {config} from '../../../config';\n\n\n/**\n * Service used for accessing 'meranie' resources\n */\n@Injectable()\n@BaseUrl(`${config.configuration.apiBaseUrl}merania`)\n@DefaultHeaders(config.configuration.defaultApiHeaders)\nexport class MeraniaService extends RESTClient\n{\n    //######################### public methods #########################\n\n    /**\n     * Gets information about running application\n     * @returns Observable\n     */\n    @GET('')\n    public getAllMerania(): Observable<PagedData<MeranieItem>>\n    {\n        return null;\n    }\n}","<div class=\"page-title top-border-round\">PREHĽAD MERANÍ</div>\r\n\r\n<div class=\"flex-1 flex-column\">\r\n    <div class=\"primary-block padding-horizontal-small\">\r\n        <form novalidate class=\"tight\">\r\n            <div class=\"flex flex-row\">\r\n                <div class=\"flex-1\"><ng-template [ngIf]=\"filterCollapsed\">{{filter | formValuePreview}}</ng-template></div>\r\n                <div class=\"three-lines\" maxWidthQuery (click)=\"filterCollapsed = !filterCollapsed\" (visibleChange)=\"filterCollapsed = !$event; invalidateVisuals()\"></div>\r\n            </div>\r\n\r\n            <div class=\"filter\" *ngIf=\"!filterCollapsed\" [formGroup]=\"filter\">\r\n                <!-- RODNE CISLO -->\r\n                <div class=\"form-group\">\r\n                    <label class=\"control-label\">Rodné číslo</label>\r\n\r\n                    <input class=\"form-control\" placeholder=\"Rodné číslo\" formControlName=\"rc\">\r\n                </div>\r\n\r\n                <!-- PRIEZVISKO -->\r\n                <div class=\"form-group\">\r\n                    <label class=\"control-label\">Priezvisko</label>\r\n\r\n                    <input class=\"form-control\">\r\n                </div>\r\n\r\n                <!-- VEK -->\r\n                <div class=\"form-group\">\r\n                    <label class=\"control-label\">Vek</label>\r\n\r\n                    <div class=\"input-group\">\r\n                        <span class=\"input-group-addon\">od</span>\r\n                        <input class=\"form-control\">\r\n\r\n                        <span class=\"input-group-addon\">do</span>\r\n                        <input class=\"form-control\">\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- HOSPTALIZACIA -->\r\n                <div class=\"form-group\">\r\n                    <label class=\"control-label\">Hospitalizácia</label>\r\n\r\n                    <ng-select></ng-select>\r\n                </div>\r\n\r\n                <!-- HLAVNA DG -->\r\n                <div class=\"form-group\">\r\n                    <label class=\"control-label\">Hlavná Dg.</label>\r\n\r\n                    <ng-select editStyle></ng-select>\r\n                </div>\r\n\r\n                <!-- PRISTROJE -->\r\n                <div class=\"form-group\">\r\n                    <label class=\"control-label\">Prístroje</label>\r\n\r\n                    <input class=\"form-control\">\r\n                </div>\r\n\r\n                <!-- STAV -->\r\n                <div class=\"form-group\">\r\n                    <label class=\"control-label\">Stav</label>\r\n\r\n                    <input class=\"form-control\">\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"flex-row\">\r\n                <div class=\"flex-1\">\r\n                </div>\r\n\r\n                <div class=\"flex-row flex-end\">\r\n                    <btn-column-selection [grid]=\"grid\" class=\"margin-right-small\"></btn-column-selection>\r\n\r\n                    <button type=\"button\" class=\"btn btn-info margin-right-small\" startSession>\r\n                        <span></span>\r\n                        <span>start session</span>\r\n                    </button>\r\n\r\n                    <button type=\"button\" class=\"btn btn-default margin-right-small\" type=\"button\">\r\n                        <span class=\"fas fa-sync\"></span>\r\n                        <span>obnoviť</span>\r\n                    </button>\r\n\r\n                    <button class=\"btn btn-primary\" type=\"submit\">\r\n                        <span class=\"fa fa-search\"></span>\r\n                        <span>hľadať</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\n    <!-- GRID -->\r\n    <div class=\"flex-1 flex-column\">\r\n        <div class=\"padding-horizontal-small bottom-border-round primary-block flex-column padding-top-extra-small max-height-full\">\r\n            <ng-grid class=\"flex-1 flex-column\" #grid [gridOptions]=\"gridOptions\">\r\n                <basic-table-metadata>\r\n                    <basic-table-column id=\"rc\" name=\"rc\" title=\"RČ/BIČ\" headerTooltip=\"Rodné číslo/BIČ\"></basic-table-column>\r\n                    <basic-table-column id=\"menoPriezvisko\" name=\"menoPriezvisko\" title=\"Meno a priezvisko\"></basic-table-column>\r\n                    <basic-table-column id=\"vek\" name=\"vek\" title=\"Vek\"></basic-table-column>\r\n\r\n                    <basic-table-column id=\"hospOd\" name=\"hospOd\" title=\"Hosp. od\">\r\n                        <ng-template #bodyTemplate let-row>{{row?.hospOd | dateFormat}}</ng-template>\r\n                    </basic-table-column>\r\n\r\n                    <basic-table-column id=\"hospDo\" name=\"hospDo\" title=\"Hosp. do\">\r\n                        <ng-template #bodyTemplate let-row>{{row?.hospDo | dateFormat}}</ng-template>\r\n                    </basic-table-column>\r\n\r\n                    <basic-table-column id=\"hlavnaDg\" name=\"hlavnaDg\" title=\"Hlavná Dg.\"></basic-table-column>\r\n                    <basic-table-column id=\"pridelenyLekar\" name=\"pridelenyLekar\" title=\"Pridelený lekár\"></basic-table-column>\r\n                    <basic-table-column id=\"pristroj\" name=\"pristroj\" title=\"Prístroj\"></basic-table-column>\r\n                    <basic-table-column id=\"stav\" name=\"stav\" title=\"Stav\"></basic-table-column>\r\n\r\n                    <basic-table-column id=\"detail\" name=\"detail\" title=\"Detail\" [titleVisible]=\"false\" cellClass=\"flex-row\">\r\n                        <ng-template #bodyTemplate let-row>\r\n                            <a [routerLink]=\"['../detail', row?.id]\" class=\"btn-icon align-self-center\">\r\n                                <span class=\"double-right-icon\"></span>\r\n                            </a>\r\n                        </ng-template>\r\n                    </basic-table-column>\r\n                </basic-table-metadata>\r\n            </ng-grid>\r\n        </div>\r\n    </div>\r\n</div>","import {Component, ChangeDetectionStrategy, ChangeDetectorRef} from '@angular/core';\nimport {FormBuilder} from '@angular/forms';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {AuthGuard, Authorize} from '@anglr/authentication';\nimport {ComponentRedirectRoute, ComponentRoute} from '@anglr/common/router';\nimport {AsyncDataLoaderOptions, SimpleOrdering} from '@anglr/grid';\nimport {Observable} from 'rxjs';\n\nimport {BasePrehladComponent} from '../../../misc/basePrehladComponent';\nimport {MeraniaService, MeranieItem} from '../../../services/api/merania';\nimport {Orderable, Pageable, PagedData} from '../../../misc/types';\n\n/**\n * Page used for displaying preview of 'meranie'\n */\n@Component(\n{\n    selector: 'prehlad-view',\n    templateUrl: 'prehlad.component.html',\n    styleUrls: ['prehlad.component.scss'],\n    providers: [MeraniaService],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@Authorize('merania-prehlad-page')\n@ComponentRedirectRoute('', 'prehlad', true)\n@ComponentRoute({path: 'prehlad', canActivate: [AuthGuard]})\nexport class MeraniaPrehladComponent extends BasePrehladComponent<any, MeranieItem>\n{\n    //######################### protected properties #########################\n\n    /**\n     * Gets default value of filter\n     */\n    protected get defaultFilterValue(): any\n    {\n        return {\n            rc: null\n        };\n    }\n\n    //######################### constructor #########################\n    constructor(formBuilder: FormBuilder,\n                route: ActivatedRoute,\n                router: Router,\n                private _dataSvc: MeraniaService,\n                changeDetector: ChangeDetectorRef)\n    {\n        super(formBuilder, route, router, changeDetector);\n\n        this.gridOptions =\n        {\n            plugins:\n            {\n                dataLoader:\n                {\n                    options: <AsyncDataLoaderOptions<MeranieItem, SimpleOrdering>>\n                    {\n                        dataCallback: this._getData\n                    }\n                }\n            }\n        };\n    }\n\n    //######################### protected methods #########################\n\n    /**\n     * Gets data for prehlad\n     * @param paging Information about requested paging\n     * @param ordering Information about requested ordering\n     * @param filter Information about requested filter\n     */\n    protected getPrehlad(paging?: Pageable,\n                         ordering?: Orderable,\n                         filter?: any): Observable<PagedData<MeranieItem>>\n    {\n        return this._dataSvc.getAllMerania();\n    }\n}","import {MeraniaDetailComponent} from './detail/detail.component';\nimport {MeraniaPrehladComponent} from './prehlad/prehlad.component';\n\nexport const components =\n[\n    MeraniaPrehladComponent,\n    MeraniaDetailComponent\n];","import {NgModule} from '@angular/core';\nimport {ModuleRoutes} from '@anglr/common/router';\n\nimport {AnimatedIconsModule, CollapsibleModule, DisplayingFeatureModule, FormsFeatureModule, FormValuePreviewModule, GridFeatureModule, MediaQueriesModule, SessionModalsModule, ThreeLinesIconModule, VahaTagModule, VyberStlpcovBtnModule} from '../../modules';\nimport {components} from './merania.routes';\nimport {DeviceComponent, MeasuredValueComponent, PulseDeviceDetailComponent, SampleChartComponent, SaturationDetailComponent} from './misc/components';\nimport {DeviceDetailDataDirective} from './misc/directives';\n\n/**\n * Module for merania pages\n */\n@NgModule(\n{\n    imports:\n    [\n        DisplayingFeatureModule,\n        FormsFeatureModule,\n        GridFeatureModule,\n        SessionModalsModule,\n        CollapsibleModule,\n        VahaTagModule,\n        VyberStlpcovBtnModule,\n        ThreeLinesIconModule,\n        MediaQueriesModule,\n        AnimatedIconsModule,\n        FormValuePreviewModule\n    ],\n    declarations:\n    [\n        ...components,\n        DeviceComponent,\n        MeasuredValueComponent,\n        DeviceDetailDataDirective,\n        PulseDeviceDetailComponent,\n        SaturationDetailComponent,\n        SampleChartComponent\n    ]\n})\n@ModuleRoutes(components)\nexport class MeraniaModule\n{\n}"],"sourceRoot":""}