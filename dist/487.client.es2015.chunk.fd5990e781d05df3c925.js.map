{"version":3,"sources":["webpack://telecovid/./app/pages/+default/login/login.component.html","webpack://telecovid/./app/pages/+default/login/login.component.ts","webpack://telecovid/./app/pages/+default/default.routes.ts","webpack://telecovid/./app/pages/+default/default.module.ts"],"names":["LoginComponent","_authService","_router","_activeRoute","_changeDetector","_logger","formBuilder","authenticationError","this","form","group","userName","password","rememberMe","login","value","pipe","catchError","e","error","detectChanges","E","subscribe","snapshot","queryParams","returnUrl","navigateByUrl","navigate","path","data","animation","components","DefaultModule"],"mappings":"2eAGI,iBACI,O,oBACJ,Q,MAF4D,0BACxD,sG,ICqBKA,EAAc,MAevB,YAAoBC,EACAC,EACAC,EACAC,EACgBC,EACxBC,GALQ,KAAAL,eACA,KAAAC,UACA,KAAAC,eACA,KAAAC,kBACgB,KAAAC,UAP7B,KAAAE,qBAA+B,EAUlCC,KAAKC,KAAOH,EAAYI,MACxB,CACIC,SAAU,KACVC,SAAU,KACVC,WAAY,OASb,QAGHL,KAAKP,aACAa,MAAMN,KAAKC,KAAKM,OAChBC,MAAK,EAAAC,EAAA,IAAWC,IAEbV,KAAKH,QAAQc,MAAM,qBAAqBD,MACxCV,KAAKD,qBAAsB,EAC3BC,KAAKJ,gBAAgBgB,gBAEd,EAAAC,MAEVC,WAAU,KAEPd,KAAKD,qBAAsB,EAE3BC,KAAKJ,gBAAgBgB,gBAElBZ,KAAKL,aAAaoB,SAASC,YAAYC,UAEtCjB,KAAKN,QAAQwB,cAAclB,KAAKL,aAAaoB,SAASC,YAAYC,WAIlEjB,KAAKN,QAAQyB,SAAS,CAAC,W,iCA5D9B3B,GAAc,2CAmBH,MAAM,W,kBAnBjBA,EAAc,sE,uiBDzB3B,gBACI,eAAwC,O,oBAAqB,OAE7D,qBAIA,iBAAkD,gCAAU,EAAAc,WACxD,gBACI,kBAAsB,O,oBAAuB,OAC7C,mB,qBACJ,OAEA,iBACI,mBAAsB,Q,qBAA0B,OAChD,mB,qBACJ,OAEA,oBAA8C,Q,qBAA8B,OAChF,OACJ,Q,MAnB4C,6BAEP,yCAIF,+BAED,gCACgC,oDAIhC,oCACoC,uDAGhB,0C,wFCGtC,CAAC,MAAkB,oBAItBd,E,mUAAc,GAD1B,OAAe,CAAC4B,KAAM,QAASC,KAAM,CAACC,UAAW,W,kIAgBZ,IACL,KACK,KACG,KAAiB,OAE7B,OApBhB9B,GCvBN,MAAM+B,EACb,CACI/B,G,8BCmBSgC,EAAa,Q,iCAAbA,I,kBAAAA,I,sBAXT,CACI,KACA,KACA,SAQKA,E,mUAAa,GADzB,QAAaD,IACDC","file":"487.client.es2015.chunk.fd5990e781d05df3c925.js","sourcesContent":["<div class=\"align-self-center\">\r\n    <h1 class=\"text-uppercase text-center\" >{{'gui' | translate}}</h1>\r\n\r\n    <div class=\"alert alert-danger\" *ngIf=\"authenticationError\" @slideInOut>\r\n        {{'Authentication failed! Please check your credentials and try again.' | translate}}\r\n    </div>\r\n\r\n    <form class=\"form\" role=\"form\" [formGroup]=\"form\" (submit)=\"login()\">\r\n        <div class=\"form-group\">\r\n            <label for=\"username\">{{'Login' | translate}}</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"username\" placeholder=\"{{'Your login' | translate}}\" formControlName=\"userName\">\r\n        </div>\r\n\r\n        <div class=\"form-group\">\r\n            <label for=\"password\">{{'Password' | translate}}</label>\r\n            <input type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"{{'Your password' | translate}}\" formControlName=\"password\">\r\n        </div>\r\n\r\n        <button type=\"submit\" class=\"btn btn-primary\">{{'Authenticate' | translate}}</button>\r\n    </form>\r\n</div>","import {Component, ChangeDetectionStrategy, ChangeDetectorRef, Inject} from '@angular/core';\nimport {Router, ActivatedRoute} from '@angular/router';\nimport {FormGroup, FormBuilder} from '@angular/forms';\nimport {ComponentRoute} from '@anglr/common/router';\nimport {AuthenticationService} from '@anglr/authentication';\nimport {slideInOutTrigger} from '@anglr/animations';\nimport {Logger, LOGGER} from '@anglr/common';\nimport {EMPTY} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\n\n/**\n * Page containing login form\n */\n@Component(\n{\n    selector: 'login-view',\n    templateUrl: 'login.component.html',\n    host:\n    {\n        '[class.justify-content-center]': 'true'\n    },\n    animations: [slideInOutTrigger],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n@ComponentRoute({path: 'login', data: {animation: 'login'}})\nexport class LoginComponent\n{\n    //######################### public properties #########################\n\n    /**\n     * Form group for login information\n     */\n    public form: FormGroup;\n\n    /**\n     * Indication that there is authentication error\n     */\n    public authenticationError: boolean = false;\n    \n    //######################### constructor #########################\n    constructor(private _authService: AuthenticationService<any>,\n                private _router: Router,\n                private _activeRoute: ActivatedRoute,\n                private _changeDetector: ChangeDetectorRef,\n                @Inject(LOGGER) private _logger: Logger,\n                formBuilder: FormBuilder)\n    {\n        this.form = formBuilder.group(\n        {\n            userName: null,\n            password: null,\n            rememberMe: null\n        });\n    }\n    \n    //######################### public methods #########################\n    \n    /**\n     * Logs in user\n     */\n    public login()\n    {\n        //TODO - add resolver that checks logged user and redirects to requested page\n        this._authService\n            .login(this.form.value)\n            .pipe(catchError(e =>\n            {\n                this._logger.error(`Failed to log in '${e}'`);\n                this.authenticationError = true;\n                this._changeDetector.detectChanges();\n                \n                return EMPTY;\n            }))\n            .subscribe(() =>\n            {\n                this.authenticationError = false;\n                \n                this._changeDetector.detectChanges();\n                \n                if(this._activeRoute.snapshot.queryParams.returnUrl)\n                {\n                    this._router.navigateByUrl(this._activeRoute.snapshot.queryParams.returnUrl);\n                }\n                else\n                {\n                    this._router.navigate(['/']);\n                }\n            });\n    }\n}","import {LoginComponent} from './login/login.component';\n\nexport const components =\n[\n    LoginComponent,\n];","import {NgModule} from '@angular/core';\nimport {ModuleRoutes} from '@anglr/common/router';\n\nimport {components} from './default.routes';\nimport {DebuggingFeatureModule, DisplayingFeatureModule, FormsFeatureModule} from '../../modules';\n\n/**\n * Module for Default application pages\n */\n@NgModule(\n{\n    imports:\n    [\n        DisplayingFeatureModule,\n        FormsFeatureModule,\n        DebuggingFeatureModule\n    ],\n    declarations:\n    [\n        ...components\n    ]\n})\n@ModuleRoutes(components)\nexport class DefaultModule\n{\n}"],"sourceRoot":""}